

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 01 18:17:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.35
    25                           ; Generated 05/05/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F67K40 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _PIR2bits	set	3637
    60  0000                     _PIR0bits	set	3635
    61  0000                     _PIE2bits	set	3627
    62  0000                     _PIE0bits	set	3625
    63  0000                     _CM1CON1bits	set	3793
    64  0000                     _CM1CON0bits	set	3792
    65  0000                     _CM1PCHbits	set	3795
    66  0000                     _CM1NCHbits	set	3794
    67  0000                     _DAC1CON1bits	set	3783
    68  0000                     _DAC1CON0bits	set	3782
    69  0000                     _T0CON0bits	set	4053
    70  0000                     _T0CON1bits	set	4054
    71  0000                     _TRISHbits	set	3976
    72  0000                     _TRISAbits	set	3969
    73  0000                     _TRISGbits	set	3975
    74  0000                     _LATFbits	set	3966
    75  0000                     _LATGbits	set	3967
    76  0000                     _LATHbits	set	3968
    77  0000                     _TMR0L	set	4051
    78  0000                     _TMR0H	set	4052
    79  0000                     _LATAbits	set	3961
    80  0000                     _INTCONbits	set	4082
    81  0000                     _TRISFbits	set	3974
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  0005E0                     __pcinit:
    87                           	callstack 0
    88  0005E0                     start_initialization:
    89                           	callstack 0
    90  0005E0                     __initialization:
    91                           	callstack 0
    92  0005E0                     end_of_initialization:
    93                           	callstack 0
    94  0005E0                     __end_of__initialization:
    95                           	callstack 0
    96  0005E0  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97  0005E2  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98  0005E4  0100               	movlb	0
    99  0005E6  EF1E  F002         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	callstack 0
   104  000001                     ?___lwmod:
   105                           	callstack 0
   106  000001                     LEDarray_disp_bin@number:
   107                           	callstack 0
   108  000001                     SmallHours@minute:
   109                           	callstack 0
   110  000001                     ___lwmod@dividend:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0x0
   114  000001                     	ds	1
   115  000002                     SmallHours@hour:
   116                           	callstack 0
   117                           
   118                           ; 1 bytes @ 0x1
   119  000002                     	ds	1
   120  000003                     ___lwmod@divisor:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x2
   124  000003                     	ds	2
   125  000005                     ___lwmod@counter:
   126                           	callstack 0
   127                           
   128                           ; 1 bytes @ 0x4
   129  000005                     	ds	1
   130  000006                     Timekeeper@pyear:
   131                           	callstack 0
   132                           
   133                           ; 2 bytes @ 0x5
   134  000006                     	ds	2
   135  000008                     Timekeeper@pmonth:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x7
   139  000008                     	ds	2
   140  00000A                     Timekeeper@pday:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x9
   144  00000A                     	ds	2
   145  00000C                     Timekeeper@phour:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0xB
   149  00000C                     	ds	2
   150  00000E                     Timekeeper@pminute:
   151                           	callstack 0
   152                           
   153                           ; 2 bytes @ 0xD
   154  00000E                     	ds	2
   155  000010                     ??_Timekeeper:
   156                           
   157                           ; 1 bytes @ 0xF
   158  000010                     	ds	2
   159  000012                     Timekeeper@leapyear:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x11
   163  000012                     	ds	1
   164  000013                     main@year:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x12
   168  000013                     	ds	2
   169  000015                     main@minute:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x14
   173  000015                     	ds	1
   174  000016                     main@hour:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x15
   178  000016                     	ds	1
   179  000017                     main@day:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x16
   183  000017                     	ds	1
   184  000018                     main@month:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x17
   188  000018                     	ds	1
   189                           
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 16 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;  year            2   18[COMRAM] unsigned int 
   200 ;;  month           1   23[COMRAM] unsigned char 
   201 ;;  day             1   22[COMRAM] unsigned char 
   202 ;;  hour            1   21[COMRAM] unsigned char 
   203 ;;  minute          1   20[COMRAM] unsigned char 
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   214 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   216 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   217 ;;Total ram usage:        6 bytes
   218 ;; Hardware stack levels required when called: 3
   219 ;; This function calls:
   220 ;;		_Comp1_init
   221 ;;		_Interrupts_init
   222 ;;		_LEDarray_disp_bin
   223 ;;		_Lights_init
   224 ;;		_SmallHours
   225 ;;		_Timekeeper
   226 ;;		_Timer0_init
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text0
   233  00043C                     __ptext0:
   234                           	callstack 0
   235  00043C                     _main:
   236                           	callstack 28
   237  00043C                     
   238                           ;main.c: 18:     unsigned int year = 2021;
   239  00043C  0E07               	movlw	7
   240  00043E  6E14               	movwf	(main@year+1)^0,c
   241  000440  0EE5               	movlw	229
   242  000442  6E13               	movwf	main@year^0,c
   243                           
   244                           ;main.c: 19:     char month = 11;
   245  000444  0E0B               	movlw	11
   246  000446  6E18               	movwf	main@month^0,c
   247                           
   248                           ;main.c: 20:     char day = 1;
   249  000448  0E01               	movlw	1
   250  00044A  6E17               	movwf	main@day^0,c
   251                           
   252                           ;main.c: 21:     char hour = 4;
   253  00044C  0E04               	movlw	4
   254  00044E  6E16               	movwf	main@hour^0,c
   255                           
   256                           ;main.c: 22:     char minute = 59;
   257  000450  0E3B               	movlw	59
   258  000452  6E15               	movwf	main@minute^0,c
   259  000454                     
   260                           ;main.c: 25:     Lights_init();
   261  000454  ECD3  F002         	call	_Lights_init	;wreg free
   262                           
   263                           ;main.c: 26:     Timer0_init();
   264  000458  ECC1  F002         	call	_Timer0_init	;wreg free
   265                           
   266                           ;main.c: 27:     Comp1_init();
   267  00045C  ECAE  F002         	call	_Comp1_init	;wreg free
   268  000460                     
   269                           ;main.c: 28:     Interrupts_init();
   270  000460  ECEA  F002         	call	_Interrupts_init	;wreg free
   271  000464                     l1149:
   272                           
   273                           ;main.c: 31:         Timekeeper(&year, &month, &day, &hour, &minute);
   274  000464  0E13               	movlw	low main@year
   275  000466  6E06               	movwf	Timekeeper@pyear^0,c
   276  000468  0E00               	movlw	high main@year
   277  00046A  6E07               	movwf	(Timekeeper@pyear+1)^0,c
   278  00046C  0E18               	movlw	low main@month
   279  00046E  6E08               	movwf	Timekeeper@pmonth^0,c
   280  000470  0E00               	movlw	high main@month
   281  000472  6E09               	movwf	(Timekeeper@pmonth+1)^0,c
   282  000474  0E17               	movlw	low main@day
   283  000476  6E0A               	movwf	Timekeeper@pday^0,c
   284  000478  0E00               	movlw	high main@day
   285  00047A  6E0B               	movwf	(Timekeeper@pday+1)^0,c
   286  00047C  0E16               	movlw	low main@hour
   287  00047E  6E0C               	movwf	Timekeeper@phour^0,c
   288  000480  0E00               	movlw	high main@hour
   289  000482  6E0D               	movwf	(Timekeeper@phour+1)^0,c
   290  000484  0E15               	movlw	low main@minute
   291  000486  6E0E               	movwf	Timekeeper@pminute^0,c
   292  000488  0E00               	movlw	high main@minute
   293  00048A  6E0F               	movwf	(Timekeeper@pminute+1)^0,c
   294  00048C  EC2A  F000         	call	_Timekeeper	;wreg free
   295  000490                     
   296                           ;main.c: 32:         LEDarray_disp_bin(hour);
   297  000490  5016               	movf	main@hour^0,w,c
   298  000492  ECE5  F001         	call	_LEDarray_disp_bin
   299  000496                     
   300                           ;main.c: 33:         SmallHours(hour, minute);
   301  000496  C015  F001         	movff	main@minute,SmallHours@minute
   302  00049A  5016               	movf	main@hour^0,w,c
   303  00049C  EC86  F002         	call	_SmallHours
   304  0004A0  EF32  F002         	goto	l1149
   305  0004A4  EF28  F000         	goto	start
   306  0004A8                     __end_of_main:
   307                           	callstack 0
   308                           
   309 ;; *************** function _Timer0_init *****************
   310 ;; Defined at:
   311 ;;		line 7 in file "timers.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; Hardware stack levels required when called: 1
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text1
   340  000582                     __ptext1:
   341                           	callstack 0
   342  000582                     _Timer0_init:
   343                           	callstack 29
   344  000582                     
   345                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   346  000582  50D6               	movf	214,w,c	;volatile
   347  000584  0B1F               	andlw	-225
   348  000586  0940               	iorlw	64
   349  000588  6ED6               	movwf	214,c	;volatile
   350  00058A                     
   351                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   352  00058A  88D6               	bsf	214,4,c	;volatile
   353                           
   354                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1110;
   355  00058C  50D6               	movf	214,w,c	;volatile
   356  00058E  0BF0               	andlw	-16
   357  000590  090E               	iorlw	14
   358  000592  6ED6               	movwf	214,c	;volatile
   359  000594                     
   360                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
   361  000594  88D5               	bsf	213,4,c	;volatile
   362                           
   363                           ;timers.c: 16:     TMR0H=0b00011011;
   364  000596  0E1B               	movlw	27
   365  000598  6ED4               	movwf	212,c	;volatile
   366                           
   367                           ;timers.c: 17:     TMR0L=0b00011110;
   368  00059A  0E1E               	movlw	30
   369  00059C  6ED3               	movwf	211,c	;volatile
   370  00059E                     
   371                           ;timers.c: 18:     T0CON0bits.T0EN=1;
   372  00059E  8ED5               	bsf	213,7,c	;volatile
   373  0005A0                     
   374                           ;timers.c: 19:     LATAbits.LATA3 = 0;
   375  0005A0  9679               	bcf	121,3,c	;volatile
   376  0005A2                     
   377                           ;timers.c: 20:     TRISAbits.TRISA3 = 0;
   378  0005A2  9681               	bcf	129,3,c	;volatile
   379  0005A4  0012               	return		;funcret
   380  0005A6                     __end_of_Timer0_init:
   381                           	callstack 0
   382                           
   383 ;; *************** function _Timekeeper *****************
   384 ;; Defined at:
   385 ;;		line 26 in file "timers.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;  pyear           2    5[COMRAM] PTR unsigned int 
   388 ;;		 -> main@year(2), 
   389 ;;  pmonth          2    7[COMRAM] PTR unsigned char 
   390 ;;		 -> main@month(1), 
   391 ;;  pday            2    9[COMRAM] PTR unsigned char 
   392 ;;		 -> main@day(1), 
   393 ;;  phour           2   11[COMRAM] PTR unsigned char 
   394 ;;		 -> main@hour(1), 
   395 ;;  pminute         2   13[COMRAM] PTR unsigned char 
   396 ;;		 -> main@minute(1), 
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  leapyear        1   17[COMRAM] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   408 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   411 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   412 ;;Total ram usage:       13 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; Hardware stack levels required when called: 2
   415 ;; This function calls:
   416 ;;		___lwmod
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text2
   423  000054                     __ptext2:
   424                           	callstack 0
   425  000054                     _Timekeeper:
   426                           	callstack 28
   427  000054                     
   428                           ;timers.c: 28:     char leapyear;;timers.c: 29:     if (*pyear % 4 == 0 && *pyear % 100 
      +                          != 0) {
   429  000054  C006  FFD9         	movff	Timekeeper@pyear,fsr2l
   430  000058  C007  FFDA         	movff	Timekeeper@pyear+1,fsr2h
   431  00005C  CFDE F010          	movff	postinc2,??_Timekeeper
   432  000060  CFDD F011          	movff	postdec2,??_Timekeeper+1
   433  000064  0E03               	movlw	3
   434  000066  1610               	andwf	??_Timekeeper^0,f,c
   435  000068  0E00               	movlw	0
   436  00006A  1611               	andwf	(??_Timekeeper+1)^0,f,c
   437  00006C  5010               	movf	??_Timekeeper^0,w,c
   438  00006E  1011               	iorwf	(??_Timekeeper+1)^0,w,c
   439  000070  A4D8               	btfss	status,2,c
   440  000072  EF3D  F000         	goto	u451
   441  000076  EF3F  F000         	goto	u450
   442  00007A                     u451:
   443  00007A  EF5A  F000         	goto	l1047
   444  00007E                     u450:
   445  00007E  C006  FFD9         	movff	Timekeeper@pyear,fsr2l
   446  000082  C007  FFDA         	movff	Timekeeper@pyear+1,fsr2h
   447  000086  CFDE F001          	movff	postinc2,___lwmod@dividend
   448  00008A  CFDD F002          	movff	postdec2,___lwmod@dividend+1
   449  00008E  0E00               	movlw	0
   450  000090  6E04               	movwf	(___lwmod@divisor+1)^0,c
   451  000092  0E64               	movlw	100
   452  000094  6E03               	movwf	___lwmod@divisor^0,c
   453  000096  EC54  F002         	call	___lwmod	;wreg free
   454  00009A  5001               	movf	?___lwmod^0,w,c
   455  00009C  1002               	iorwf	(?___lwmod+1)^0,w,c
   456  00009E  B4D8               	btfsc	status,2,c
   457  0000A0  EF54  F000         	goto	u461
   458  0000A4  EF56  F000         	goto	u460
   459  0000A8                     u461:
   460  0000A8  EF5A  F000         	goto	l1047
   461  0000AC                     u460:
   462  0000AC                     l1045:
   463                           
   464                           ;timers.c: 30:         leapyear = 1;
   465  0000AC  0E01               	movlw	1
   466  0000AE  6E12               	movwf	Timekeeper@leapyear^0,c
   467                           
   468                           ;timers.c: 31:     } else if (*pyear % 400 == 0) {
   469  0000B0  EF75  F000         	goto	l1053
   470  0000B4                     l1047:
   471  0000B4  C006  FFD9         	movff	Timekeeper@pyear,fsr2l
   472  0000B8  C007  FFDA         	movff	Timekeeper@pyear+1,fsr2h
   473  0000BC  CFDE F001          	movff	postinc2,___lwmod@dividend
   474  0000C0  CFDD F002          	movff	postdec2,___lwmod@dividend+1
   475  0000C4  0E01               	movlw	1
   476  0000C6  6E04               	movwf	(___lwmod@divisor+1)^0,c
   477  0000C8  0E90               	movlw	144
   478  0000CA  6E03               	movwf	___lwmod@divisor^0,c
   479  0000CC  EC54  F002         	call	___lwmod	;wreg free
   480  0000D0  5001               	movf	?___lwmod^0,w,c
   481  0000D2  1002               	iorwf	(?___lwmod+1)^0,w,c
   482  0000D4  A4D8               	btfss	status,2,c
   483  0000D6  EF6F  F000         	goto	u471
   484  0000DA  EF71  F000         	goto	u470
   485  0000DE                     u471:
   486  0000DE  EF73  F000         	goto	l1051
   487  0000E2                     u470:
   488  0000E2  EF56  F000         	goto	l1045
   489  0000E6                     l1051:
   490                           
   491                           ;timers.c: 34:         leapyear = 0;
   492  0000E6  0E00               	movlw	0
   493  0000E8  6E12               	movwf	Timekeeper@leapyear^0,c
   494  0000EA                     l1053:
   495                           
   496                           ;timers.c: 38:     if (LATAbits.LATA3) {++*pminute; LATAbits.LATA3 = 0;}
   497  0000EA  A679               	btfss	121,3,c	;volatile
   498  0000EC  EF7A  F000         	goto	u481
   499  0000F0  EF7C  F000         	goto	u480
   500  0000F4                     u481:
   501  0000F4  EF82  F000         	goto	l1059
   502  0000F8                     u480:
   503  0000F8  C00E  FFD9         	movff	Timekeeper@pminute,fsr2l
   504  0000FC  C00F  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   505  000100  2ADF               	incf	indf2,f,c
   506  000102  9679               	bcf	121,3,c	;volatile
   507  000104                     l1059:
   508                           
   509                           ;timers.c: 40:     if (*pminute == 60) {*pminute = 0; ++*phour;}
   510  000104  C00E  FFD9         	movff	Timekeeper@pminute,fsr2l
   511  000108  C00F  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   512  00010C  0E3C               	movlw	60
   513  00010E  18DE               	xorwf	postinc2,w,c
   514  000110  A4D8               	btfss	status,2,c
   515  000112  EF8D  F000         	goto	u491
   516  000116  EF8F  F000         	goto	u490
   517  00011A                     u491:
   518  00011A  EF9A  F000         	goto	l1065
   519  00011E                     u490:
   520  00011E  C00E  FFD9         	movff	Timekeeper@pminute,fsr2l
   521  000122  C00F  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   522  000126  0E00               	movlw	0
   523  000128  6EDF               	movwf	indf2,c
   524  00012A  C00C  FFD9         	movff	Timekeeper@phour,fsr2l
   525  00012E  C00D  FFDA         	movff	Timekeeper@phour+1,fsr2h
   526  000132  2ADF               	incf	indf2,f,c
   527  000134                     l1065:
   528                           
   529                           ;timers.c: 42:     if (*phour == 24) {*phour = 0; ++*pday;}
   530  000134  C00C  FFD9         	movff	Timekeeper@phour,fsr2l
   531  000138  C00D  FFDA         	movff	Timekeeper@phour+1,fsr2h
   532  00013C  0E18               	movlw	24
   533  00013E  18DE               	xorwf	postinc2,w,c
   534  000140  A4D8               	btfss	status,2,c
   535  000142  EFA5  F000         	goto	u501
   536  000146  EFA7  F000         	goto	u500
   537  00014A                     u501:
   538  00014A  EFB2  F000         	goto	l1071
   539  00014E                     u500:
   540  00014E  C00C  FFD9         	movff	Timekeeper@phour,fsr2l
   541  000152  C00D  FFDA         	movff	Timekeeper@phour+1,fsr2h
   542  000156  0E00               	movlw	0
   543  000158  6EDF               	movwf	indf2,c
   544  00015A  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   545  00015E  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   546  000162  2ADF               	incf	indf2,f,c
   547  000164                     l1071:
   548                           
   549                           ;timers.c: 44:     if (*pday == 29 && *pmonth == 2 && !leapyear) {
   550  000164  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   551  000168  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   552  00016C  0E1D               	movlw	29
   553  00016E  18DE               	xorwf	postinc2,w,c
   554  000170  A4D8               	btfss	status,2,c
   555  000172  EFBD  F000         	goto	u511
   556  000176  EFBF  F000         	goto	u510
   557  00017A                     u511:
   558  00017A  EFDF  F000         	goto	l1081
   559  00017E                     u510:
   560  00017E  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   561  000182  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   562  000186  0E02               	movlw	2
   563  000188  18DE               	xorwf	postinc2,w,c
   564  00018A  A4D8               	btfss	status,2,c
   565  00018C  EFCA  F000         	goto	u521
   566  000190  EFCC  F000         	goto	u520
   567  000194                     u521:
   568  000194  EFDF  F000         	goto	l1081
   569  000198                     u520:
   570  000198  5012               	movf	Timekeeper@leapyear^0,w,c
   571  00019A  A4D8               	btfss	status,2,c
   572  00019C  EFD2  F000         	goto	u531
   573  0001A0  EFD4  F000         	goto	u530
   574  0001A4                     u531:
   575  0001A4  EFDF  F000         	goto	l1081
   576  0001A8                     u530:
   577  0001A8                     
   578                           ;timers.c: 45:         *pday = 1;
   579  0001A8  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   580  0001AC  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   581  0001B0  0E01               	movlw	1
   582  0001B2  6EDF               	movwf	indf2,c
   583  0001B4                     
   584                           ;timers.c: 46:         ++*pmonth;
   585  0001B4  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   586  0001B8  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   587  0001BC  2ADF               	incf	indf2,f,c
   588  0001BE                     l1081:
   589                           
   590                           ;timers.c: 49:     if (*pday == 30 && *pmonth == 2 && leapyear) {
   591  0001BE  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   592  0001C2  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   593  0001C6  0E1E               	movlw	30
   594  0001C8  18DE               	xorwf	postinc2,w,c
   595  0001CA  A4D8               	btfss	status,2,c
   596  0001CC  EFEA  F000         	goto	u541
   597  0001D0  EFEC  F000         	goto	u540
   598  0001D4                     u541:
   599  0001D4  EF0C  F001         	goto	l1091
   600  0001D8                     u540:
   601  0001D8  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   602  0001DC  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   603  0001E0  0E02               	movlw	2
   604  0001E2  18DE               	xorwf	postinc2,w,c
   605  0001E4  A4D8               	btfss	status,2,c
   606  0001E6  EFF7  F000         	goto	u551
   607  0001EA  EFF9  F000         	goto	u550
   608  0001EE                     u551:
   609  0001EE  EF0C  F001         	goto	l1091
   610  0001F2                     u550:
   611  0001F2  5012               	movf	Timekeeper@leapyear^0,w,c
   612  0001F4  B4D8               	btfsc	status,2,c
   613  0001F6  EFFF  F000         	goto	u561
   614  0001FA  EF01  F001         	goto	u560
   615  0001FE                     u561:
   616  0001FE  EF0C  F001         	goto	l1091
   617  000202                     u560:
   618  000202                     
   619                           ;timers.c: 50:         *pday = 1;
   620  000202  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   621  000206  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   622  00020A  0E01               	movlw	1
   623  00020C  6EDF               	movwf	indf2,c
   624  00020E                     
   625                           ;timers.c: 51:         ++*pmonth;
   626  00020E  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   627  000212  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   628  000216  2ADF               	incf	indf2,f,c
   629  000218                     l1091:
   630                           
   631                           ;timers.c: 54:     if (*pday == 31 && (*pmonth == 4 || *pmonth == 6 || *pmonth == 9 || *
      +                          pmonth == 11)) {
   632  000218  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   633  00021C  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   634  000220  0E1F               	movlw	31
   635  000222  18DE               	xorwf	postinc2,w,c
   636  000224  A4D8               	btfss	status,2,c
   637  000226  EF17  F001         	goto	u571
   638  00022A  EF19  F001         	goto	u570
   639  00022E                     u571:
   640  00022E  EF58  F001         	goto	l1105
   641  000232                     u570:
   642  000232  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   643  000236  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   644  00023A  0E04               	movlw	4
   645  00023C  18DE               	xorwf	postinc2,w,c
   646  00023E  B4D8               	btfsc	status,2,c
   647  000240  EF24  F001         	goto	u581
   648  000244  EF26  F001         	goto	u580
   649  000248                     u581:
   650  000248  EF4D  F001         	goto	l1101
   651  00024C                     u580:
   652  00024C  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   653  000250  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   654  000254  0E06               	movlw	6
   655  000256  18DE               	xorwf	postinc2,w,c
   656  000258  B4D8               	btfsc	status,2,c
   657  00025A  EF31  F001         	goto	u591
   658  00025E  EF33  F001         	goto	u590
   659  000262                     u591:
   660  000262  EF4D  F001         	goto	l1101
   661  000266                     u590:
   662  000266  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   663  00026A  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   664  00026E  0E09               	movlw	9
   665  000270  18DE               	xorwf	postinc2,w,c
   666  000272  B4D8               	btfsc	status,2,c
   667  000274  EF3E  F001         	goto	u601
   668  000278  EF40  F001         	goto	u600
   669  00027C                     u601:
   670  00027C  EF4D  F001         	goto	l1101
   671  000280                     u600:
   672  000280  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   673  000284  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   674  000288  0E0B               	movlw	11
   675  00028A  18DE               	xorwf	postinc2,w,c
   676  00028C  A4D8               	btfss	status,2,c
   677  00028E  EF4B  F001         	goto	u611
   678  000292  EF4D  F001         	goto	u610
   679  000296                     u611:
   680  000296  EF58  F001         	goto	l1105
   681  00029A                     u610:
   682  00029A                     l1101:
   683                           
   684                           ;timers.c: 55:         *pday = 1;
   685  00029A  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   686  00029E  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   687  0002A2  0E01               	movlw	1
   688  0002A4  6EDF               	movwf	indf2,c
   689  0002A6                     
   690                           ;timers.c: 56:         ++*pmonth;
   691  0002A6  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   692  0002AA  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   693  0002AE  2ADF               	incf	indf2,f,c
   694  0002B0                     l1105:
   695                           
   696                           ;timers.c: 59:     if (*pday == 32 && (*pmonth == 1 || *pmonth == 3 || *pmonth == 5 || *
      +                          pmonth == 7 || *pmonth == 8 || *pmonth == 10 || *pmonth == 12)) {
   697  0002B0  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   698  0002B4  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   699  0002B8  0E20               	movlw	32
   700  0002BA  18DE               	xorwf	postinc2,w,c
   701  0002BC  A4D8               	btfss	status,2,c
   702  0002BE  EF63  F001         	goto	u621
   703  0002C2  EF65  F001         	goto	u620
   704  0002C6                     u621:
   705  0002C6  EFCA  F001         	goto	l1125
   706  0002CA                     u620:
   707  0002CA  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   708  0002CE  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   709  0002D2  04DE               	decf	postinc2,w,c
   710  0002D4  B4D8               	btfsc	status,2,c
   711  0002D6  EF6F  F001         	goto	u631
   712  0002DA  EF71  F001         	goto	u630
   713  0002DE                     u631:
   714  0002DE  EFBF  F001         	goto	l1121
   715  0002E2                     u630:
   716  0002E2  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   717  0002E6  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   718  0002EA  0E03               	movlw	3
   719  0002EC  18DE               	xorwf	postinc2,w,c
   720  0002EE  B4D8               	btfsc	status,2,c
   721  0002F0  EF7C  F001         	goto	u641
   722  0002F4  EF7E  F001         	goto	u640
   723  0002F8                     u641:
   724  0002F8  EFBF  F001         	goto	l1121
   725  0002FC                     u640:
   726  0002FC  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   727  000300  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   728  000304  0E05               	movlw	5
   729  000306  18DE               	xorwf	postinc2,w,c
   730  000308  B4D8               	btfsc	status,2,c
   731  00030A  EF89  F001         	goto	u651
   732  00030E  EF8B  F001         	goto	u650
   733  000312                     u651:
   734  000312  EFBF  F001         	goto	l1121
   735  000316                     u650:
   736  000316  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   737  00031A  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   738  00031E  0E07               	movlw	7
   739  000320  18DE               	xorwf	postinc2,w,c
   740  000322  B4D8               	btfsc	status,2,c
   741  000324  EF96  F001         	goto	u661
   742  000328  EF98  F001         	goto	u660
   743  00032C                     u661:
   744  00032C  EFBF  F001         	goto	l1121
   745  000330                     u660:
   746  000330  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   747  000334  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   748  000338  0E08               	movlw	8
   749  00033A  18DE               	xorwf	postinc2,w,c
   750  00033C  B4D8               	btfsc	status,2,c
   751  00033E  EFA3  F001         	goto	u671
   752  000342  EFA5  F001         	goto	u670
   753  000346                     u671:
   754  000346  EFBF  F001         	goto	l1121
   755  00034A                     u670:
   756  00034A  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   757  00034E  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   758  000352  0E0A               	movlw	10
   759  000354  18DE               	xorwf	postinc2,w,c
   760  000356  B4D8               	btfsc	status,2,c
   761  000358  EFB0  F001         	goto	u681
   762  00035C  EFB2  F001         	goto	u680
   763  000360                     u681:
   764  000360  EFBF  F001         	goto	l1121
   765  000364                     u680:
   766  000364  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   767  000368  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   768  00036C  0E0C               	movlw	12
   769  00036E  18DE               	xorwf	postinc2,w,c
   770  000370  A4D8               	btfss	status,2,c
   771  000372  EFBD  F001         	goto	u691
   772  000376  EFBF  F001         	goto	u690
   773  00037A                     u691:
   774  00037A  EFCA  F001         	goto	l1125
   775  00037E                     u690:
   776  00037E                     l1121:
   777                           
   778                           ;timers.c: 60:         *pday = 1;
   779  00037E  C00A  FFD9         	movff	Timekeeper@pday,fsr2l
   780  000382  C00B  FFDA         	movff	Timekeeper@pday+1,fsr2h
   781  000386  0E01               	movlw	1
   782  000388  6EDF               	movwf	indf2,c
   783  00038A                     
   784                           ;timers.c: 61:         ++*pmonth;
   785  00038A  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   786  00038E  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   787  000392  2ADF               	incf	indf2,f,c
   788  000394                     l1125:
   789                           
   790                           ;timers.c: 64:     if (*pmonth == 13) {*pmonth = 1; ++*pyear;}
   791  000394  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   792  000398  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   793  00039C  0E0D               	movlw	13
   794  00039E  18DE               	xorwf	postinc2,w,c
   795  0003A0  A4D8               	btfss	status,2,c
   796  0003A2  EFD5  F001         	goto	u701
   797  0003A6  EFD7  F001         	goto	u700
   798  0003AA                     u701:
   799  0003AA  EFE4  F001         	goto	l147
   800  0003AE                     u700:
   801  0003AE  C008  FFD9         	movff	Timekeeper@pmonth,fsr2l
   802  0003B2  C009  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   803  0003B6  0E01               	movlw	1
   804  0003B8  6EDF               	movwf	indf2,c
   805  0003BA  C006  FFD9         	movff	Timekeeper@pyear,fsr2l
   806  0003BE  C007  FFDA         	movff	Timekeeper@pyear+1,fsr2h
   807  0003C2  2ADE               	incf	postinc2,f,c
   808  0003C4  0E00               	movlw	0
   809  0003C6  22DD               	addwfc	postdec2,f,c
   810  0003C8                     l147:
   811  0003C8  0012               	return		;funcret
   812  0003CA                     __end_of_Timekeeper:
   813                           	callstack 0
   814                           
   815 ;; *************** function ___lwmod *****************
   816 ;; Defined at:
   817 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  dividend        2    0[COMRAM] unsigned int 
   820 ;;  divisor         2    2[COMRAM] unsigned int 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  counter         1    4[COMRAM] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2    0[COMRAM] unsigned int 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;Total ram usage:        5 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_Timekeeper
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text3
   847  0004A8                     __ptext3:
   848                           	callstack 0
   849  0004A8                     ___lwmod:
   850                           	callstack 28
   851  0004A8  5003               	movf	___lwmod@divisor^0,w,c
   852  0004AA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   853  0004AC  B4D8               	btfsc	status,2,c
   854  0004AE  EF5B  F002         	goto	u421
   855  0004B2  EF5D  F002         	goto	u420
   856  0004B6                     u421:
   857  0004B6  EF81  F002         	goto	l651
   858  0004BA                     u420:
   859  0004BA  0E01               	movlw	1
   860  0004BC  6E05               	movwf	___lwmod@counter^0,c
   861  0004BE  EF65  F002         	goto	l1031
   862  0004C2                     l1029:
   863  0004C2  90D8               	bcf	status,0,c
   864  0004C4  3603               	rlcf	___lwmod@divisor^0,f,c
   865  0004C6  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   866  0004C8  2A05               	incf	___lwmod@counter^0,f,c
   867  0004CA                     l1031:
   868  0004CA  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   869  0004CC  EF6A  F002         	goto	u431
   870  0004D0  EF6C  F002         	goto	u430
   871  0004D4                     u431:
   872  0004D4  EF61  F002         	goto	l1029
   873  0004D8                     u430:
   874  0004D8                     l1033:
   875  0004D8  5003               	movf	___lwmod@divisor^0,w,c
   876  0004DA  5C01               	subwf	___lwmod@dividend^0,w,c
   877  0004DC  5004               	movf	(___lwmod@divisor+1)^0,w,c
   878  0004DE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   879  0004E0  A0D8               	btfss	status,0,c
   880  0004E2  EF75  F002         	goto	u441
   881  0004E6  EF77  F002         	goto	u440
   882  0004EA                     u441:
   883  0004EA  EF7B  F002         	goto	l1037
   884  0004EE                     u440:
   885  0004EE  5003               	movf	___lwmod@divisor^0,w,c
   886  0004F0  5E01               	subwf	___lwmod@dividend^0,f,c
   887  0004F2  5004               	movf	(___lwmod@divisor+1)^0,w,c
   888  0004F4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   889  0004F6                     l1037:
   890  0004F6  90D8               	bcf	status,0,c
   891  0004F8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   892  0004FA  3203               	rrcf	___lwmod@divisor^0,f,c
   893  0004FC  2E05               	decfsz	___lwmod@counter^0,f,c
   894  0004FE  EF6C  F002         	goto	l1033
   895  000502                     l651:
   896  000502  C001  F001         	movff	___lwmod@dividend,?___lwmod
   897  000506  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   898  00050A  0012               	return		;funcret
   899  00050C                     __end_of___lwmod:
   900                           	callstack 0
   901                           
   902 ;; *************** function _SmallHours *****************
   903 ;; Defined at:
   904 ;;		line 42 in file "lights.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  hour            1    wreg     unsigned char 
   907 ;;  minute          1    0[COMRAM] unsigned char 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  hour            1    1[COMRAM] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   919 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text4
   934  00050C                     __ptext4:
   935                           	callstack 0
   936  00050C                     _SmallHours:
   937                           	callstack 29
   938                           
   939                           ;incstack = 0
   940                           ;SmallHours@hour stored from wreg
   941  00050C  6E02               	movwf	SmallHours@hour^0,c
   942  00050E                     
   943                           ;lights.c: 42: void SmallHours(char hour, char minute);lights.c: 43: {;lights.c: 44:    
      +                           if (hour >= 1 && hour < 5) {
   944  00050E  5002               	movf	SmallHours@hour^0,w,c
   945  000510  B4D8               	btfsc	status,2,c
   946  000512  EF8D  F002         	goto	u711
   947  000516  EF8F  F002         	goto	u710
   948  00051A                     u711:
   949  00051A  EF9A  F002         	goto	l1137
   950  00051E                     u710:
   951  00051E  0E05               	movlw	5
   952  000520  6002               	cpfslt	SmallHours@hour^0,c
   953  000522  EF95  F002         	goto	u721
   954  000526  EF97  F002         	goto	u720
   955  00052A                     u721:
   956  00052A  EF9A  F002         	goto	l1137
   957  00052E                     u720:
   958  00052E                     
   959                           ;lights.c: 45:         CM1CON0bits.EN = 0;
   960  00052E  010E               	movlb	14	; () banked
   961  000530  9FD0               	bcf	208,7,b	;volatile
   962                           
   963                           ;lights.c: 46:         LATHbits.LATH3 = 0;
   964  000532  9680               	bcf	128,3,c	;volatile
   965  000534                     l1137:
   966                           
   967                           ;lights.c: 49:     if (hour == 5 && minute == 0) {CM1CON0bits.EN = 1;}
   968  000534  0E05               	movlw	5
   969  000536  1802               	xorwf	SmallHours@hour^0,w,c
   970  000538  A4D8               	btfss	status,2,c
   971  00053A  EFA1  F002         	goto	u731
   972  00053E  EFA3  F002         	goto	u730
   973  000542                     u731:
   974  000542  EFAD  F002         	goto	l113
   975  000546                     u730:
   976  000546  5001               	movf	SmallHours@minute^0,w,c
   977  000548  A4D8               	btfss	status,2,c
   978  00054A  EFA9  F002         	goto	u741
   979  00054E  EFAB  F002         	goto	u740
   980  000552                     u741:
   981  000552  EFAD  F002         	goto	l113
   982  000556                     u740:
   983  000556  010E               	movlb	14	; () banked
   984  000558  8FD0               	bsf	208,7,b	;volatile
   985  00055A                     l113:
   986  00055A  0012               	return		;funcret
   987  00055C                     __end_of_SmallHours:
   988                           	callstack 0
   989                           
   990 ;; *************** function _Lights_init *****************
   991 ;; Defined at:
   992 ;;		line 7 in file "lights.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		None
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 1
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text5
  1021  0005A6                     __ptext5:
  1022                           	callstack 0
  1023  0005A6                     _Lights_init:
  1024                           	callstack 29
  1025  0005A6                     
  1026                           ;lights.c: 10:     LATGbits.LATG0 = 0;
  1027  0005A6  907F               	bcf	127,0,c	;volatile
  1028                           
  1029                           ;lights.c: 11:     LATGbits.LATG1 = 0;
  1030  0005A8  927F               	bcf	127,1,c	;volatile
  1031                           
  1032                           ;lights.c: 12:     LATAbits.LATA2 = 0;
  1033  0005AA  9479               	bcf	121,2,c	;volatile
  1034                           
  1035                           ;lights.c: 13:     LATFbits.LATF6 = 0;
  1036  0005AC  9C7E               	bcf	126,6,c	;volatile
  1037                           
  1038                           ;lights.c: 14:     LATAbits.LATA4 = 0;
  1039  0005AE  9879               	bcf	121,4,c	;volatile
  1040                           
  1041                           ;lights.c: 15:     LATHbits.LATH3 = 0;
  1042  0005B0  9680               	bcf	128,3,c	;volatile
  1043                           
  1044                           ;lights.c: 18:     TRISGbits.TRISG0 = 0;
  1045  0005B2  9087               	bcf	135,0,c	;volatile
  1046                           
  1047                           ;lights.c: 19:     TRISGbits.TRISG1 = 0;
  1048  0005B4  9287               	bcf	135,1,c	;volatile
  1049                           
  1050                           ;lights.c: 20:     TRISAbits.TRISA2 = 0;
  1051  0005B6  9481               	bcf	129,2,c	;volatile
  1052                           
  1053                           ;lights.c: 21:     TRISFbits.TRISF6 = 0;
  1054  0005B8  9C86               	bcf	134,6,c	;volatile
  1055                           
  1056                           ;lights.c: 22:     TRISAbits.TRISA4 = 0;
  1057  0005BA  9881               	bcf	129,4,c	;volatile
  1058                           
  1059                           ;lights.c: 23:     TRISHbits.TRISH3 = 0;
  1060  0005BC  9688               	bcf	136,3,c	;volatile
  1061  0005BE  0012               	return		;funcret
  1062  0005C0                     __end_of_Lights_init:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _LEDarray_disp_bin *****************
  1066 ;; Defined at:
  1067 ;;		line 29 in file "lights.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  number          1    wreg     unsigned char 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  number          1    0[COMRAM] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;Total ram usage:        1 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 1
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text6
  1096  0003CA                     __ptext6:
  1097                           	callstack 0
  1098  0003CA                     _LEDarray_disp_bin:
  1099                           	callstack 29
  1100                           
  1101                           ;incstack = 0
  1102                           ;LEDarray_disp_bin@number stored from wreg
  1103  0003CA  6E01               	movwf	LEDarray_disp_bin@number^0,c
  1104  0003CC                     
  1105                           ;lights.c: 29: void LEDarray_disp_bin(char number);lights.c: 30: {;lights.c: 32:     if 
      +                          (number & 0b00001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  1106  0003CC  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  1107  0003CE  EFEB  F001         	goto	u301
  1108  0003D2  EFED  F001         	goto	u300
  1109  0003D6                     u301:
  1110  0003D6  EFF0  F001         	goto	l98
  1111  0003DA                     u300:
  1112  0003DA  807F               	bsf	127,0,c	;volatile
  1113  0003DC  EFF1  F001         	goto	l971
  1114  0003E0                     l98:
  1115  0003E0  907F               	bcf	127,0,c	;volatile
  1116  0003E2                     l971:
  1117                           
  1118                           ;lights.c: 33:     if (number & 0b00010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 = 0;
      +                          }
  1119  0003E2  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  1120  0003E4  EFF6  F001         	goto	u311
  1121  0003E8  EFF8  F001         	goto	u310
  1122  0003EC                     u311:
  1123  0003EC  EFFB  F001         	goto	l100
  1124  0003F0                     u310:
  1125  0003F0  827F               	bsf	127,1,c	;volatile
  1126  0003F2  EFFC  F001         	goto	l975
  1127  0003F6                     l100:
  1128  0003F6  927F               	bcf	127,1,c	;volatile
  1129  0003F8                     l975:
  1130                           
  1131                           ;lights.c: 34:     if (number & 0b00100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 = 0;
      +                          }
  1132  0003F8  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  1133  0003FA  EF01  F002         	goto	u321
  1134  0003FE  EF03  F002         	goto	u320
  1135  000402                     u321:
  1136  000402  EF06  F002         	goto	l102
  1137  000406                     u320:
  1138  000406  8479               	bsf	121,2,c	;volatile
  1139  000408  EF07  F002         	goto	l979
  1140  00040C                     l102:
  1141  00040C  9479               	bcf	121,2,c	;volatile
  1142  00040E                     l979:
  1143                           
  1144                           ;lights.c: 35:     if (number & 0b01000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 = 0;
      +                          }
  1145  00040E  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  1146  000410  EF0C  F002         	goto	u331
  1147  000414  EF0E  F002         	goto	u330
  1148  000418                     u331:
  1149  000418  EF11  F002         	goto	l104
  1150  00041C                     u330:
  1151  00041C  8C7E               	bsf	126,6,c	;volatile
  1152  00041E  EF12  F002         	goto	l983
  1153  000422                     l104:
  1154  000422  9C7E               	bcf	126,6,c	;volatile
  1155  000424                     l983:
  1156                           
  1157                           ;lights.c: 36:     if (number & 0b10000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 = 0;
      +                          }
  1158  000424  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  1159  000426  EF17  F002         	goto	u341
  1160  00042A  EF19  F002         	goto	u340
  1161  00042E                     u341:
  1162  00042E  EF1C  F002         	goto	l106
  1163  000432                     u340:
  1164  000432  8879               	bsf	121,4,c	;volatile
  1165  000434  EF1D  F002         	goto	l108
  1166  000438                     l106:
  1167  000438  9879               	bcf	121,4,c	;volatile
  1168  00043A                     l108:
  1169  00043A  0012               	return		;funcret
  1170  00043C                     __end_of_LEDarray_disp_bin:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _Interrupts_init *****************
  1174 ;; Defined at:
  1175 ;;		line 7 in file "interrupts.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		None
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; Hardware stack levels required when called: 1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text7
  1204  0005D4                     __ptext7:
  1205                           	callstack 0
  1206  0005D4                     _Interrupts_init:
  1207                           	callstack 29
  1208  0005D4                     
  1209                           ;interrupts.c: 10:     PIE0bits.TMR0IE = 1;
  1210  0005D4  010E               	movlb	14	; () banked
  1211  0005D6  8B29               	bsf	41,5,b	;volatile
  1212                           
  1213                           ;interrupts.c: 11:     PIE2bits.C1IE = 1;
  1214  0005D8  812B               	bsf	43,0,b	;volatile
  1215                           
  1216                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  1217  0005DA  8CF2               	bsf	242,6,c	;volatile
  1218                           
  1219                           ;interrupts.c: 13:     INTCONbits.GIE = 1;
  1220  0005DC  8EF2               	bsf	242,7,c	;volatile
  1221  0005DE                     
  1222                           ; BSR set to: 14
  1223  0005DE  0012               	return		;funcret
  1224  0005E0                     __end_of_Interrupts_init:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _Comp1_init *****************
  1228 ;; Defined at:
  1229 ;;		line 21 in file "comparator.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 2
  1250 ;; This function calls:
  1251 ;;		_DAC_init
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text8
  1258  00055C                     __ptext8:
  1259                           	callstack 0
  1260  00055C                     _Comp1_init:
  1261                           	callstack 28
  1262  00055C                     
  1263                           ;comparator.c: 23:     TRISFbits.TRISF7 = 1;
  1264  00055C  8E86               	bsf	134,7,c	;volatile
  1265  00055E                     
  1266                           ;comparator.c: 24:     CM1NCHbits.NCH = 0b011;
  1267  00055E  010E               	movlb	14	; () banked
  1268  000560  51D2               	movf	210,w,b	;volatile
  1269  000562  0BF8               	andlw	-8
  1270  000564  0903               	iorlw	3
  1271  000566  6FD2               	movwf	210,b	;volatile
  1272                           
  1273                           ;comparator.c: 25:     CM1PCHbits.PCH = 0b101;
  1274  000568  51D3               	movf	211,w,b	;volatile
  1275  00056A  0BF8               	andlw	-8
  1276  00056C  0905               	iorlw	5
  1277  00056E  6FD3               	movwf	211,b	;volatile
  1278  000570                     
  1279                           ; BSR set to: 14
  1280                           ;comparator.c: 26:     CM1CON0bits.HYS = 1;
  1281  000570  83D0               	bsf	208,1,b	;volatile
  1282  000572                     
  1283                           ; BSR set to: 14
  1284                           ;comparator.c: 27:     CM1CON0bits.POL = 1;
  1285  000572  89D0               	bsf	208,4,b	;volatile
  1286  000574                     
  1287                           ; BSR set to: 14
  1288                           ;comparator.c: 28:     CM1CON1bits.INTP = 1;
  1289  000574  83D1               	bsf	209,1,b	;volatile
  1290  000576                     
  1291                           ; BSR set to: 14
  1292                           ;comparator.c: 29:     CM1CON1bits.INTN = 1;
  1293  000576  81D1               	bsf	209,0,b	;volatile
  1294  000578                     
  1295                           ; BSR set to: 14
  1296                           ;comparator.c: 30:     DAC_init();
  1297  000578  ECE0  F002         	call	_DAC_init	;wreg free
  1298  00057C                     
  1299                           ;comparator.c: 31:     CM1CON0bits.EN = 1;
  1300  00057C  010E               	movlb	14	; () banked
  1301  00057E  8FD0               	bsf	208,7,b	;volatile
  1302  000580                     
  1303                           ; BSR set to: 14
  1304  000580  0012               	return		;funcret
  1305  000582                     __end_of_Comp1_init:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _DAC_init *****************
  1309 ;; Defined at:
  1310 ;;		line 7 in file "comparator.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; Hardware stack levels required when called: 1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_Comp1_init
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text9
  1339  0005C0                     __ptext9:
  1340                           	callstack 0
  1341  0005C0                     _DAC_init:
  1342                           	callstack 28
  1343  0005C0                     
  1344                           ;comparator.c: 9:     DAC1CON0bits.PSS = 0b00;
  1345  0005C0  0EF3               	movlw	-13
  1346  0005C2  010E               	movlb	14	; () banked
  1347  0005C4  17C6               	andwf	198,f,b	;volatile
  1348  0005C6                     
  1349                           ; BSR set to: 14
  1350                           ;comparator.c: 10:     DAC1CON0bits.NSS = 0b0;
  1351  0005C6  91C6               	bcf	198,0,b	;volatile
  1352                           
  1353                           ;comparator.c: 14:     DAC1CON1bits.DAC1R = 0b11011;
  1354  0005C8  51C7               	movf	199,w,b	;volatile
  1355  0005CA  0BE0               	andlw	-32
  1356  0005CC  091B               	iorlw	27
  1357  0005CE  6FC7               	movwf	199,b	;volatile
  1358  0005D0                     
  1359                           ; BSR set to: 14
  1360                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN = 1;
  1361  0005D0  8FC6               	bsf	198,7,b	;volatile
  1362  0005D2                     
  1363                           ; BSR set to: 14
  1364  0005D2  0012               	return		;funcret
  1365  0005D4                     __end_of_DAC_init:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _ISR *****************
  1369 ;; Defined at:
  1370 ;;		line 19 in file "interrupts.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		Interrupt level 2
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	intcode
  1398  000008                     __pintcode:
  1399                           	callstack 0
  1400  000008                     _ISR:
  1401                           	callstack 28
  1402                           
  1403                           ; BSR set to: 14
  1404                           ;incstack = 0
  1405  000008  8219               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1406  00000A                     
  1407                           ;interrupts.c: 21:     if (PIR0bits.TMR0IF == 1) {
  1408  00000A  010E               	movlb	14	; () banked
  1409  00000C  AB33               	btfss	51,5,b	;volatile
  1410  00000E  EF0B  F000         	goto	i2u39_41
  1411  000012  EF0D  F000         	goto	i2u39_40
  1412  000016                     i2u39_41:
  1413  000016  EF13  F000         	goto	i2l1007
  1414  00001A                     i2u39_40:
  1415  00001A                     
  1416                           ; BSR set to: 14
  1417                           ;interrupts.c: 22:         LATAbits.LATA3 = 1;
  1418  00001A  8679               	bsf	121,3,c	;volatile
  1419  00001C                     
  1420                           ; BSR set to: 14
  1421                           ;interrupts.c: 23:         TMR0H=0b00011011;
  1422  00001C  0E1B               	movlw	27
  1423  00001E  6ED4               	movwf	212,c	;volatile
  1424                           
  1425                           ;interrupts.c: 24:         TMR0L=0b00011110;
  1426  000020  0E1E               	movlw	30
  1427  000022  6ED3               	movwf	211,c	;volatile
  1428  000024                     
  1429                           ; BSR set to: 14
  1430                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
  1431  000024  9B33               	bcf	51,5,b	;volatile
  1432  000026                     i2l1007:
  1433                           
  1434                           ; BSR set to: 14
  1435                           ;interrupts.c: 28:     if (PIR2bits.C1IF == 1) {
  1436  000026  A135               	btfss	53,0,b	;volatile
  1437  000028  EF18  F000         	goto	i2u40_41
  1438  00002C  EF1A  F000         	goto	i2u40_40
  1439  000030                     i2u40_41:
  1440  000030  EF26  F000         	goto	i2l52
  1441  000034                     i2u40_40:
  1442  000034                     
  1443                           ; BSR set to: 14
  1444                           ;interrupts.c: 29:         if (CM1CON0bits.OUT) {LATHbits.LATH3 = 1;}
  1445  000034  ADD0               	btfss	208,6,b	;volatile
  1446  000036  EF1F  F000         	goto	i2u41_41
  1447  00003A  EF21  F000         	goto	i2u41_40
  1448  00003E                     i2u41_41:
  1449  00003E  EF24  F000         	goto	i2l50
  1450  000042                     i2u41_40:
  1451  000042                     
  1452                           ; BSR set to: 14
  1453  000042  8680               	bsf	128,3,c	;volatile
  1454  000044  EF25  F000         	goto	i2l51
  1455  000048                     i2l50:
  1456                           
  1457                           ; BSR set to: 14
  1458  000048  9680               	bcf	128,3,c	;volatile
  1459  00004A                     i2l51:
  1460                           
  1461                           ; BSR set to: 14
  1462                           ;interrupts.c: 31:         PIR2bits.C1IF = 0;
  1463  00004A  9135               	bcf	53,0,b	;volatile
  1464  00004C                     i2l52:
  1465                           
  1466                           ; BSR set to: 14
  1467  00004C  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1468  00004E  0011               	retfie		f
  1469  000050                     __end_of_ISR:
  1470                           	callstack 0
  1471  0000                     
  1472                           	psect	rparam
  1473  0000                     
  1474                           	psect	temp
  1475  000019                     btemp:
  1476                           	callstack 0
  1477  000019                     	ds	1
  1478  0000                     int$flags	set	btemp
  1479  0000                     wtemp8	set	btemp+1
  1480  0000                     ttemp5	set	btemp+1
  1481  0000                     ttemp6	set	btemp+4
  1482  0000                     ttemp7	set	btemp+8
  1483                           
  1484                           	psect	idloc
  1485                           
  1486                           ;Config register IDLOC0 @ 0x200000
  1487                           ;	unspecified, using default values
  1488  200000                     	org	2097152
  1489  200000  0FFF               	dw	4095
  1490                           
  1491                           ;Config register IDLOC1 @ 0x200002
  1492                           ;	unspecified, using default values
  1493  200002                     	org	2097154
  1494  200002  0FFF               	dw	4095
  1495                           
  1496                           ;Config register IDLOC2 @ 0x200004
  1497                           ;	unspecified, using default values
  1498  200004                     	org	2097156
  1499  200004  0FFF               	dw	4095
  1500                           
  1501                           ;Config register IDLOC3 @ 0x200006
  1502                           ;	unspecified, using default values
  1503  200006                     	org	2097158
  1504  200006  0FFF               	dw	4095
  1505                           
  1506                           ;Config register IDLOC4 @ 0x200008
  1507                           ;	unspecified, using default values
  1508  200008                     	org	2097160
  1509  200008  0FFF               	dw	4095
  1510                           
  1511                           ;Config register IDLOC5 @ 0x20000A
  1512                           ;	unspecified, using default values
  1513  20000A                     	org	2097162
  1514  20000A  0FFF               	dw	4095
  1515                           
  1516                           ;Config register IDLOC6 @ 0x20000C
  1517                           ;	unspecified, using default values
  1518  20000C                     	org	2097164
  1519  20000C  0FFF               	dw	4095
  1520                           
  1521                           ;Config register IDLOC7 @ 0x20000E
  1522                           ;	unspecified, using default values
  1523  20000E                     	org	2097166
  1524  20000E  0FFF               	dw	4095
  1525                           
  1526                           	psect	config
  1527                           
  1528                           ;Config register CONFIG1L @ 0x300000
  1529                           ;	External Oscillator mode Selection bits
  1530                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1531                           ;	Power-up default value for COSC bits
  1532                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1533  300000                     	org	3145728
  1534  300000  AA                 	db	170
  1535                           
  1536                           ;Config register CONFIG1H @ 0x300001
  1537                           ;	unspecified, using default values
  1538                           ;	Clock Out Enable bit
  1539                           ;	CLKOUTEN = 0x1, unprogrammed default
  1540                           ;	Clock Switch Enable bit
  1541                           ;	CSWEN = 0x1, unprogrammed default
  1542                           ;	Fail-Safe Clock Monitor Enable bit
  1543                           ;	FCMEN = 0x1, unprogrammed default
  1544  300001                     	org	3145729
  1545  300001  FF                 	db	255
  1546                           
  1547                           ;Config register CONFIG2L @ 0x300002
  1548                           ;	unspecified, using default values
  1549                           ;	Master Clear Enable bit
  1550                           ;	MCLRE = 0x1, unprogrammed default
  1551                           ;	Power-up Timer Enable bit
  1552                           ;	PWRTE = 0x1, unprogrammed default
  1553                           ;	Low-power BOR enable bit
  1554                           ;	LPBOREN = 0x1, unprogrammed default
  1555                           ;	Brown-out Reset Enable bits
  1556                           ;	BOREN = 0x3, unprogrammed default
  1557  300002                     	org	3145730
  1558  300002  FF                 	db	255
  1559                           
  1560                           ;Config register CONFIG2H @ 0x300003
  1561                           ;	unspecified, using default values
  1562                           ;	Brown Out Reset Voltage selection bits
  1563                           ;	BORV = 0x3, unprogrammed default
  1564                           ;	ZCD Disable bit
  1565                           ;	ZCD = 0x1, unprogrammed default
  1566                           ;	PPSLOCK bit One-Way Set Enable bit
  1567                           ;	PPS1WAY = 0x1, unprogrammed default
  1568                           ;	Stack Full/Underflow Reset Enable bit
  1569                           ;	STVREN = 0x1, unprogrammed default
  1570                           ;	Debugger Enable bit
  1571                           ;	DEBUG = 0x1, unprogrammed default
  1572                           ;	Extended Instruction Set Enable bit
  1573                           ;	XINST = 0x1, unprogrammed default
  1574  300003                     	org	3145731
  1575  300003  FF                 	db	255
  1576                           
  1577                           ;Config register CONFIG3L @ 0x300004
  1578                           ;	WDT Period Select bits
  1579                           ;	WDTCPS = 0x1F, unprogrammed default
  1580                           ;	WDT operating mode
  1581                           ;	WDTE = OFF, WDT Disabled
  1582  300004                     	org	3145732
  1583  300004  9F                 	db	159
  1584                           
  1585                           ;Config register CONFIG3H @ 0x300005
  1586                           ;	unspecified, using default values
  1587                           ;	WDT Window Select bits
  1588                           ;	WDTCWS = 0x7, unprogrammed default
  1589                           ;	WDT input clock selector
  1590                           ;	WDTCCS = 0x7, unprogrammed default
  1591  300005                     	org	3145733
  1592  300005  FF                 	db	255
  1593                           
  1594                           ;Config register CONFIG4L @ 0x300006
  1595                           ;	unspecified, using default values
  1596                           ;	Write Protection Block 0
  1597                           ;	WRT0 = 0x1, unprogrammed default
  1598                           ;	Write Protection Block 1
  1599                           ;	WRT1 = 0x1, unprogrammed default
  1600                           ;	Write Protection Block 2
  1601                           ;	WRT2 = 0x1, unprogrammed default
  1602                           ;	Write Protection Block 3
  1603                           ;	WRT3 = 0x1, unprogrammed default
  1604                           ;	Write Protection Block 3
  1605                           ;	WRT4 = 0x1, unprogrammed default
  1606                           ;	Write Protection Block 3
  1607                           ;	WRT5 = 0x1, unprogrammed default
  1608                           ;	Write Protection Block 3
  1609                           ;	WRT6 = 0x1, unprogrammed default
  1610                           ;	Write Protection Block 3
  1611                           ;	WRT7 = 0x1, unprogrammed default
  1612  300006                     	org	3145734
  1613  300006  FF                 	db	255
  1614                           
  1615                           ;Config register CONFIG4H @ 0x300007
  1616                           ;	unspecified, using default values
  1617                           ;	Configuration Register Write Protection bit
  1618                           ;	WRTC = 0x1, unprogrammed default
  1619                           ;	Boot Block Write Protection bit
  1620                           ;	WRTB = 0x1, unprogrammed default
  1621                           ;	Data EEPROM Write Protection bit
  1622                           ;	WRTD = 0x1, unprogrammed default
  1623                           ;	Scanner Enable bit
  1624                           ;	SCANE = 0x1, unprogrammed default
  1625                           ;	Low Voltage Programming Enable bit
  1626                           ;	LVP = 0x1, unprogrammed default
  1627  300007                     	org	3145735
  1628  300007  FF                 	db	255
  1629                           
  1630                           ;Config register CONFIG5L @ 0x300008
  1631                           ;	unspecified, using default values
  1632                           ;	UserNVM Program Memory Code Protection bit
  1633                           ;	CP = 0x1, unprogrammed default
  1634                           ;	DataNVM Memory Code Protection bit
  1635                           ;	CPD = 0x1, unprogrammed default
  1636  300008                     	org	3145736
  1637  300008  FF                 	db	255
  1638                           
  1639                           ;Config register CONFIG5H @ 0x300009
  1640                           ;	unspecified, using default values
  1641  300009                     	org	3145737
  1642  300009  FF                 	db	255
  1643                           
  1644                           ;Config register CONFIG6L @ 0x30000A
  1645                           ;	unspecified, using default values
  1646                           ;	Table Read Protection Block 0
  1647                           ;	EBTR0 = 0x1, unprogrammed default
  1648                           ;	Table Read Protection Block 1
  1649                           ;	EBTR1 = 0x1, unprogrammed default
  1650                           ;	Table Read Protection Block 2
  1651                           ;	EBTR2 = 0x1, unprogrammed default
  1652                           ;	Table Read Protection Block 3
  1653                           ;	EBTR3 = 0x1, unprogrammed default
  1654                           ;	Table Read Protection Block 4
  1655                           ;	EBTR4 = 0x1, unprogrammed default
  1656                           ;	Table Read Protection Block 5
  1657                           ;	EBTR5 = 0x1, unprogrammed default
  1658                           ;	Table Read Protection Block 6
  1659                           ;	EBTR6 = 0x1, unprogrammed default
  1660                           ;	Table Read Protection Block 7
  1661                           ;	EBTR7 = 0x1, unprogrammed default
  1662  30000A                     	org	3145738
  1663  30000A  FF                 	db	255
  1664                           
  1665                           ;Config register CONFIG6H @ 0x30000B
  1666                           ;	unspecified, using default values
  1667                           ;	Boot Block Table Read Protection bit
  1668                           ;	EBTRB = 0x1, unprogrammed default
  1669  30000B                     	org	3145739
  1670  30000B  FF                 	db	255
  1671                           tosu	equ	0xFFF
  1672                           tosh	equ	0xFFE
  1673                           tosl	equ	0xFFD
  1674                           stkptr	equ	0xFFC
  1675                           pclatu	equ	0xFFB
  1676                           pclath	equ	0xFFA
  1677                           pcl	equ	0xFF9
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           prodh	equ	0xFF4
  1683                           prodl	equ	0xFF3
  1684                           indf0	equ	0xFEF
  1685                           postinc0	equ	0xFEE
  1686                           postdec0	equ	0xFED
  1687                           preinc0	equ	0xFEC
  1688                           plusw0	equ	0xFEB
  1689                           fsr0h	equ	0xFEA
  1690                           fsr0l	equ	0xFE9
  1691                           wreg	equ	0xFE8
  1692                           indf1	equ	0xFE7
  1693                           postinc1	equ	0xFE6
  1694                           postdec1	equ	0xFE5
  1695                           preinc1	equ	0xFE4
  1696                           plusw1	equ	0xFE3
  1697                           fsr1h	equ	0xFE2
  1698                           fsr1l	equ	0xFE1
  1699                           bsr	equ	0xFE0
  1700                           indf2	equ	0xFDF
  1701                           postinc2	equ	0xFDE
  1702                           postdec2	equ	0xFDD
  1703                           preinc2	equ	0xFDC
  1704                           plusw2	equ	0xFDB
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Timekeeper@pmonth	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(COMRAM[1]), 

    Timekeeper@pday	PTR unsigned char  size(2) Largest target is 1
		 -> main@day(COMRAM[1]), 

    Timekeeper@phour	PTR unsigned char  size(2) Largest target is 1
		 -> main@hour(COMRAM[1]), 

    Timekeeper@pminute	PTR unsigned char  size(2) Largest target is 1
		 -> main@minute(COMRAM[1]), 

    Timekeeper@pyear	PTR unsigned int  size(2) Largest target is 2
		 -> main@year(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_Timekeeper
    _Timekeeper->___lwmod

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2199
                                             18 COMRAM     6     6      0
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                        _Lights_init
                         _SmallHours
                         _Timekeeper
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timekeeper                                          13     3     10    1726
                                              5 COMRAM    13     3     10
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _SmallHours                                           2     1      1     164
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Lights_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    1     1      0      75
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _Lights_init
   _SmallHours
   _Timekeeper
     ___lwmod
   _Timer0_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     18      18       1       25.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 01 18:17:33 2021

                        l20 0580                          l17 05D2                          l43 05DE  
                        l95 05BE                          l98 03E0           ??_Interrupts_init 0001  
                       l100 03F6                         l102 040C                         l104 0422  
                       l113 055A                         l106 0438                         l108 043A  
                       l128 05A4                         l147 03C8                         l651 0502  
                       l823 05C0                         l825 05C6                         l658 050A  
                       l827 05D0                         l851 0572                         l853 0574  
                       l845 055C                         l861 05D4                         l855 0576  
                       l847 055E                         l863 05A6                         l871 059E  
                       l857 0578                         l849 0570                         l873 05A0  
                       l865 0582                         l859 057C                         l971 03E2  
                       l875 05A2                         l867 058A                         l981 041C  
                       l973 03F0                         l869 0594                         l983 0424  
                       l975 03F8                         l967 03CC                         l985 0432  
                       l977 0406                         l969 03DA                         l979 040E  
                       u300 03DA                         u301 03D6                         u310 03F0  
                       u311 03EC                         u320 0406                         u321 0402  
                       u330 041C                         u331 0418                         u340 0432  
                       u420 04BA                         u500 014E                         u341 042E  
                       u421 04B6                         u501 014A                         u430 04D8  
                       u510 017E                         u431 04D4                         u511 017A  
                       u440 04EE                         u600 0280                         u520 0198  
                       u441 04EA                         u601 027C                         u521 0194  
                       u610 029A                         u530 01A8                         u450 007E  
                       u611 0296                         u531 01A4                         u451 007A  
                       u700 03AE                         u620 02CA                         u540 01D8  
                       u460 00AC                         _ISR 0008                         u701 03AA  
                       u621 02C6                         u541 01D4                         u461 00A8  
                       u710 051E                         u630 02E2                         u550 01F2  
                       u470 00E2                         u711 051A                         u631 02DE  
                       u551 01EE                         u471 00DE                         u720 052E  
                       u640 02FC                         u560 0202                         u480 00F8  
                       u721 052A                         u641 02F8                         u561 01FE  
                       u481 00F4                         u730 0546                         u650 0316  
                       u570 0232                         u490 011E                         u731 0542  
                       u651 0312                         u571 022E                         u491 011A  
                       u740 0556                         u660 0330                         u580 024C  
                       u741 0552                         u661 032C                         u581 0248  
                       u670 034A                         u590 0266                         u671 0346  
                       u591 0262                         u680 0364                         u681 0360  
                       u690 037E                         u691 037A                        ?_ISR 0001  
                      l1101 029A                        l1031 04CA                        l1111 02FC  
                      l1103 02A6                        l1033 04D8                        l1025 04A8  
                      l1113 0316                        l1121 037E                        l1105 02B0  
                      l1041 0054                        l1131 050E                        l1035 04EE  
                      l1027 04BA                        l1123 038A                        l1115 0330  
                      l1107 02CA                        l1051 00E6                        l1043 007E  
                      l1141 0556                        l1133 051E                        l1037 04F6  
                      l1029 04C2                        l1117 034A                        l1109 02E2  
                      l1125 0394                        l1061 011E                        l1053 00EA  
                      l1045 00AC                        l1135 052E                        l1039 04FC  
                      l1127 03AE                        l1119 0364                        l1071 0164  
                      l1063 012A                        l1055 00F8                        l1047 00B4  
                      l1151 0490                        l1143 043C                        l1137 0534  
                      l1129 03BA                        l1073 017E                        l1081 01BE  
                      l1065 0134                        l1057 0102                        l1153 0496  
                      l1145 0454                        l1139 0546                        l1083 01D8  
                      l1091 0218                        l1075 0198                        l1067 014E  
                      l1059 0104                        l1147 0460                        l1093 0232  
                      l1085 01F2                        l1077 01A8                        l1069 015A  
                      l1149 0464                        l1095 024C                        l1087 0202  
                      l1079 01B4                        l1097 0266                        l1089 020E  
                      l1099 0280                        i2l50 0048                        i2l51 004A  
                      i2l52 004C                        _main 043C                        fsr2h 000FDA  
                      indf2 000FDF                        fsr2l 000FD9                        btemp 0019  
                      start 0050            __end_of_DAC_init 05D4                ___param_bank 000000  
                     ??_ISR 0001                  _Comp1_init 055C               ??_Lights_init 0001  
                     ?_main 0001             __end_of___lwmod 050C                       i2l999 000A  
                     _TMR0H 000FD4                       _TMR0L 000FD3                       ttemp5 001A  
                     ttemp6 001D                       ttemp7 0021                       status 000FD8  
                     wtemp8 001A             __initialization 05E0                __end_of_main 04A8  
                    ??_main 0013               __activetblptr 000000         __end_of_Lights_init 05C0  
                    i2l1001 001A                      i2l1011 0042                      i2l1003 001C  
                    i2l1005 0024                      i2l1007 0026                      i2l1009 0034  
         _LEDarray_disp_bin 03CA                  _SmallHours 050C          ?_LEDarray_disp_bin 0001  
             ??_Timer0_init 0001                 ?_Comp1_init 0001                   ??___lwmod 0005  
                _Timekeeper 0054         ??_LEDarray_disp_bin 0001                      isa$std 000001  
                 ?_DAC_init 0001   __end_of_LEDarray_disp_bin 043C                  __accesstop 0060  
   __end_of__initialization 05E0            Timekeeper@pmonth 0008               ___rparam_used 000001  
           _Interrupts_init 05D4              __pcstackCOMRAM 0001         __end_of_Timer0_init 05A6  
               _Lights_init 05A6                  ??_DAC_init 0001         __size_of_Comp1_init 0026  
            Timekeeper@pday 000A                 ?_SmallHours 0001                 ?_Timekeeper 0006  
                   i2u40_40 0034                     i2u40_41 0030                     i2u41_40 0042  
                   i2u41_41 003E                     i2u39_40 001A                     i2u39_41 0016  
__size_of_LEDarray_disp_bin 0072     __end_of_Interrupts_init 05E0            SmallHours@minute 0001  
                   __Hparam 0000                     __Lparam 0000                 _Timer0_init 0582  
                   ___lwmod 04A8                     __pcinit 05E0                     __ramtop 0E00  
                   __ptext0 043C                     __ptext1 0582                     __ptext2 0054  
                   __ptext3 04A8                     __ptext4 050C                     __ptext5 05A6  
                   __ptext6 03CA                     __ptext7 05D4                     __ptext8 055C  
                   __ptext9 05C0                __size_of_ISR 0048         __size_of_SmallHours 0050  
                   main@day 0017        end_of_initialization 05E0         __size_of_Timekeeper 0376  
                   postdec2 000FDD                ??_Comp1_init 0001                     postinc2 000FDE  
                 _TRISAbits 000F81                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88           Timekeeper@pminute 000E           __size_of_DAC_init 0014  
        __end_of_Comp1_init 0582                 _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1  
          ?_Interrupts_init 0001                  main@minute 0015                ?_Lights_init 0001  
       start_initialization 05E0                 __end_of_ISR 0050                ??_SmallHours 0002  
              ??_Timekeeper 0010             Timekeeper@phour 000C             Timekeeper@pyear 0006  
        __end_of_SmallHours 055C          __end_of_Timekeeper 03CA                ?_Timer0_init 0001  
                 __pintcode 0008                    ?___lwmod 0001                    _DAC_init 05C0  
                  _LATAbits 000F79                    _LATFbits 000F7E                    _LATGbits 000F7F  
                  _LATHbits 000F80                    _PIE0bits 000E29                    _PIE2bits 000E2B  
                  _PIR0bits 000E33                    _PIR2bits 000E35        __size_of_Lights_init 001A  
                 main@month 0018                  _CM1NCHbits 000ED2                  _CM1PCHbits 000ED3  
                  __Hrparam 0000                    __Lrparam 0000            __size_of___lwmod 0064  
                _T0CON0bits 000FD5                  _T0CON1bits 000FD6     LEDarray_disp_bin@number 0001  
            SmallHours@hour 0002               __size_of_main 006C                    isa$xinst 000000  
  __size_of_Interrupts_init 000C                    int$flags 0019        __size_of_Timer0_init 0024  
                  main@hour 0016                    main@year 0013                  _INTCONbits 000FF2  
                  intlevel2 0000                _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7  
          ___lwmod@dividend 0001             ___lwmod@divisor 0003             ___lwmod@counter 0005  
        Timekeeper@leapyear 0012  
