

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 01 17:07:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.35
    20                           ; Generated 05/05/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F67K40 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _PIR2bits	set	3637
    55  0000                     _PIE2bits	set	3627
    56  0000                     _CM1CON1bits	set	3793
    57  0000                     _CM1CON0bits	set	3792
    58  0000                     _CM1PCHbits	set	3795
    59  0000                     _CM1NCHbits	set	3794
    60  0000                     _DAC1CON1bits	set	3783
    61  0000                     _DAC1CON0bits	set	3782
    62  0000                     _TRISHbits	set	3976
    63  0000                     _TRISAbits	set	3969
    64  0000                     _TRISGbits	set	3975
    65  0000                     _LATFbits	set	3966
    66  0000                     _LATAbits	set	3961
    67  0000                     _LATGbits	set	3967
    68  0000                     _LATHbits	set	3968
    69  0000                     _INTCONbits	set	4082
    70  0000                     _TRISFbits	set	3974
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  0000A2                     __pcinit:
    76                           	callstack 0
    77  0000A2                     start_initialization:
    78                           	callstack 0
    79  0000A2                     __initialization:
    80                           	callstack 0
    81  0000A2                     end_of_initialization:
    82                           	callstack 0
    83  0000A2                     __end_of__initialization:
    84                           	callstack 0
    85  0000A2  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    86  0000A4  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    87  0000A6  0100               	movlb	0
    88  0000A8  EF3D  F000         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000000                     __pcstackCOMRAM:
    92                           	callstack 0
    93  000000                     
    94                           ; 1 bytes @ 0x0
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 15 in file "main.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called: 3
   120 ;; This function calls:
   121 ;;		_Comp1_init
   122 ;;		_Interrupts_init
   123 ;;		_Lights_init
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           	psect	text0
   130  00007A                     __ptext0:
   131                           	callstack 0
   132  00007A                     _main:
   133                           	callstack 28
   134  00007A                     
   135                           ;main.c: 17:     Lights_init();
   136  00007A  EC30  F000         	call	_Lights_init	;wreg free
   137  00007E                     
   138                           ;main.c: 18:     Comp1_init();
   139  00007E  EC1D  F000         	call	_Comp1_init	;wreg free
   140  000082                     
   141                           ;main.c: 19:     Interrupts_init();
   142  000082  EC56  F000         	call	_Interrupts_init	;wreg free
   143  000086                     l52:
   144  000086  EF43  F000         	goto	l52
   145  00008A  EF1B  F000         	goto	start
   146  00008E                     __end_of_main:
   147                           	callstack 0
   148                           
   149 ;; *************** function _Lights_init *****************
   150 ;; Defined at:
   151 ;;		line 7 in file "lights.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		None
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels used: 1
   171 ;; Hardware stack levels required when called: 1
   172 ;; This function calls:
   173 ;;		Nothing
   174 ;; This function is called by:
   175 ;;		_main
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text1
   180  000060                     __ptext1:
   181                           	callstack 0
   182  000060                     _Lights_init:
   183                           	callstack 29
   184  000060                     
   185                           ;lights.c: 10:     LATGbits.LATG0 = 0;
   186  000060  907F               	bcf	127,0,c	;volatile
   187                           
   188                           ;lights.c: 11:     LATGbits.LATG1 = 0;
   189  000062  927F               	bcf	127,1,c	;volatile
   190                           
   191                           ;lights.c: 12:     LATAbits.LATA2 = 0;
   192  000064  9479               	bcf	121,2,c	;volatile
   193                           
   194                           ;lights.c: 13:     LATFbits.LATF6 = 0;
   195  000066  9C7E               	bcf	126,6,c	;volatile
   196                           
   197                           ;lights.c: 14:     LATAbits.LATA4 = 0;
   198  000068  9879               	bcf	121,4,c	;volatile
   199                           
   200                           ;lights.c: 15:     LATHbits.LATH3 = 0;
   201  00006A  9680               	bcf	128,3,c	;volatile
   202                           
   203                           ;lights.c: 18:     TRISGbits.TRISG0 = 0;
   204  00006C  9087               	bcf	135,0,c	;volatile
   205                           
   206                           ;lights.c: 19:     TRISGbits.TRISG1 = 0;
   207  00006E  9287               	bcf	135,1,c	;volatile
   208                           
   209                           ;lights.c: 20:     TRISAbits.TRISA2 = 0;
   210  000070  9481               	bcf	129,2,c	;volatile
   211                           
   212                           ;lights.c: 21:     TRISFbits.TRISF6 = 0;
   213  000072  9C86               	bcf	134,6,c	;volatile
   214                           
   215                           ;lights.c: 22:     TRISAbits.TRISA4 = 0;
   216  000074  9881               	bcf	129,4,c	;volatile
   217                           
   218                           ;lights.c: 23:     TRISHbits.TRISH3 = 0;
   219  000076  9688               	bcf	136,3,c	;volatile
   220  000078  0012               	return		;funcret
   221  00007A                     __end_of_Lights_init:
   222                           	callstack 0
   223                           
   224 ;; *************** function _Interrupts_init *****************
   225 ;; Defined at:
   226 ;;		line 7 in file "interrupts.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		None
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		_main
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text2
   255  0000AC                     __ptext2:
   256                           	callstack 0
   257  0000AC                     _Interrupts_init:
   258                           	callstack 29
   259  0000AC                     
   260                           ;interrupts.c: 10:     PIE2bits.C1IE = 1;
   261  0000AC  010E               	movlb	14	; () banked
   262  0000AE  812B               	bsf	43,0,b	;volatile
   263                           
   264                           ;interrupts.c: 11:     INTCONbits.PEIE = 1;
   265  0000B0  8CF2               	bsf	242,6,c	;volatile
   266                           
   267                           ;interrupts.c: 12:     INTCONbits.GIE = 1;
   268  0000B2  8EF2               	bsf	242,7,c	;volatile
   269  0000B4                     
   270                           ; BSR set to: 14
   271  0000B4  0012               	return		;funcret
   272  0000B6                     __end_of_Interrupts_init:
   273                           	callstack 0
   274                           
   275 ;; *************** function _Comp1_init *****************
   276 ;; Defined at:
   277 ;;		line 21 in file "comparator.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels used: 1
   297 ;; Hardware stack levels required when called: 2
   298 ;; This function calls:
   299 ;;		_DAC_init
   300 ;; This function is called by:
   301 ;;		_main
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text3
   306  00003A                     __ptext3:
   307                           	callstack 0
   308  00003A                     _Comp1_init:
   309                           	callstack 28
   310  00003A                     
   311                           ;comparator.c: 23:     TRISFbits.TRISF7 = 1;
   312  00003A  8E86               	bsf	134,7,c	;volatile
   313  00003C                     
   314                           ;comparator.c: 24:     CM1NCHbits.NCH = 0b011;
   315  00003C  010E               	movlb	14	; () banked
   316  00003E  51D2               	movf	210,w,b	;volatile
   317  000040  0BF8               	andlw	-8
   318  000042  0903               	iorlw	3
   319  000044  6FD2               	movwf	210,b	;volatile
   320                           
   321                           ;comparator.c: 25:     CM1PCHbits.PCH = 0b101;
   322  000046  51D3               	movf	211,w,b	;volatile
   323  000048  0BF8               	andlw	-8
   324  00004A  0905               	iorlw	5
   325  00004C  6FD3               	movwf	211,b	;volatile
   326  00004E                     
   327                           ; BSR set to: 14
   328                           ;comparator.c: 26:     CM1CON0bits.HYS = 1;
   329  00004E  83D0               	bsf	208,1,b	;volatile
   330  000050                     
   331                           ; BSR set to: 14
   332                           ;comparator.c: 27:     CM1CON0bits.POL = 1;
   333  000050  89D0               	bsf	208,4,b	;volatile
   334  000052                     
   335                           ; BSR set to: 14
   336                           ;comparator.c: 28:     CM1CON1bits.INTP = 1;
   337  000052  83D1               	bsf	209,1,b	;volatile
   338  000054                     
   339                           ; BSR set to: 14
   340                           ;comparator.c: 29:     CM1CON1bits.INTN = 1;
   341  000054  81D1               	bsf	209,0,b	;volatile
   342  000056                     
   343                           ; BSR set to: 14
   344                           ;comparator.c: 30:     DAC_init();
   345  000056  EC47  F000         	call	_DAC_init	;wreg free
   346  00005A                     
   347                           ;comparator.c: 31:     CM1CON0bits.EN = 1;
   348  00005A  010E               	movlb	14	; () banked
   349  00005C  8FD0               	bsf	208,7,b	;volatile
   350  00005E                     
   351                           ; BSR set to: 14
   352  00005E  0012               	return		;funcret
   353  000060                     __end_of_Comp1_init:
   354                           	callstack 0
   355                           
   356 ;; *************** function _DAC_init *****************
   357 ;; Defined at:
   358 ;;		line 7 in file "comparator.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used: 1
   378 ;; Hardware stack levels required when called: 1
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		_Comp1_init
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text4
   387  00008E                     __ptext4:
   388                           	callstack 0
   389  00008E                     _DAC_init:
   390                           	callstack 28
   391  00008E                     
   392                           ;comparator.c: 9:     DAC1CON0bits.PSS = 0b00;
   393  00008E  0EF3               	movlw	-13
   394  000090  010E               	movlb	14	; () banked
   395  000092  17C6               	andwf	198,f,b	;volatile
   396  000094                     
   397                           ; BSR set to: 14
   398                           ;comparator.c: 10:     DAC1CON0bits.NSS = 0b0;
   399  000094  91C6               	bcf	198,0,b	;volatile
   400                           
   401                           ;comparator.c: 14:     DAC1CON1bits.DAC1R = 0b11011;
   402  000096  51C7               	movf	199,w,b	;volatile
   403  000098  0BE0               	andlw	-32
   404  00009A  091B               	iorlw	27
   405  00009C  6FC7               	movwf	199,b	;volatile
   406  00009E                     
   407                           ; BSR set to: 14
   408                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN = 1;
   409  00009E  8FC6               	bsf	198,7,b	;volatile
   410  0000A0                     
   411                           ; BSR set to: 14
   412  0000A0  0012               	return		;funcret
   413  0000A2                     __end_of_DAC_init:
   414                           	callstack 0
   415                           
   416 ;; *************** function _ISR *****************
   417 ;; Defined at:
   418 ;;		line 18 in file "interrupts.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		None
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		Interrupt level 2
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	intcode
   446  000008                     __pintcode:
   447                           	callstack 0
   448  000008                     _ISR:
   449                           	callstack 28
   450                           
   451                           ; BSR set to: 14
   452                           ;incstack = 0
   453  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   454  00000A                     
   455                           ;interrupts.c: 20:     if (PIR2bits.C1IF == 1) {
   456  00000A  010E               	movlb	14	; () banked
   457  00000C  A135               	btfss	53,0,b	;volatile
   458  00000E  EF0B  F000         	goto	i2u1_41
   459  000012  EF0D  F000         	goto	i2u1_40
   460  000016                     i2u1_41:
   461  000016  EF19  F000         	goto	i2l41
   462  00001A                     i2u1_40:
   463  00001A                     
   464                           ; BSR set to: 14
   465                           ;interrupts.c: 21:         if (CM1CON0bits.OUT) {LATHbits.LATH3 = 1;}
   466  00001A  ADD0               	btfss	208,6,b	;volatile
   467  00001C  EF12  F000         	goto	i2u2_41
   468  000020  EF14  F000         	goto	i2u2_40
   469  000024                     i2u2_41:
   470  000024  EF17  F000         	goto	i2l39
   471  000028                     i2u2_40:
   472  000028                     
   473                           ; BSR set to: 14
   474  000028  8680               	bsf	128,3,c	;volatile
   475  00002A  EF18  F000         	goto	i2l40
   476  00002E                     i2l39:
   477                           
   478                           ; BSR set to: 14
   479  00002E  9680               	bcf	128,3,c	;volatile
   480  000030                     i2l40:
   481                           
   482                           ; BSR set to: 14
   483                           ;interrupts.c: 23:         PIR2bits.C1IF = 0;
   484  000030  9135               	bcf	53,0,b	;volatile
   485  000032                     i2l41:
   486                           
   487                           ; BSR set to: 14
   488  000032  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   489  000034  0011               	retfie		f
   490  000036                     __end_of_ISR:
   491                           	callstack 0
   492  0000                     
   493                           	psect	rparam
   494  0000                     
   495                           	psect	temp
   496  000001                     btemp:
   497                           	callstack 0
   498  000001                     	ds	1
   499  0000                     int$flags	set	btemp
   500  0000                     wtemp8	set	btemp+1
   501  0000                     ttemp5	set	btemp+1
   502  0000                     ttemp6	set	btemp+4
   503  0000                     ttemp7	set	btemp+8
   504                           
   505                           	psect	idloc
   506                           
   507                           ;Config register IDLOC0 @ 0x200000
   508                           ;	unspecified, using default values
   509  200000                     	org	2097152
   510  200000  0FFF               	dw	4095
   511                           
   512                           ;Config register IDLOC1 @ 0x200002
   513                           ;	unspecified, using default values
   514  200002                     	org	2097154
   515  200002  0FFF               	dw	4095
   516                           
   517                           ;Config register IDLOC2 @ 0x200004
   518                           ;	unspecified, using default values
   519  200004                     	org	2097156
   520  200004  0FFF               	dw	4095
   521                           
   522                           ;Config register IDLOC3 @ 0x200006
   523                           ;	unspecified, using default values
   524  200006                     	org	2097158
   525  200006  0FFF               	dw	4095
   526                           
   527                           ;Config register IDLOC4 @ 0x200008
   528                           ;	unspecified, using default values
   529  200008                     	org	2097160
   530  200008  0FFF               	dw	4095
   531                           
   532                           ;Config register IDLOC5 @ 0x20000A
   533                           ;	unspecified, using default values
   534  20000A                     	org	2097162
   535  20000A  0FFF               	dw	4095
   536                           
   537                           ;Config register IDLOC6 @ 0x20000C
   538                           ;	unspecified, using default values
   539  20000C                     	org	2097164
   540  20000C  0FFF               	dw	4095
   541                           
   542                           ;Config register IDLOC7 @ 0x20000E
   543                           ;	unspecified, using default values
   544  20000E                     	org	2097166
   545  20000E  0FFF               	dw	4095
   546                           
   547                           	psect	config
   548                           
   549                           ;Config register CONFIG1L @ 0x300000
   550                           ;	External Oscillator mode Selection bits
   551                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   552                           ;	Power-up default value for COSC bits
   553                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   554  300000                     	org	3145728
   555  300000  AA                 	db	170
   556                           
   557                           ;Config register CONFIG1H @ 0x300001
   558                           ;	unspecified, using default values
   559                           ;	Clock Out Enable bit
   560                           ;	CLKOUTEN = 0x1, unprogrammed default
   561                           ;	Clock Switch Enable bit
   562                           ;	CSWEN = 0x1, unprogrammed default
   563                           ;	Fail-Safe Clock Monitor Enable bit
   564                           ;	FCMEN = 0x1, unprogrammed default
   565  300001                     	org	3145729
   566  300001  FF                 	db	255
   567                           
   568                           ;Config register CONFIG2L @ 0x300002
   569                           ;	unspecified, using default values
   570                           ;	Master Clear Enable bit
   571                           ;	MCLRE = 0x1, unprogrammed default
   572                           ;	Power-up Timer Enable bit
   573                           ;	PWRTE = 0x1, unprogrammed default
   574                           ;	Low-power BOR enable bit
   575                           ;	LPBOREN = 0x1, unprogrammed default
   576                           ;	Brown-out Reset Enable bits
   577                           ;	BOREN = 0x3, unprogrammed default
   578  300002                     	org	3145730
   579  300002  FF                 	db	255
   580                           
   581                           ;Config register CONFIG2H @ 0x300003
   582                           ;	unspecified, using default values
   583                           ;	Brown Out Reset Voltage selection bits
   584                           ;	BORV = 0x3, unprogrammed default
   585                           ;	ZCD Disable bit
   586                           ;	ZCD = 0x1, unprogrammed default
   587                           ;	PPSLOCK bit One-Way Set Enable bit
   588                           ;	PPS1WAY = 0x1, unprogrammed default
   589                           ;	Stack Full/Underflow Reset Enable bit
   590                           ;	STVREN = 0x1, unprogrammed default
   591                           ;	Debugger Enable bit
   592                           ;	DEBUG = 0x1, unprogrammed default
   593                           ;	Extended Instruction Set Enable bit
   594                           ;	XINST = 0x1, unprogrammed default
   595  300003                     	org	3145731
   596  300003  FF                 	db	255
   597                           
   598                           ;Config register CONFIG3L @ 0x300004
   599                           ;	WDT Period Select bits
   600                           ;	WDTCPS = 0x1F, unprogrammed default
   601                           ;	WDT operating mode
   602                           ;	WDTE = OFF, WDT Disabled
   603  300004                     	org	3145732
   604  300004  9F                 	db	159
   605                           
   606                           ;Config register CONFIG3H @ 0x300005
   607                           ;	unspecified, using default values
   608                           ;	WDT Window Select bits
   609                           ;	WDTCWS = 0x7, unprogrammed default
   610                           ;	WDT input clock selector
   611                           ;	WDTCCS = 0x7, unprogrammed default
   612  300005                     	org	3145733
   613  300005  FF                 	db	255
   614                           
   615                           ;Config register CONFIG4L @ 0x300006
   616                           ;	unspecified, using default values
   617                           ;	Write Protection Block 0
   618                           ;	WRT0 = 0x1, unprogrammed default
   619                           ;	Write Protection Block 1
   620                           ;	WRT1 = 0x1, unprogrammed default
   621                           ;	Write Protection Block 2
   622                           ;	WRT2 = 0x1, unprogrammed default
   623                           ;	Write Protection Block 3
   624                           ;	WRT3 = 0x1, unprogrammed default
   625                           ;	Write Protection Block 3
   626                           ;	WRT4 = 0x1, unprogrammed default
   627                           ;	Write Protection Block 3
   628                           ;	WRT5 = 0x1, unprogrammed default
   629                           ;	Write Protection Block 3
   630                           ;	WRT6 = 0x1, unprogrammed default
   631                           ;	Write Protection Block 3
   632                           ;	WRT7 = 0x1, unprogrammed default
   633  300006                     	org	3145734
   634  300006  FF                 	db	255
   635                           
   636                           ;Config register CONFIG4H @ 0x300007
   637                           ;	unspecified, using default values
   638                           ;	Configuration Register Write Protection bit
   639                           ;	WRTC = 0x1, unprogrammed default
   640                           ;	Boot Block Write Protection bit
   641                           ;	WRTB = 0x1, unprogrammed default
   642                           ;	Data EEPROM Write Protection bit
   643                           ;	WRTD = 0x1, unprogrammed default
   644                           ;	Scanner Enable bit
   645                           ;	SCANE = 0x1, unprogrammed default
   646                           ;	Low Voltage Programming Enable bit
   647                           ;	LVP = 0x1, unprogrammed default
   648  300007                     	org	3145735
   649  300007  FF                 	db	255
   650                           
   651                           ;Config register CONFIG5L @ 0x300008
   652                           ;	unspecified, using default values
   653                           ;	UserNVM Program Memory Code Protection bit
   654                           ;	CP = 0x1, unprogrammed default
   655                           ;	DataNVM Memory Code Protection bit
   656                           ;	CPD = 0x1, unprogrammed default
   657  300008                     	org	3145736
   658  300008  FF                 	db	255
   659                           
   660                           ;Config register CONFIG5H @ 0x300009
   661                           ;	unspecified, using default values
   662  300009                     	org	3145737
   663  300009  FF                 	db	255
   664                           
   665                           ;Config register CONFIG6L @ 0x30000A
   666                           ;	unspecified, using default values
   667                           ;	Table Read Protection Block 0
   668                           ;	EBTR0 = 0x1, unprogrammed default
   669                           ;	Table Read Protection Block 1
   670                           ;	EBTR1 = 0x1, unprogrammed default
   671                           ;	Table Read Protection Block 2
   672                           ;	EBTR2 = 0x1, unprogrammed default
   673                           ;	Table Read Protection Block 3
   674                           ;	EBTR3 = 0x1, unprogrammed default
   675                           ;	Table Read Protection Block 4
   676                           ;	EBTR4 = 0x1, unprogrammed default
   677                           ;	Table Read Protection Block 5
   678                           ;	EBTR5 = 0x1, unprogrammed default
   679                           ;	Table Read Protection Block 6
   680                           ;	EBTR6 = 0x1, unprogrammed default
   681                           ;	Table Read Protection Block 7
   682                           ;	EBTR7 = 0x1, unprogrammed default
   683  30000A                     	org	3145738
   684  30000A  FF                 	db	255
   685                           
   686                           ;Config register CONFIG6H @ 0x30000B
   687                           ;	unspecified, using default values
   688                           ;	Boot Block Table Read Protection bit
   689                           ;	EBTRB = 0x1, unprogrammed default
   690  30000B                     	org	3145739
   691  30000B  FF                 	db	255
   692                           tosu	equ	0xFFF
   693                           tosh	equ	0xFFE
   694                           tosl	equ	0xFFD
   695                           stkptr	equ	0xFFC
   696                           pclatu	equ	0xFFB
   697                           pclath	equ	0xFFA
   698                           pcl	equ	0xFF9
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           prodh	equ	0xFF4
   704                           prodl	equ	0xFF3
   705                           indf0	equ	0xFEF
   706                           postinc0	equ	0xFEE
   707                           postdec0	equ	0xFED
   708                           preinc0	equ	0xFEC
   709                           plusw0	equ	0xFEB
   710                           fsr0h	equ	0xFEA
   711                           fsr0l	equ	0xFE9
   712                           wreg	equ	0xFE8
   713                           indf1	equ	0xFE7
   714                           postinc1	equ	0xFE6
   715                           postdec1	equ	0xFE5
   716                           preinc1	equ	0xFE4
   717                           plusw1	equ	0xFE3
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           bsr	equ	0xFE0
   721                           indf2	equ	0xFDF
   722                           postinc2	equ	0xFDE
   723                           postdec2	equ	0xFDD
   724                           preinc2	equ	0xFDC
   725                           plusw2	equ	0xFDB
   726                           fsr2h	equ	0xFDA
   727                           fsr2l	equ	0xFD9
   728                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _Comp1_init
                    _Interrupts_init
                        _Lights_init
 ---------------------------------------------------------------------------------
 (1) _Lights_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _Lights_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 01 17:07:11 2021

                      l20 005E                        l17 00A0                        l33 00B4  
                      l52 0086                        l53 0086                        l74 0078  
       ??_Interrupts_init 0000                       l763 008E                       l771 003C  
                     l765 0094                       l781 0056                       l773 004E  
                     l767 009E                       l783 005A                       l775 0050  
                     l777 0052                       l769 003A                       l785 00AC  
                     l779 0054                       l787 0060                       l795 007A  
                     l797 007E                       l799 0082                       _ISR 0008  
                    ?_ISR 0000                      i2l40 0030                      i2l41 0032  
                    i2l39 002E                      _main 007A                      btemp 0001  
                    start 0036          __end_of_DAC_init 00A2              ___param_bank 000000  
                   ??_ISR 0000                _Comp1_init 003A             ??_Lights_init 0000  
                   ?_main 0000                     i2l791 001A                     i2l793 0028  
                   i2l789 000A                     ttemp5 0002                     ttemp6 0005  
                   ttemp7 0009                     wtemp8 0002           __initialization 00A2  
            __end_of_main 008E                    ??_main 0000             __activetblptr 000000  
     __end_of_Lights_init 007A                    i2u1_40 001A                    i2u1_41 0016  
                  i2u2_40 0028                    i2u2_41 0024               ?_Comp1_init 0000  
                  isa$std 000001                 ?_DAC_init 0000                __accesstop 0060  
 __end_of__initialization 00A2             ___rparam_used 000001           _Interrupts_init 00AC  
          __pcstackCOMRAM 0000               _Lights_init 0060                ??_DAC_init 0000  
     __size_of_Comp1_init 0026   __end_of_Interrupts_init 00B6                   __Hparam 0000  
                 __Lparam 0000                   __pcinit 00A2                   __ramtop 0E00  
                 __ptext0 007A                   __ptext1 0060                   __ptext2 00AC  
                 __ptext3 003A                   __ptext4 008E              __size_of_ISR 002E  
    end_of_initialization 00A2              ??_Comp1_init 0000                 _TRISAbits 000F81  
               _TRISFbits 000F86                 _TRISGbits 000F87                 _TRISHbits 000F88  
       __size_of_DAC_init 0014        __end_of_Comp1_init 0060               _CM1CON0bits 000ED0  
             _CM1CON1bits 000ED1          ?_Interrupts_init 0000              ?_Lights_init 0000  
     start_initialization 00A2               __end_of_ISR 0036                 __pintcode 0008  
                _DAC_init 008E                  _LATAbits 000F79                  _LATFbits 000F7E  
                _LATGbits 000F7F                  _LATHbits 000F80                  _PIE2bits 000E2B  
                _PIR2bits 000E35      __size_of_Lights_init 001A                _CM1NCHbits 000ED2  
              _CM1PCHbits 000ED3                  __Hrparam 0000                  __Lrparam 0000  
           __size_of_main 0014                  isa$xinst 000000  __size_of_Interrupts_init 000A  
                int$flags 0001                _INTCONbits 000FF2                  intlevel2 0000  
            _DAC1CON0bits 000EC6              _DAC1CON1bits 000EC7  
