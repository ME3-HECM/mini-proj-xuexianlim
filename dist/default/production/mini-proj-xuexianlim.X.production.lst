

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 04 23:59:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.35
    33                           ; Generated 05/05/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F67K40 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     _PIR2bits	set	3637
    68  0000                     _PIR0bits	set	3635
    69  0000                     _PIE2bits	set	3627
    70  0000                     _PIE0bits	set	3625
    71  0000                     _CM1CON1bits	set	3793
    72  0000                     _CM1CON0bits	set	3792
    73  0000                     _CM1PCHbits	set	3795
    74  0000                     _CM1NCHbits	set	3794
    75  0000                     _DAC1CON1bits	set	3783
    76  0000                     _DAC1CON0bits	set	3782
    77  0000                     _T0CON0bits	set	4053
    78  0000                     _T0CON1bits	set	4054
    79  0000                     _TRISHbits	set	3976
    80  0000                     _TRISAbits	set	3969
    81  0000                     _TRISGbits	set	3975
    82  0000                     _LATFbits	set	3966
    83  0000                     _LATAbits	set	3961
    84  0000                     _LATGbits	set	3967
    85  0000                     _LATHbits	set	3968
    86  0000                     _TMR0L	set	4051
    87  0000                     _TMR0H	set	4052
    88  0000                     _INTCONbits	set	4082
    89  0000                     _TRISFbits	set	3974
    90                           
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94  000FA8                     __pcinit:
    95                           	callstack 0
    96  000FA8                     start_initialization:
    97                           	callstack 0
    98  000FA8                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Clear objects allocated to COMRAM (2 bytes)
   102  000FA8  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   103  000FAA  6A49               	clrf	__pbssCOMRAM& (0+255),c
   104  000FAC                     end_of_initialization:
   105                           	callstack 0
   106  000FAC                     __end_of__initialization:
   107                           	callstack 0
   108  000FAC  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109  000FAE  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110  000FB0  0100               	movlb	0
   111  000FB2  EF04  F004         	goto	_main	;jump to C main() function
   112                           
   113                           	psect	bssCOMRAM
   114  000049                     __pbssCOMRAM:
   115                           	callstack 0
   116  000049                     _dawndusk:
   117                           	callstack 0
   118  000049                     	ds	1
   119  00004A                     _minutehand:
   120                           	callstack 0
   121  00004A                     	ds	1
   122                           
   123                           	psect	cstackCOMRAM
   124  000001                     __pcstackCOMRAM:
   125                           	callstack 0
   126  000001                     ?_TimeDiff:
   127                           	callstack 0
   128  000001                     ?___awmod:
   129                           	callstack 0
   130  000001                     ?___lwmod:
   131                           	callstack 0
   132  000001                     LEDarray_disp_bin@number:
   133                           	callstack 0
   134  000001                     SmallHours@hour:
   135                           	callstack 0
   136  000001                     TimeDiff@hour1:
   137                           	callstack 0
   138  000001                     UpdateDawnDusk@pdawnhour:
   139                           	callstack 0
   140  000001                     ___awmod@dividend:
   141                           	callstack 0
   142  000001                     ___lwmod@dividend:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146  000001                     	ds	2
   147  000003                     SmallHours@minute:
   148                           	callstack 0
   149  000003                     TimeDiff@minute1:
   150                           	callstack 0
   151  000003                     UpdateDawnDusk@pdawnminute:
   152                           	callstack 0
   153  000003                     ___awmod@divisor:
   154                           	callstack 0
   155  000003                     ___lwmod@divisor:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x2
   159  000003                     	ds	2
   160  000005                     ___awmod@counter:
   161                           	callstack 0
   162  000005                     ___lwmod@counter:
   163                           	callstack 0
   164  000005                     SmallHours@dawnhour:
   165                           	callstack 0
   166  000005                     TimeDiff@hour2:
   167                           	callstack 0
   168  000005                     UpdateDawnDusk@pduskhour:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x4
   172  000005                     	ds	1
   173  000006                     ___awmod@sign:
   174                           	callstack 0
   175  000006                     LeapYear@year:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x5
   179  000006                     	ds	1
   180  000007                     TimeDiff@minute2:
   181                           	callstack 0
   182  000007                     UpdateDawnDusk@pduskminute:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x6
   186  000007                     	ds	1
   187  000008                     ??_LeapYear:
   188                           
   189                           ; 1 bytes @ 0x7
   190  000008                     	ds	1
   191  000009                     ??_TimeDiff:
   192  000009                     UpdateDawnDusk@phour:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x8
   196  000009                     	ds	1
   197  00000A                     ?___awdiv:
   198                           	callstack 0
   199  00000A                     LeapYear@leapyear:
   200                           	callstack 0
   201  00000A                     ___awdiv@dividend:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x9
   205  00000A                     	ds	1
   206  00000B                     Timekeeper@pyear:
   207                           	callstack 0
   208  00000B                     UpdateDawnDusk@pminute:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0xA
   212  00000B                     	ds	1
   213  00000C                     ___awdiv@divisor:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0xB
   217  00000C                     	ds	1
   218  00000D                     UpdateDawnDusk@DST:
   219                           	callstack 0
   220  00000D                     Timekeeper@pmonth:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0xC
   224  00000D                     	ds	1
   225  00000E                     ??_UpdateDawnDusk:
   226  00000E                     ___awdiv@counter:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0xD
   230  00000E                     	ds	1
   231  00000F                     ___awdiv@sign:
   232                           	callstack 0
   233  00000F                     Timekeeper@pday:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xE
   237  00000F                     	ds	1
   238  000010                     ___awdiv@quotient:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0xF
   242  000010                     	ds	1
   243  000011                     Timekeeper@phour:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x10
   247  000011                     	ds	1
   248  000012                     TimeAvg@hour1:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x11
   252  000012                     	ds	1
   253  000013                     Timekeeper@pminute:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x12
   257  000013                     	ds	1
   258  000014                     TimeAvg@minute1:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x13
   262  000014                     	ds	1
   263  000015                     Timekeeper@pdayofweek:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x14
   267  000015                     	ds	1
   268  000016                     TimeAvg@hour2:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x15
   272  000016                     	ds	1
   273  000017                     Timekeeper@pDST:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x16
   277  000017                     	ds	1
   278  000018                     TimeAvg@minute2:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x17
   282  000018                     	ds	1
   283  000019                     
   284                           ; 1 bytes @ 0x18
   285  000019                     	ds	1
   286  00001A                     TimeAvg@pavghour:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x19
   290  00001A                     	ds	2
   291  00001C                     TimeAvg@pavgminute:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x1B
   295  00001C                     	ds	2
   296  00001E                     
   297                           ; 1 bytes @ 0x1D
   298  00001E                     	ds	2
   299  000020                     TimeAvg@HalfTimeDiff:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x1F
   303  000020                     	ds	2
   304  000022                     SunPleaseFixTheDamnClock@pdawnhour:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x21
   308  000022                     	ds	2
   309  000024                     SunPleaseFixTheDamnClock@pdawnminute:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x23
   313  000024                     	ds	2
   314  000026                     SunPleaseFixTheDamnClock@pduskhour:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x25
   318  000026                     	ds	2
   319  000028                     SunPleaseFixTheDamnClock@pduskminute:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x27
   323  000028                     	ds	2
   324  00002A                     SunPleaseFixTheDamnClock@phour:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x29
   328  00002A                     	ds	2
   329  00002C                     SunPleaseFixTheDamnClock@pminute:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x2B
   333  00002C                     	ds	2
   334  00002E                     SunPleaseFixTheDamnClock@DST:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x2D
   338  00002E                     	ds	1
   339  00002F                     
   340                           ; 1 bytes @ 0x2E
   341  00002F                     	ds	2
   342  000031                     SunPleaseFixTheDamnClock@avghour:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x30
   346  000031                     	ds	2
   347  000033                     SunPleaseFixTheDamnClock@avgminute:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x32
   351  000033                     	ds	2
   352  000035                     SunPleaseFixTheDamnClock@timedifference:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x34
   356  000035                     	ds	2
   357  000037                     main@year:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x36
   361  000037                     	ds	2
   362  000039                     main@dayofweek:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x38
   366  000039                     	ds	1
   367  00003A                     main@DST:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x39
   371  00003A                     	ds	1
   372  00003B                     main@dawnminute:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x3A
   376  00003B                     	ds	2
   377  00003D                     main@duskminute:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x3C
   381  00003D                     	ds	2
   382  00003F                     main@duskhour:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x3E
   386  00003F                     	ds	2
   387  000041                     main@day:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x40
   391  000041                     	ds	1
   392  000042                     main@dawnhour:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x41
   396  000042                     	ds	2
   397  000044                     main@month:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x43
   401  000044                     	ds	1
   402  000045                     main@minute:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x44
   406  000045                     	ds	2
   407  000047                     main@hour:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x46
   411  000047                     	ds	2
   412                           
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 17 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  hour            2   70[COMRAM] int 
   423 ;;  minute          2   68[COMRAM] int 
   424 ;;  dawnhour        2   65[COMRAM] int 
   425 ;;  duskhour        2   62[COMRAM] int 
   426 ;;  duskminute      2   60[COMRAM] int 
   427 ;;  dawnminute      2   58[COMRAM] int 
   428 ;;  year            2   54[COMRAM] unsigned int 
   429 ;;  month           1   67[COMRAM] unsigned char 
   430 ;;  day             1   64[COMRAM] unsigned char 
   431 ;;  DST             1   57[COMRAM] unsigned char 
   432 ;;  dayofweek       1   56[COMRAM] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   443 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   445 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   446 ;;Total ram usage:       18 bytes
   447 ;; Hardware stack levels required when called: 4
   448 ;; This function calls:
   449 ;;		_Comp1_init
   450 ;;		_Interrupts_init
   451 ;;		_LEDarray_disp_bin
   452 ;;		_Lights_init
   453 ;;		_SmallHours
   454 ;;		_SunPleaseFixTheDamnClock
   455 ;;		_Timekeeper
   456 ;;		_Timer0_init
   457 ;;		_UpdateDawnDusk
   458 ;; This function is called by:
   459 ;;		Startup code after reset
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text0
   464  000808                     __ptext0:
   465                           	callstack 0
   466  000808                     _main:
   467                           	callstack 27
   468  000808                     
   469                           ;main.c: 19:     unsigned int year = 2021;
   470  000808  0E07               	movlw	7
   471  00080A  6E38               	movwf	(main@year+1)^0,c
   472  00080C  0EE5               	movlw	229
   473  00080E  6E37               	movwf	main@year^0,c
   474                           
   475                           ;main.c: 20:     char month = 11;
   476  000810  0E0B               	movlw	11
   477  000812  6E44               	movwf	main@month^0,c
   478                           
   479                           ;main.c: 21:     char day = 5;
   480  000814  0E05               	movlw	5
   481  000816  6E41               	movwf	main@day^0,c
   482                           
   483                           ;main.c: 22:     int hour = 7;
   484  000818  0E00               	movlw	0
   485  00081A  6E48               	movwf	(main@hour+1)^0,c
   486  00081C  0E07               	movlw	7
   487  00081E  6E47               	movwf	main@hour^0,c
   488                           
   489                           ;main.c: 23:     int minute = 59;
   490  000820  0E00               	movlw	0
   491  000822  6E46               	movwf	(main@minute+1)^0,c
   492  000824  0E3B               	movlw	59
   493  000826  6E45               	movwf	main@minute^0,c
   494                           
   495                           ;main.c: 24:     char dayofweek = 5;
   496  000828  0E05               	movlw	5
   497  00082A  6E39               	movwf	main@dayofweek^0,c
   498                           
   499                           ;main.c: 25:     char DST = 0;
   500  00082C  0E00               	movlw	0
   501  00082E  6E3A               	movwf	main@DST^0,c
   502                           
   503                           ;main.c: 26:     int dawnhour = 7;
   504  000830  0E00               	movlw	0
   505  000832  6E43               	movwf	(main@dawnhour+1)^0,c
   506  000834  0E07               	movlw	7
   507  000836  6E42               	movwf	main@dawnhour^0,c
   508                           
   509                           ;main.c: 27:     int dawnminute = 0;
   510  000838  0E00               	movlw	0
   511  00083A  6E3C               	movwf	(main@dawnminute+1)^0,c
   512  00083C  0E00               	movlw	0
   513  00083E  6E3B               	movwf	main@dawnminute^0,c
   514                           
   515                           ;main.c: 28:     int duskhour = 17;
   516  000840  0E00               	movlw	0
   517  000842  6E40               	movwf	(main@duskhour+1)^0,c
   518  000844  0E11               	movlw	17
   519  000846  6E3F               	movwf	main@duskhour^0,c
   520                           
   521                           ;main.c: 29:     int duskminute = 0;
   522  000848  0E00               	movlw	0
   523  00084A  6E3E               	movwf	(main@duskminute+1)^0,c
   524  00084C  0E00               	movlw	0
   525  00084E  6E3D               	movwf	main@duskminute^0,c
   526  000850                     
   527                           ;main.c: 32:     Lights_init();
   528  000850  ECBD  F007         	call	_Lights_init	;wreg free
   529                           
   530                           ;main.c: 33:     Timer0_init();
   531  000854  ECAD  F007         	call	_Timer0_init	;wreg free
   532                           
   533                           ;main.c: 34:     Comp1_init();
   534  000858  EC96  F007         	call	_Comp1_init	;wreg free
   535  00085C                     
   536                           ;main.c: 35:     Interrupts_init();
   537  00085C  ECDB  F007         	call	_Interrupts_init	;wreg free
   538                           
   539                           ;main.c: 36:     dawndusk = 0;
   540  000860  0E00               	movlw	0
   541  000862  6E49               	movwf	_dawndusk^0,c
   542  000864                     l83:
   543                           
   544                           ;main.c: 39:         if (minutehand) {
   545  000864  504A               	movf	_minutehand^0,w,c
   546  000866  B4D8               	btfsc	status,2,c
   547  000868  EF38  F004         	goto	u1621
   548  00086C  EF3A  F004         	goto	u1620
   549  000870                     u1621:
   550  000870  EF5A  F004         	goto	l1645
   551  000874                     u1620:
   552  000874                     
   553                           ;main.c: 40:             Timekeeper(&year, &month, &day, &hour, &minute, &dayofweek, &DS
      +                          T);
   554  000874  0E37               	movlw	low main@year
   555  000876  6E0B               	movwf	Timekeeper@pyear^0,c
   556  000878  0E00               	movlw	high main@year
   557  00087A  6E0C               	movwf	(Timekeeper@pyear+1)^0,c
   558  00087C  0E44               	movlw	low main@month
   559  00087E  6E0D               	movwf	Timekeeper@pmonth^0,c
   560  000880  0E00               	movlw	high main@month
   561  000882  6E0E               	movwf	(Timekeeper@pmonth+1)^0,c
   562  000884  0E41               	movlw	low main@day
   563  000886  6E0F               	movwf	Timekeeper@pday^0,c
   564  000888  0E00               	movlw	high main@day
   565  00088A  6E10               	movwf	(Timekeeper@pday+1)^0,c
   566  00088C  0E47               	movlw	low main@hour
   567  00088E  6E11               	movwf	Timekeeper@phour^0,c
   568  000890  0E00               	movlw	high main@hour
   569  000892  6E12               	movwf	(Timekeeper@phour+1)^0,c
   570  000894  0E45               	movlw	low main@minute
   571  000896  6E13               	movwf	Timekeeper@pminute^0,c
   572  000898  0E00               	movlw	high main@minute
   573  00089A  6E14               	movwf	(Timekeeper@pminute+1)^0,c
   574  00089C  0E39               	movlw	low main@dayofweek
   575  00089E  6E15               	movwf	Timekeeper@pdayofweek^0,c
   576  0008A0  0E00               	movlw	high main@dayofweek
   577  0008A2  6E16               	movwf	(Timekeeper@pdayofweek+1)^0,c
   578  0008A4  0E3A               	movlw	low main@DST
   579  0008A6  6E17               	movwf	Timekeeper@pDST^0,c
   580  0008A8  0E00               	movlw	high main@DST
   581  0008AA  6E18               	movwf	(Timekeeper@pDST+1)^0,c
   582  0008AC  EC2F  F000         	call	_Timekeeper	;wreg free
   583  0008B0                     
   584                           ;main.c: 41:             minutehand = 0;
   585  0008B0  0E00               	movlw	0
   586  0008B2  6E4A               	movwf	_minutehand^0,c
   587  0008B4                     l1645:
   588                           
   589                           ;main.c: 44:         LEDarray_disp_bin(hour);
   590  0008B4  C047  F001         	movff	main@hour,LEDarray_disp_bin@number
   591  0008B8  C048  F002         	movff	main@hour+1,LEDarray_disp_bin@number+1
   592  0008BC  ECF6  F006         	call	_LEDarray_disp_bin	;wreg free
   593  0008C0                     
   594                           ;main.c: 46:         SmallHours(hour, minute, dawnhour);
   595  0008C0  C047  F001         	movff	main@hour,SmallHours@hour
   596  0008C4  C048  F002         	movff	main@hour+1,SmallHours@hour+1
   597  0008C8  C045  F003         	movff	main@minute,SmallHours@minute
   598  0008CC  C046  F004         	movff	main@minute+1,SmallHours@minute+1
   599  0008D0  C042  F005         	movff	main@dawnhour,SmallHours@dawnhour
   600  0008D4  C043  F006         	movff	main@dawnhour+1,SmallHours@dawnhour+1
   601  0008D8  EC2E  F007         	call	_SmallHours	;wreg free
   602  0008DC                     
   603                           ;main.c: 48:         if (dawndusk) {
   604  0008DC  5049               	movf	_dawndusk^0,w,c
   605  0008DE  B4D8               	btfsc	status,2,c
   606  0008E0  EF74  F004         	goto	u1631
   607  0008E4  EF76  F004         	goto	u1630
   608  0008E8                     u1631:
   609  0008E8  EF94  F004         	goto	l1655
   610  0008EC                     u1630:
   611  0008EC                     
   612                           ;main.c: 49:             UpdateDawnDusk(&dawnhour, &dawnminute, &duskhour, &duskminute, 
      +                          &hour, &minute, DST);
   613  0008EC  0E42               	movlw	low main@dawnhour
   614  0008EE  6E01               	movwf	UpdateDawnDusk@pdawnhour^0,c
   615  0008F0  0E00               	movlw	high main@dawnhour
   616  0008F2  6E02               	movwf	(UpdateDawnDusk@pdawnhour+1)^0,c
   617  0008F4  0E3B               	movlw	low main@dawnminute
   618  0008F6  6E03               	movwf	UpdateDawnDusk@pdawnminute^0,c
   619  0008F8  0E00               	movlw	high main@dawnminute
   620  0008FA  6E04               	movwf	(UpdateDawnDusk@pdawnminute+1)^0,c
   621  0008FC  0E3F               	movlw	low main@duskhour
   622  0008FE  6E05               	movwf	UpdateDawnDusk@pduskhour^0,c
   623  000900  0E00               	movlw	high main@duskhour
   624  000902  6E06               	movwf	(UpdateDawnDusk@pduskhour+1)^0,c
   625  000904  0E3D               	movlw	low main@duskminute
   626  000906  6E07               	movwf	UpdateDawnDusk@pduskminute^0,c
   627  000908  0E00               	movlw	high main@duskminute
   628  00090A  6E08               	movwf	(UpdateDawnDusk@pduskminute+1)^0,c
   629  00090C  0E47               	movlw	low main@hour
   630  00090E  6E09               	movwf	UpdateDawnDusk@phour^0,c
   631  000910  0E00               	movlw	high main@hour
   632  000912  6E0A               	movwf	(UpdateDawnDusk@phour+1)^0,c
   633  000914  0E45               	movlw	low main@minute
   634  000916  6E0B               	movwf	UpdateDawnDusk@pminute^0,c
   635  000918  0E00               	movlw	high main@minute
   636  00091A  6E0C               	movwf	(UpdateDawnDusk@pminute+1)^0,c
   637  00091C  C03A  F00D         	movff	main@DST,UpdateDawnDusk@DST
   638  000920  EC65  F006         	call	_UpdateDawnDusk	;wreg free
   639  000924                     
   640                           ;main.c: 50:             dawndusk = 0;
   641  000924  0E00               	movlw	0
   642  000926  6E49               	movwf	_dawndusk^0,c
   643  000928                     l1655:
   644                           
   645                           ;main.c: 53:         if (hour == 12 && minute == 0) {
   646  000928  0E0C               	movlw	12
   647  00092A  1847               	xorwf	main@hour^0,w,c
   648  00092C  1048               	iorwf	(main@hour+1)^0,w,c
   649  00092E  A4D8               	btfss	status,2,c
   650  000930  EF9C  F004         	goto	u1641
   651  000934  EF9E  F004         	goto	u1640
   652  000938                     u1641:
   653  000938  EF32  F004         	goto	l83
   654  00093C                     u1640:
   655  00093C  5045               	movf	main@minute^0,w,c
   656  00093E  1046               	iorwf	(main@minute+1)^0,w,c
   657  000940  A4D8               	btfss	status,2,c
   658  000942  EFA5  F004         	goto	u1651
   659  000946  EFA7  F004         	goto	u1650
   660  00094A                     u1651:
   661  00094A  EF32  F004         	goto	l83
   662  00094E                     u1650:
   663  00094E                     
   664                           ;main.c: 54:             SunPleaseFixTheDamnClock(&dawnhour, &dawnminute, &duskhour, &du
      +                          skminute, &hour, &minute, DST);
   665  00094E  0E42               	movlw	low main@dawnhour
   666  000950  6E22               	movwf	SunPleaseFixTheDamnClock@pdawnhour^0,c
   667  000952  0E00               	movlw	high main@dawnhour
   668  000954  6E23               	movwf	(SunPleaseFixTheDamnClock@pdawnhour+1)^0,c
   669  000956  0E3B               	movlw	low main@dawnminute
   670  000958  6E24               	movwf	SunPleaseFixTheDamnClock@pdawnminute^0,c
   671  00095A  0E00               	movlw	high main@dawnminute
   672  00095C  6E25               	movwf	(SunPleaseFixTheDamnClock@pdawnminute+1)^0,c
   673  00095E  0E3F               	movlw	low main@duskhour
   674  000960  6E26               	movwf	SunPleaseFixTheDamnClock@pduskhour^0,c
   675  000962  0E00               	movlw	high main@duskhour
   676  000964  6E27               	movwf	(SunPleaseFixTheDamnClock@pduskhour+1)^0,c
   677  000966  0E3D               	movlw	low main@duskminute
   678  000968  6E28               	movwf	SunPleaseFixTheDamnClock@pduskminute^0,c
   679  00096A  0E00               	movlw	high main@duskminute
   680  00096C  6E29               	movwf	(SunPleaseFixTheDamnClock@pduskminute+1)^0,c
   681  00096E  0E47               	movlw	low main@hour
   682  000970  6E2A               	movwf	SunPleaseFixTheDamnClock@phour^0,c
   683  000972  0E00               	movlw	high main@hour
   684  000974  6E2B               	movwf	(SunPleaseFixTheDamnClock@phour+1)^0,c
   685  000976  0E45               	movlw	low main@minute
   686  000978  6E2C               	movwf	SunPleaseFixTheDamnClock@pminute^0,c
   687  00097A  0E00               	movlw	high main@minute
   688  00097C  6E2D               	movwf	(SunPleaseFixTheDamnClock@pminute+1)^0,c
   689  00097E  C03A  F02E         	movff	main@DST,SunPleaseFixTheDamnClock@DST
   690  000982  EC5A  F002         	call	_SunPleaseFixTheDamnClock	;wreg free
   691  000986  EF32  F004         	goto	l83
   692  00098A  EF2D  F000         	goto	start
   693  00098E                     __end_of_main:
   694                           	callstack 0
   695                           
   696 ;; *************** function _UpdateDawnDusk *****************
   697 ;; Defined at:
   698 ;;		line 160 in file "timers.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  pdawnhour       2    0[COMRAM] PTR int 
   701 ;;		 -> main@dawnhour(2), 
   702 ;;  pdawnminute     2    2[COMRAM] PTR int 
   703 ;;		 -> main@dawnminute(2), 
   704 ;;  pduskhour       2    4[COMRAM] PTR int 
   705 ;;		 -> main@duskhour(2), 
   706 ;;  pduskminute     2    6[COMRAM] PTR int 
   707 ;;		 -> main@duskminute(2), 
   708 ;;  phour           2    8[COMRAM] PTR int 
   709 ;;		 -> main@hour(2), 
   710 ;;  pminute         2   10[COMRAM] PTR int 
   711 ;;		 -> main@minute(2), 
   712 ;;  DST             1   12[COMRAM] unsigned char 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   724 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   727 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   728 ;;Total ram usage:       15 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text1
   739  000CCA                     __ptext1:
   740                           	callstack 0
   741  000CCA                     _UpdateDawnDusk:
   742                           	callstack 29
   743  000CCA                     
   744                           ;timers.c: 160: void UpdateDawnDusk(int *pdawnhour, int *pdawnminute, int *pduskhour, in
      +                          t *pduskminute, int *phour, int *pminute, char DST);timers.c: 161: {;timers.c: 162:     
      +                          if (dawndusk == 1) {
   745  000CCA  0449               	decf	_dawndusk^0,w,c
   746  000CCC  A4D8               	btfss	status,2,c
   747  000CCE  EF6B  F006         	goto	u1511
   748  000CD2  EF6D  F006         	goto	u1510
   749  000CD6                     u1511:
   750  000CD6  EF8D  F006         	goto	l1585
   751  000CDA                     u1510:
   752  000CDA                     
   753                           ;timers.c: 163:         *pdawnhour = *phour - DST;
   754  000CDA  500D               	movf	UpdateDawnDusk@DST^0,w,c
   755  000CDC  C009  FFD9         	movff	UpdateDawnDusk@phour,fsr2l
   756  000CE0  C00A  FFDA         	movff	UpdateDawnDusk@phour+1,fsr2h
   757  000CE4  CFDE F00E          	movff	postinc2,??_UpdateDawnDusk
   758  000CE8  CFDD F00F          	movff	postdec2,??_UpdateDawnDusk+1
   759  000CEC  5E0E               	subwf	??_UpdateDawnDusk^0,f,c
   760  000CEE  0E00               	movlw	0
   761  000CF0  5A0F               	subwfb	(??_UpdateDawnDusk+1)^0,f,c
   762  000CF2  C001  FFD9         	movff	UpdateDawnDusk@pdawnhour,fsr2l
   763  000CF6  C002  FFDA         	movff	UpdateDawnDusk@pdawnhour+1,fsr2h
   764  000CFA  C00E  FFDE         	movff	??_UpdateDawnDusk,postinc2
   765  000CFE  C00F  FFDD         	movff	??_UpdateDawnDusk+1,postdec2
   766  000D02                     
   767                           ;timers.c: 164:         *pdawnminute = *pminute;
   768  000D02  C00B  FFD9         	movff	UpdateDawnDusk@pminute,fsr2l
   769  000D06  C00C  FFDA         	movff	UpdateDawnDusk@pminute+1,fsr2h
   770  000D0A  C003  FFE1         	movff	UpdateDawnDusk@pdawnminute,fsr1l
   771  000D0E  C004  FFE2         	movff	UpdateDawnDusk@pdawnminute+1,fsr1h
   772  000D12  CFDE FFE6          	movff	postinc2,postinc1
   773  000D16  CFDD FFE5          	movff	postdec2,postdec1
   774  000D1A                     l1585:
   775                           
   776                           ;timers.c: 167:     if (dawndusk == 2) {
   777  000D1A  0E02               	movlw	2
   778  000D1C  1849               	xorwf	_dawndusk^0,w,c
   779  000D1E  A4D8               	btfss	status,2,c
   780  000D20  EF94  F006         	goto	u1521
   781  000D24  EF96  F006         	goto	u1520
   782  000D28                     u1521:
   783  000D28  EFB6  F006         	goto	l211
   784  000D2C                     u1520:
   785  000D2C                     
   786                           ;timers.c: 168:         *pduskhour = *phour - DST;
   787  000D2C  500D               	movf	UpdateDawnDusk@DST^0,w,c
   788  000D2E  C009  FFD9         	movff	UpdateDawnDusk@phour,fsr2l
   789  000D32  C00A  FFDA         	movff	UpdateDawnDusk@phour+1,fsr2h
   790  000D36  CFDE F00E          	movff	postinc2,??_UpdateDawnDusk
   791  000D3A  CFDD F00F          	movff	postdec2,??_UpdateDawnDusk+1
   792  000D3E  5E0E               	subwf	??_UpdateDawnDusk^0,f,c
   793  000D40  0E00               	movlw	0
   794  000D42  5A0F               	subwfb	(??_UpdateDawnDusk+1)^0,f,c
   795  000D44  C005  FFD9         	movff	UpdateDawnDusk@pduskhour,fsr2l
   796  000D48  C006  FFDA         	movff	UpdateDawnDusk@pduskhour+1,fsr2h
   797  000D4C  C00E  FFDE         	movff	??_UpdateDawnDusk,postinc2
   798  000D50  C00F  FFDD         	movff	??_UpdateDawnDusk+1,postdec2
   799  000D54                     
   800                           ;timers.c: 169:         *pduskminute = *pminute;
   801  000D54  C00B  FFD9         	movff	UpdateDawnDusk@pminute,fsr2l
   802  000D58  C00C  FFDA         	movff	UpdateDawnDusk@pminute+1,fsr2h
   803  000D5C  C007  FFE1         	movff	UpdateDawnDusk@pduskminute,fsr1l
   804  000D60  C008  FFE2         	movff	UpdateDawnDusk@pduskminute+1,fsr1h
   805  000D64  CFDE FFE6          	movff	postinc2,postinc1
   806  000D68  CFDD FFE5          	movff	postdec2,postdec1
   807  000D6C                     l211:
   808  000D6C  0012               	return		;funcret
   809  000D6E                     __end_of_UpdateDawnDusk:
   810                           	callstack 0
   811                           
   812 ;; *************** function _Timer0_init *****************
   813 ;; Defined at:
   814 ;;		line 9 in file "timers.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text2
   843  000F5A                     __ptext2:
   844                           	callstack 0
   845  000F5A                     _Timer0_init:
   846                           	callstack 29
   847  000F5A                     
   848                           ;timers.c: 11:     T0CON1bits.T0CS=0b010;
   849  000F5A  50D6               	movf	214,w,c	;volatile
   850  000F5C  0B1F               	andlw	-225
   851  000F5E  0940               	iorlw	64
   852  000F60  6ED6               	movwf	214,c	;volatile
   853  000F62                     
   854                           ;timers.c: 12:     T0CON1bits.T0ASYNC=1;
   855  000F62  88D6               	bsf	214,4,c	;volatile
   856                           
   857                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
   858  000F64  50D6               	movf	214,w,c	;volatile
   859  000F66  0BF0               	andlw	-16
   860  000F68  090E               	iorlw	14
   861  000F6A  6ED6               	movwf	214,c	;volatile
   862  000F6C                     
   863                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
   864  000F6C  88D5               	bsf	213,4,c	;volatile
   865                           
   866                           ;timers.c: 18:     TMR0H=0b00011011;
   867  000F6E  0E1B               	movlw	27
   868  000F70  6ED4               	movwf	212,c	;volatile
   869                           
   870                           ;timers.c: 19:     TMR0L=0b00011110;
   871  000F72  0E1E               	movlw	30
   872  000F74  6ED3               	movwf	211,c	;volatile
   873  000F76                     
   874                           ;timers.c: 20:     T0CON0bits.T0EN=1;
   875  000F76  8ED5               	bsf	213,7,c	;volatile
   876  000F78  0012               	return		;funcret
   877  000F7A                     __end_of_Timer0_init:
   878                           	callstack 0
   879                           
   880 ;; *************** function _Timekeeper *****************
   881 ;; Defined at:
   882 ;;		line 26 in file "timers.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  pyear           2   10[COMRAM] PTR unsigned int 
   885 ;;		 -> main@year(2), 
   886 ;;  pmonth          2   12[COMRAM] PTR unsigned char 
   887 ;;		 -> main@month(1), 
   888 ;;  pday            2   14[COMRAM] PTR unsigned char 
   889 ;;		 -> main@day(1), 
   890 ;;  phour           2   16[COMRAM] PTR int 
   891 ;;		 -> main@hour(2), 
   892 ;;  pminute         2   18[COMRAM] PTR int 
   893 ;;		 -> main@minute(2), 
   894 ;;  pdayofweek      2   20[COMRAM] PTR unsigned char 
   895 ;;		 -> main@dayofweek(1), 
   896 ;;  pDST            2   22[COMRAM] PTR unsigned char 
   897 ;;		 -> main@DST(1), 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   909 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;Total ram usage:       16 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 3
   916 ;; This function calls:
   917 ;;		_LeapYear
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text3
   924  00005E                     __ptext3:
   925                           	callstack 0
   926  00005E                     _Timekeeper:
   927                           	callstack 27
   928  00005E                     
   929                           ;timers.c: 28:     ++*pminute;
   930  00005E  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
   931  000062  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   932  000066  2ADE               	incf	postinc2,f,c
   933  000068  0E00               	movlw	0
   934  00006A  22DD               	addwfc	postdec2,f,c
   935                           
   936                           ;timers.c: 30:     if (*pminute == 60) {*pminute = 0; ++*phour;}
   937  00006C  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
   938  000070  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   939  000074  0E3C               	movlw	60
   940  000076  18DE               	xorwf	postinc2,w,c
   941  000078  10DE               	iorwf	postinc2,w,c
   942  00007A  A4D8               	btfss	status,2,c
   943  00007C  EF42  F000         	goto	u1091
   944  000080  EF44  F000         	goto	u1090
   945  000084                     u1091:
   946  000084  EF53  F000         	goto	l1457
   947  000088                     u1090:
   948  000088  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
   949  00008C  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   950  000090  0E00               	movlw	0
   951  000092  6EDE               	movwf	postinc2,c
   952  000094  0E00               	movlw	0
   953  000096  6EDD               	movwf	postdec2,c
   954  000098  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   955  00009C  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   956  0000A0  2ADE               	incf	postinc2,f,c
   957  0000A2  0E00               	movlw	0
   958  0000A4  22DD               	addwfc	postdec2,f,c
   959  0000A6                     l1457:
   960                           
   961                           ;timers.c: 32:     if (*phour == 24) {*phour = 0; ++*pday; ++*pdayofweek;}
   962  0000A6  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   963  0000AA  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   964  0000AE  0E18               	movlw	24
   965  0000B0  18DE               	xorwf	postinc2,w,c
   966  0000B2  10DE               	iorwf	postinc2,w,c
   967  0000B4  A4D8               	btfss	status,2,c
   968  0000B6  EF5F  F000         	goto	u1101
   969  0000BA  EF61  F000         	goto	u1100
   970  0000BE                     u1101:
   971  0000BE  EF73  F000         	goto	l1465
   972  0000C2                     u1100:
   973  0000C2  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   974  0000C6  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   975  0000CA  0E00               	movlw	0
   976  0000CC  6EDE               	movwf	postinc2,c
   977  0000CE  0E00               	movlw	0
   978  0000D0  6EDD               	movwf	postdec2,c
   979  0000D2  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   980  0000D6  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   981  0000DA  2ADF               	incf	indf2,f,c
   982  0000DC  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   983  0000E0  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
   984  0000E4  2ADF               	incf	indf2,f,c
   985  0000E6                     l1465:
   986                           
   987                           ;timers.c: 34:     if (*pdayofweek == 8) {*pdayofweek = 1;}
   988  0000E6  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   989  0000EA  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
   990  0000EE  0E08               	movlw	8
   991  0000F0  18DE               	xorwf	postinc2,w,c
   992  0000F2  A4D8               	btfss	status,2,c
   993  0000F4  EF7E  F000         	goto	u1111
   994  0000F8  EF80  F000         	goto	u1110
   995  0000FC                     u1111:
   996  0000FC  EF86  F000         	goto	l1469
   997  000100                     u1110:
   998  000100  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   999  000104  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1000  000108  0E01               	movlw	1
  1001  00010A  6EDF               	movwf	indf2,c
  1002  00010C                     l1469:
  1003                           
  1004                           ;timers.c: 36:     if (*pday == 29 && *pmonth == 2 && !LeapYear(*pyear)) {
  1005  00010C  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1006  000110  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1007  000114  0E1D               	movlw	29
  1008  000116  18DE               	xorwf	postinc2,w,c
  1009  000118  A4D8               	btfss	status,2,c
  1010  00011A  EF91  F000         	goto	u1121
  1011  00011E  EF93  F000         	goto	u1120
  1012  000122                     u1121:
  1013  000122  EFBD  F000         	goto	l1479
  1014  000126                     u1120:
  1015  000126  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1016  00012A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1017  00012E  0E02               	movlw	2
  1018  000130  18DE               	xorwf	postinc2,w,c
  1019  000132  A4D8               	btfss	status,2,c
  1020  000134  EF9E  F000         	goto	u1131
  1021  000138  EFA0  F000         	goto	u1130
  1022  00013C                     u1131:
  1023  00013C  EFBD  F000         	goto	l1479
  1024  000140                     u1130:
  1025  000140  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
  1026  000144  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
  1027  000148  CFDE F006          	movff	postinc2,LeapYear@year
  1028  00014C  CFDD F007          	movff	postdec2,LeapYear@year+1
  1029  000150  ECB7  F006         	call	_LeapYear	;wreg free
  1030  000154  0900               	iorlw	0
  1031  000156  A4D8               	btfss	status,2,c
  1032  000158  EFB0  F000         	goto	u1141
  1033  00015C  EFB2  F000         	goto	u1140
  1034  000160                     u1141:
  1035  000160  EFBD  F000         	goto	l1479
  1036  000164                     u1140:
  1037  000164                     
  1038                           ;timers.c: 37:         *pday = 1;
  1039  000164  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1040  000168  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1041  00016C  0E01               	movlw	1
  1042  00016E  6EDF               	movwf	indf2,c
  1043  000170                     
  1044                           ;timers.c: 38:         ++*pmonth;
  1045  000170  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1046  000174  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1047  000178  2ADF               	incf	indf2,f,c
  1048  00017A                     l1479:
  1049                           
  1050                           ;timers.c: 41:     if (*pday == 30 && *pmonth == 2 && LeapYear(*pyear)) {
  1051  00017A  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1052  00017E  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1053  000182  0E1E               	movlw	30
  1054  000184  18DE               	xorwf	postinc2,w,c
  1055  000186  A4D8               	btfss	status,2,c
  1056  000188  EFC8  F000         	goto	u1151
  1057  00018C  EFCA  F000         	goto	u1150
  1058  000190                     u1151:
  1059  000190  EFF4  F000         	goto	l1489
  1060  000194                     u1150:
  1061  000194  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1062  000198  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1063  00019C  0E02               	movlw	2
  1064  00019E  18DE               	xorwf	postinc2,w,c
  1065  0001A0  A4D8               	btfss	status,2,c
  1066  0001A2  EFD5  F000         	goto	u1161
  1067  0001A6  EFD7  F000         	goto	u1160
  1068  0001AA                     u1161:
  1069  0001AA  EFF4  F000         	goto	l1489
  1070  0001AE                     u1160:
  1071  0001AE  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
  1072  0001B2  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
  1073  0001B6  CFDE F006          	movff	postinc2,LeapYear@year
  1074  0001BA  CFDD F007          	movff	postdec2,LeapYear@year+1
  1075  0001BE  ECB7  F006         	call	_LeapYear	;wreg free
  1076  0001C2  0900               	iorlw	0
  1077  0001C4  B4D8               	btfsc	status,2,c
  1078  0001C6  EFE7  F000         	goto	u1171
  1079  0001CA  EFE9  F000         	goto	u1170
  1080  0001CE                     u1171:
  1081  0001CE  EFF4  F000         	goto	l1489
  1082  0001D2                     u1170:
  1083  0001D2                     
  1084                           ;timers.c: 42:         *pday = 1;
  1085  0001D2  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1086  0001D6  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1087  0001DA  0E01               	movlw	1
  1088  0001DC  6EDF               	movwf	indf2,c
  1089  0001DE                     
  1090                           ;timers.c: 43:         ++*pmonth;
  1091  0001DE  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1092  0001E2  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1093  0001E6  2ADF               	incf	indf2,f,c
  1094  0001E8                     l1489:
  1095                           
  1096                           ;timers.c: 46:     if (*pday == 31 && (*pmonth == 4 || *pmonth == 6 || *pmonth == 9 || *
      +                          pmonth == 11)) {
  1097  0001E8  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1098  0001EC  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1099  0001F0  0E1F               	movlw	31
  1100  0001F2  18DE               	xorwf	postinc2,w,c
  1101  0001F4  A4D8               	btfss	status,2,c
  1102  0001F6  EFFF  F000         	goto	u1181
  1103  0001FA  EF01  F001         	goto	u1180
  1104  0001FE                     u1181:
  1105  0001FE  EF40  F001         	goto	l1503
  1106  000202                     u1180:
  1107  000202  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1108  000206  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1109  00020A  0E04               	movlw	4
  1110  00020C  18DE               	xorwf	postinc2,w,c
  1111  00020E  B4D8               	btfsc	status,2,c
  1112  000210  EF0C  F001         	goto	u1191
  1113  000214  EF0E  F001         	goto	u1190
  1114  000218                     u1191:
  1115  000218  EF35  F001         	goto	l1499
  1116  00021C                     u1190:
  1117  00021C  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1118  000220  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1119  000224  0E06               	movlw	6
  1120  000226  18DE               	xorwf	postinc2,w,c
  1121  000228  B4D8               	btfsc	status,2,c
  1122  00022A  EF19  F001         	goto	u1201
  1123  00022E  EF1B  F001         	goto	u1200
  1124  000232                     u1201:
  1125  000232  EF35  F001         	goto	l1499
  1126  000236                     u1200:
  1127  000236  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1128  00023A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1129  00023E  0E09               	movlw	9
  1130  000240  18DE               	xorwf	postinc2,w,c
  1131  000242  B4D8               	btfsc	status,2,c
  1132  000244  EF26  F001         	goto	u1211
  1133  000248  EF28  F001         	goto	u1210
  1134  00024C                     u1211:
  1135  00024C  EF35  F001         	goto	l1499
  1136  000250                     u1210:
  1137  000250  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1138  000254  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1139  000258  0E0B               	movlw	11
  1140  00025A  18DE               	xorwf	postinc2,w,c
  1141  00025C  A4D8               	btfss	status,2,c
  1142  00025E  EF33  F001         	goto	u1221
  1143  000262  EF35  F001         	goto	u1220
  1144  000266                     u1221:
  1145  000266  EF40  F001         	goto	l1503
  1146  00026A                     u1220:
  1147  00026A                     l1499:
  1148                           
  1149                           ;timers.c: 47:         *pday = 1;
  1150  00026A  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1151  00026E  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1152  000272  0E01               	movlw	1
  1153  000274  6EDF               	movwf	indf2,c
  1154  000276                     
  1155                           ;timers.c: 48:         ++*pmonth;
  1156  000276  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1157  00027A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1158  00027E  2ADF               	incf	indf2,f,c
  1159  000280                     l1503:
  1160                           
  1161                           ;timers.c: 51:     if (*pday == 32 && (*pmonth == 1 || *pmonth == 3 || *pmonth == 5 || *
      +                          pmonth == 7 || *pmonth == 8 || *pmonth == 10 || *pmonth == 12)) {
  1162  000280  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1163  000284  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1164  000288  0E20               	movlw	32
  1165  00028A  18DE               	xorwf	postinc2,w,c
  1166  00028C  A4D8               	btfss	status,2,c
  1167  00028E  EF4B  F001         	goto	u1231
  1168  000292  EF4D  F001         	goto	u1230
  1169  000296                     u1231:
  1170  000296  EFB2  F001         	goto	l1523
  1171  00029A                     u1230:
  1172  00029A  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1173  00029E  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1174  0002A2  04DE               	decf	postinc2,w,c
  1175  0002A4  B4D8               	btfsc	status,2,c
  1176  0002A6  EF57  F001         	goto	u1241
  1177  0002AA  EF59  F001         	goto	u1240
  1178  0002AE                     u1241:
  1179  0002AE  EFA7  F001         	goto	l1519
  1180  0002B2                     u1240:
  1181  0002B2  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1182  0002B6  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1183  0002BA  0E03               	movlw	3
  1184  0002BC  18DE               	xorwf	postinc2,w,c
  1185  0002BE  B4D8               	btfsc	status,2,c
  1186  0002C0  EF64  F001         	goto	u1251
  1187  0002C4  EF66  F001         	goto	u1250
  1188  0002C8                     u1251:
  1189  0002C8  EFA7  F001         	goto	l1519
  1190  0002CC                     u1250:
  1191  0002CC  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1192  0002D0  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1193  0002D4  0E05               	movlw	5
  1194  0002D6  18DE               	xorwf	postinc2,w,c
  1195  0002D8  B4D8               	btfsc	status,2,c
  1196  0002DA  EF71  F001         	goto	u1261
  1197  0002DE  EF73  F001         	goto	u1260
  1198  0002E2                     u1261:
  1199  0002E2  EFA7  F001         	goto	l1519
  1200  0002E6                     u1260:
  1201  0002E6  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1202  0002EA  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1203  0002EE  0E07               	movlw	7
  1204  0002F0  18DE               	xorwf	postinc2,w,c
  1205  0002F2  B4D8               	btfsc	status,2,c
  1206  0002F4  EF7E  F001         	goto	u1271
  1207  0002F8  EF80  F001         	goto	u1270
  1208  0002FC                     u1271:
  1209  0002FC  EFA7  F001         	goto	l1519
  1210  000300                     u1270:
  1211  000300  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1212  000304  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1213  000308  0E08               	movlw	8
  1214  00030A  18DE               	xorwf	postinc2,w,c
  1215  00030C  B4D8               	btfsc	status,2,c
  1216  00030E  EF8B  F001         	goto	u1281
  1217  000312  EF8D  F001         	goto	u1280
  1218  000316                     u1281:
  1219  000316  EFA7  F001         	goto	l1519
  1220  00031A                     u1280:
  1221  00031A  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1222  00031E  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1223  000322  0E0A               	movlw	10
  1224  000324  18DE               	xorwf	postinc2,w,c
  1225  000326  B4D8               	btfsc	status,2,c
  1226  000328  EF98  F001         	goto	u1291
  1227  00032C  EF9A  F001         	goto	u1290
  1228  000330                     u1291:
  1229  000330  EFA7  F001         	goto	l1519
  1230  000334                     u1290:
  1231  000334  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1232  000338  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1233  00033C  0E0C               	movlw	12
  1234  00033E  18DE               	xorwf	postinc2,w,c
  1235  000340  A4D8               	btfss	status,2,c
  1236  000342  EFA5  F001         	goto	u1301
  1237  000346  EFA7  F001         	goto	u1300
  1238  00034A                     u1301:
  1239  00034A  EFB2  F001         	goto	l1523
  1240  00034E                     u1300:
  1241  00034E                     l1519:
  1242                           
  1243                           ;timers.c: 52:         *pday = 1;
  1244  00034E  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1245  000352  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1246  000356  0E01               	movlw	1
  1247  000358  6EDF               	movwf	indf2,c
  1248  00035A                     
  1249                           ;timers.c: 53:         ++*pmonth;
  1250  00035A  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1251  00035E  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1252  000362  2ADF               	incf	indf2,f,c
  1253  000364                     l1523:
  1254                           
  1255                           ;timers.c: 56:     if (*pmonth == 13) {*pmonth = 1; ++*pyear;}
  1256  000364  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1257  000368  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1258  00036C  0E0D               	movlw	13
  1259  00036E  18DE               	xorwf	postinc2,w,c
  1260  000370  A4D8               	btfss	status,2,c
  1261  000372  EFBD  F001         	goto	u1311
  1262  000376  EFBF  F001         	goto	u1310
  1263  00037A                     u1311:
  1264  00037A  EFCC  F001         	goto	l1529
  1265  00037E                     u1310:
  1266  00037E  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1267  000382  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1268  000386  0E01               	movlw	1
  1269  000388  6EDF               	movwf	indf2,c
  1270  00038A  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
  1271  00038E  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
  1272  000392  2ADE               	incf	postinc2,f,c
  1273  000394  0E00               	movlw	0
  1274  000396  22DD               	addwfc	postdec2,f,c
  1275  000398                     l1529:
  1276                           
  1277                           ;timers.c: 59:     if (*pmonth == 3 && *pday >= 25 && *phour == 1 && *pdayofweek == 7) {
  1278  000398  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1279  00039C  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1280  0003A0  0E03               	movlw	3
  1281  0003A2  18DE               	xorwf	postinc2,w,c
  1282  0003A4  A4D8               	btfss	status,2,c
  1283  0003A6  EFD7  F001         	goto	u1321
  1284  0003AA  EFD9  F001         	goto	u1320
  1285  0003AE                     u1321:
  1286  0003AE  EF0C  F002         	goto	l1541
  1287  0003B2                     u1320:
  1288  0003B2  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1289  0003B6  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1290  0003BA  0E18               	movlw	24
  1291  0003BC  64DF               	cpfsgt	indf2,c
  1292  0003BE  EFE3  F001         	goto	u1331
  1293  0003C2  EFE5  F001         	goto	u1330
  1294  0003C6                     u1331:
  1295  0003C6  EF0C  F002         	goto	l1541
  1296  0003CA                     u1330:
  1297  0003CA  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1298  0003CE  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1299  0003D2  04DE               	decf	postinc2,w,c
  1300  0003D4  10DE               	iorwf	postinc2,w,c
  1301  0003D6  A4D8               	btfss	status,2,c
  1302  0003D8  EFF0  F001         	goto	u1341
  1303  0003DC  EFF2  F001         	goto	u1340
  1304  0003E0                     u1341:
  1305  0003E0  EF0C  F002         	goto	l1541
  1306  0003E4                     u1340:
  1307  0003E4  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
  1308  0003E8  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1309  0003EC  0E07               	movlw	7
  1310  0003EE  18DE               	xorwf	postinc2,w,c
  1311  0003F0  A4D8               	btfss	status,2,c
  1312  0003F2  EFFD  F001         	goto	u1351
  1313  0003F6  EFFF  F001         	goto	u1350
  1314  0003FA                     u1351:
  1315  0003FA  EF0C  F002         	goto	l1541
  1316  0003FE                     u1350:
  1317  0003FE                     
  1318                           ;timers.c: 60:         ++*phour;
  1319  0003FE  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1320  000402  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1321  000406  2ADE               	incf	postinc2,f,c
  1322  000408  0E00               	movlw	0
  1323  00040A  22DD               	addwfc	postdec2,f,c
  1324  00040C                     
  1325                           ;timers.c: 61:         *pDST = 1;
  1326  00040C  C017  FFD9         	movff	Timekeeper@pDST,fsr2l
  1327  000410  C018  FFDA         	movff	Timekeeper@pDST+1,fsr2h
  1328  000414  0E01               	movlw	1
  1329  000416  6EDF               	movwf	indf2,c
  1330  000418                     l1541:
  1331                           
  1332                           ;timers.c: 64:     if (*pmonth == 10 && *pday >=25 && *phour == 2 && *pdayofweek == 7 &&
      +                           *pDST) {
  1333  000418  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1334  00041C  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1335  000420  0E0A               	movlw	10
  1336  000422  18DE               	xorwf	postinc2,w,c
  1337  000424  A4D8               	btfss	status,2,c
  1338  000426  EF17  F002         	goto	u1361
  1339  00042A  EF19  F002         	goto	u1360
  1340  00042E                     u1361:
  1341  00042E  EF59  F002         	goto	l166
  1342  000432                     u1360:
  1343  000432  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1344  000436  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1345  00043A  0E18               	movlw	24
  1346  00043C  64DF               	cpfsgt	indf2,c
  1347  00043E  EF23  F002         	goto	u1371
  1348  000442  EF25  F002         	goto	u1370
  1349  000446                     u1371:
  1350  000446  EF59  F002         	goto	l166
  1351  00044A                     u1370:
  1352  00044A  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1353  00044E  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1354  000452  0E02               	movlw	2
  1355  000454  18DE               	xorwf	postinc2,w,c
  1356  000456  10DE               	iorwf	postinc2,w,c
  1357  000458  A4D8               	btfss	status,2,c
  1358  00045A  EF31  F002         	goto	u1381
  1359  00045E  EF33  F002         	goto	u1380
  1360  000462                     u1381:
  1361  000462  EF59  F002         	goto	l166
  1362  000466                     u1380:
  1363  000466  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
  1364  00046A  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1365  00046E  0E07               	movlw	7
  1366  000470  18DE               	xorwf	postinc2,w,c
  1367  000472  A4D8               	btfss	status,2,c
  1368  000474  EF3E  F002         	goto	u1391
  1369  000478  EF40  F002         	goto	u1390
  1370  00047C                     u1391:
  1371  00047C  EF59  F002         	goto	l166
  1372  000480                     u1390:
  1373  000480  C017  FFD9         	movff	Timekeeper@pDST,fsr2l
  1374  000484  C018  FFDA         	movff	Timekeeper@pDST+1,fsr2h
  1375  000488  50DF               	movf	indf2,w,c
  1376  00048A  B4D8               	btfsc	status,2,c
  1377  00048C  EF4A  F002         	goto	u1401
  1378  000490  EF4C  F002         	goto	u1400
  1379  000494                     u1401:
  1380  000494  EF59  F002         	goto	l166
  1381  000498                     u1400:
  1382  000498                     
  1383                           ;timers.c: 65:         --*phour;
  1384  000498  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1385  00049C  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1386  0004A0  06DE               	decf	postinc2,f,c
  1387  0004A2  0E00               	movlw	0
  1388  0004A4  5ADD               	subwfb	postdec2,f,c
  1389  0004A6                     
  1390                           ;timers.c: 66:         *pDST = 0;
  1391  0004A6  C017  FFD9         	movff	Timekeeper@pDST,fsr2l
  1392  0004AA  C018  FFDA         	movff	Timekeeper@pDST+1,fsr2h
  1393  0004AE  0E00               	movlw	0
  1394  0004B0  6EDF               	movwf	indf2,c
  1395  0004B2                     l166:
  1396  0004B2  0012               	return		;funcret
  1397  0004B4                     __end_of_Timekeeper:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _LeapYear *****************
  1401 ;; Defined at:
  1402 ;;		line 73 in file "timers.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  year            2    5[COMRAM] unsigned int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  leapyear        1    9[COMRAM] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      unsigned char 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;Total ram usage:        5 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 2
  1423 ;; This function calls:
  1424 ;;		___lwmod
  1425 ;; This function is called by:
  1426 ;;		_Timekeeper
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text4
  1431  000D6E                     __ptext4:
  1432                           	callstack 0
  1433  000D6E                     _LeapYear:
  1434                           	callstack 27
  1435  000D6E                     
  1436                           ;timers.c: 73: char LeapYear(unsigned int year);timers.c: 74: {;timers.c: 75:     char l
      +                          eapyear;;timers.c: 76:     if (year % 4 == 0 && year % 100 != 0) {
  1437  000D6E  0E03               	movlw	3
  1438  000D70  1406               	andwf	LeapYear@year^0,w,c
  1439  000D72  6E08               	movwf	??_LeapYear^0,c
  1440  000D74  0E00               	movlw	0
  1441  000D76  1407               	andwf	(LeapYear@year+1)^0,w,c
  1442  000D78  6E09               	movwf	(??_LeapYear+1)^0,c
  1443  000D7A  5008               	movf	??_LeapYear^0,w,c
  1444  000D7C  1009               	iorwf	(??_LeapYear+1)^0,w,c
  1445  000D7E  A4D8               	btfss	status,2,c
  1446  000D80  EFC4  F006         	goto	u1041
  1447  000D84  EFC6  F006         	goto	u1040
  1448  000D88                     u1041:
  1449  000D88  EFDD  F006         	goto	l1427
  1450  000D8C                     u1040:
  1451  000D8C  C006  F001         	movff	LeapYear@year,___lwmod@dividend
  1452  000D90  C007  F002         	movff	LeapYear@year+1,___lwmod@dividend+1
  1453  000D94  0E00               	movlw	0
  1454  000D96  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1455  000D98  0E64               	movlw	100
  1456  000D9A  6E03               	movwf	___lwmod@divisor^0,c
  1457  000D9C  EC64  F007         	call	___lwmod	;wreg free
  1458  000DA0  5001               	movf	?___lwmod^0,w,c
  1459  000DA2  1002               	iorwf	(?___lwmod+1)^0,w,c
  1460  000DA4  B4D8               	btfsc	status,2,c
  1461  000DA6  EFD7  F006         	goto	u1051
  1462  000DAA  EFD9  F006         	goto	u1050
  1463  000DAE                     u1051:
  1464  000DAE  EFDD  F006         	goto	l1427
  1465  000DB2                     u1050:
  1466  000DB2                     l1425:
  1467                           
  1468                           ;timers.c: 77:         leapyear = 1;
  1469  000DB2  0E01               	movlw	1
  1470  000DB4  6E0A               	movwf	LeapYear@leapyear^0,c
  1471                           
  1472                           ;timers.c: 78:     } else if (year % 400 == 0) {
  1473  000DB6  EFF4  F006         	goto	l170
  1474  000DBA                     l1427:
  1475  000DBA  C006  F001         	movff	LeapYear@year,___lwmod@dividend
  1476  000DBE  C007  F002         	movff	LeapYear@year+1,___lwmod@dividend+1
  1477  000DC2  0E01               	movlw	1
  1478  000DC4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1479  000DC6  0E90               	movlw	144
  1480  000DC8  6E03               	movwf	___lwmod@divisor^0,c
  1481  000DCA  EC64  F007         	call	___lwmod	;wreg free
  1482  000DCE  5001               	movf	?___lwmod^0,w,c
  1483  000DD0  1002               	iorwf	(?___lwmod+1)^0,w,c
  1484  000DD2  A4D8               	btfss	status,2,c
  1485  000DD4  EFEE  F006         	goto	u1061
  1486  000DD8  EFF0  F006         	goto	u1060
  1487  000DDC                     u1061:
  1488  000DDC  EFF2  F006         	goto	l1431
  1489  000DE0                     u1060:
  1490  000DE0  EFD9  F006         	goto	l1425
  1491  000DE4                     l1431:
  1492                           
  1493                           ;timers.c: 81:         leapyear = 0;
  1494  000DE4  0E00               	movlw	0
  1495  000DE6  6E0A               	movwf	LeapYear@leapyear^0,c
  1496  000DE8                     l170:
  1497                           
  1498                           ;timers.c: 83:     return leapyear;
  1499  000DE8  500A               	movf	LeapYear@leapyear^0,w,c
  1500  000DEA  0012               	return		;funcret
  1501  000DEC                     __end_of_LeapYear:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function ___lwmod *****************
  1505 ;; Defined at:
  1506 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  dividend        2    0[COMRAM] unsigned int 
  1509 ;;  divisor         2    2[COMRAM] unsigned int 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  counter         1    4[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  2    0[COMRAM] unsigned int 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1524 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1525 ;;Total ram usage:        5 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_LeapYear
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text5
  1536  000EC8                     __ptext5:
  1537                           	callstack 0
  1538  000EC8                     ___lwmod:
  1539                           	callstack 27
  1540  000EC8  5003               	movf	___lwmod@divisor^0,w,c
  1541  000ECA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1542  000ECC  B4D8               	btfsc	status,2,c
  1543  000ECE  EF6B  F007         	goto	u1011
  1544  000ED2  EF6D  F007         	goto	u1010
  1545  000ED6                     u1011:
  1546  000ED6  EF91  F007         	goto	l715
  1547  000EDA                     u1010:
  1548  000EDA  0E01               	movlw	1
  1549  000EDC  6E05               	movwf	___lwmod@counter^0,c
  1550  000EDE  EF75  F007         	goto	l1411
  1551  000EE2                     l1409:
  1552  000EE2  90D8               	bcf	status,0,c
  1553  000EE4  3603               	rlcf	___lwmod@divisor^0,f,c
  1554  000EE6  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1555  000EE8  2A05               	incf	___lwmod@counter^0,f,c
  1556  000EEA                     l1411:
  1557  000EEA  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1558  000EEC  EF7A  F007         	goto	u1021
  1559  000EF0  EF7C  F007         	goto	u1020
  1560  000EF4                     u1021:
  1561  000EF4  EF71  F007         	goto	l1409
  1562  000EF8                     u1020:
  1563  000EF8                     l1413:
  1564  000EF8  5003               	movf	___lwmod@divisor^0,w,c
  1565  000EFA  5C01               	subwf	___lwmod@dividend^0,w,c
  1566  000EFC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1567  000EFE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1568  000F00  A0D8               	btfss	status,0,c
  1569  000F02  EF85  F007         	goto	u1031
  1570  000F06  EF87  F007         	goto	u1030
  1571  000F0A                     u1031:
  1572  000F0A  EF8B  F007         	goto	l1417
  1573  000F0E                     u1030:
  1574  000F0E  5003               	movf	___lwmod@divisor^0,w,c
  1575  000F10  5E01               	subwf	___lwmod@dividend^0,f,c
  1576  000F12  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1577  000F14  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1578  000F16                     l1417:
  1579  000F16  90D8               	bcf	status,0,c
  1580  000F18  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1581  000F1A  3203               	rrcf	___lwmod@divisor^0,f,c
  1582  000F1C  2E05               	decfsz	___lwmod@counter^0,f,c
  1583  000F1E  EF7C  F007         	goto	l1413
  1584  000F22                     l715:
  1585  000F22  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1586  000F26  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1587  000F2A  0012               	return		;funcret
  1588  000F2C                     __end_of___lwmod:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _SunPleaseFixTheDamnClock *****************
  1592 ;; Defined at:
  1593 ;;		line 89 in file "timers.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  pdawnhour       2   33[COMRAM] PTR int 
  1596 ;;		 -> main@dawnhour(2), 
  1597 ;;  pdawnminute     2   35[COMRAM] PTR int 
  1598 ;;		 -> main@dawnminute(2), 
  1599 ;;  pduskhour       2   37[COMRAM] PTR int 
  1600 ;;		 -> main@duskhour(2), 
  1601 ;;  pduskminute     2   39[COMRAM] PTR int 
  1602 ;;		 -> main@duskminute(2), 
  1603 ;;  phour           2   41[COMRAM] PTR int 
  1604 ;;		 -> main@hour(2), 
  1605 ;;  pminute         2   43[COMRAM] PTR int 
  1606 ;;		 -> main@minute(2), 
  1607 ;;  DST             1   45[COMRAM] unsigned char 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  timedifferen    2   52[COMRAM] int 
  1610 ;;  avgminute       2   50[COMRAM] int 
  1611 ;;  avghour         2   48[COMRAM] int 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1621 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;Total ram usage:       21 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 3
  1628 ;; This function calls:
  1629 ;;		_TimeAvg
  1630 ;;		_TimeDiff
  1631 ;;		___awdiv
  1632 ;;		___awmod
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text6
  1639  0004B4                     __ptext6:
  1640                           	callstack 0
  1641  0004B4                     _SunPleaseFixTheDamnClock:
  1642                           	callstack 27
  1643  0004B4                     
  1644                           ;timers.c: 89: void SunPleaseFixTheDamnClock(int *pdawnhour, int *pdawnminute, int *pdus
      +                          khour, int *pduskminute, int *phour, int *pminute, char DST);timers.c: 90: {;timers.c: 9
      +                          1:     int avghour;;timers.c: 92:     int avgminute;;timers.c: 94:     TimeAvg(*pdawnhou
      +                          r, *pdawnminute, *pduskhour, *pduskminute, &avghour, &avgminute);
  1645  0004B4  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  1646  0004B8  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  1647  0004BC  CFDE F012          	movff	postinc2,TimeAvg@hour1
  1648  0004C0  CFDD F013          	movff	postdec2,TimeAvg@hour1+1
  1649  0004C4  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  1650  0004C8  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  1651  0004CC  CFDE F014          	movff	postinc2,TimeAvg@minute1
  1652  0004D0  CFDD F015          	movff	postdec2,TimeAvg@minute1+1
  1653  0004D4  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  1654  0004D8  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  1655  0004DC  CFDE F016          	movff	postinc2,TimeAvg@hour2
  1656  0004E0  CFDD F017          	movff	postdec2,TimeAvg@hour2+1
  1657  0004E4  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  1658  0004E8  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  1659  0004EC  CFDE F018          	movff	postinc2,TimeAvg@minute2
  1660  0004F0  CFDD F019          	movff	postdec2,TimeAvg@minute2+1
  1661  0004F4  0E31               	movlw	low SunPleaseFixTheDamnClock@avghour
  1662  0004F6  6E1A               	movwf	TimeAvg@pavghour^0,c
  1663  0004F8  0E00               	movlw	high SunPleaseFixTheDamnClock@avghour
  1664  0004FA  6E1B               	movwf	(TimeAvg@pavghour+1)^0,c
  1665  0004FC  0E33               	movlw	low SunPleaseFixTheDamnClock@avgminute
  1666  0004FE  6E1C               	movwf	TimeAvg@pavgminute^0,c
  1667  000500  0E00               	movlw	high SunPleaseFixTheDamnClock@avgminute
  1668  000502  6E1D               	movwf	(TimeAvg@pavgminute+1)^0,c
  1669  000504  ECC7  F004         	call	_TimeAvg	;wreg free
  1670  000508                     
  1671                           ;timers.c: 95:     int timedifference = TimeDiff(avghour, avgminute, 12, 0);
  1672  000508  C031  F001         	movff	SunPleaseFixTheDamnClock@avghour,TimeDiff@hour1
  1673  00050C  C032  F002         	movff	SunPleaseFixTheDamnClock@avghour+1,TimeDiff@hour1+1
  1674  000510  C033  F003         	movff	SunPleaseFixTheDamnClock@avgminute,TimeDiff@minute1
  1675  000514  C034  F004         	movff	SunPleaseFixTheDamnClock@avgminute+1,TimeDiff@minute1+1
  1676  000518  0E00               	movlw	0
  1677  00051A  6E06               	movwf	(TimeDiff@hour2+1)^0,c
  1678  00051C  0E0C               	movlw	12
  1679  00051E  6E05               	movwf	TimeDiff@hour2^0,c
  1680  000520  0E00               	movlw	0
  1681  000522  6E08               	movwf	(TimeDiff@minute2+1)^0,c
  1682  000524  0E00               	movlw	0
  1683  000526  6E07               	movwf	TimeDiff@minute2^0,c
  1684  000528  EC0E  F006         	call	_TimeDiff	;wreg free
  1685  00052C  C001  F035         	movff	?_TimeDiff,SunPleaseFixTheDamnClock@timedifference
  1686  000530  C002  F036         	movff	?_TimeDiff+1,SunPleaseFixTheDamnClock@timedifference+1
  1687  000534                     
  1688                           ;timers.c: 97:     if (timedifference > 30 || timedifference < -30) {
  1689  000534  BE36               	btfsc	(SunPleaseFixTheDamnClock@timedifference+1)^0,7,c
  1690  000536  EFA8  F002         	goto	u1530
  1691  00053A  5036               	movf	(SunPleaseFixTheDamnClock@timedifference+1)^0,w,c
  1692  00053C  E107               	bnz	u1531
  1693  00053E  0E1F               	movlw	31
  1694  000540  5C35               	subwf	SunPleaseFixTheDamnClock@timedifference^0,w,c
  1695  000542  B0D8               	btfsc	status,0,c
  1696  000544  EFA6  F002         	goto	u1531
  1697  000548  EFA8  F002         	goto	u1530
  1698  00054C                     u1531:
  1699  00054C  EFB6  F002         	goto	l1599
  1700  000550                     u1530:
  1701  000550  AE36               	btfss	(SunPleaseFixTheDamnClock@timedifference+1)^0,7,c
  1702  000552  EFB4  F002         	goto	u1541
  1703  000556  0EE2               	movlw	226
  1704  000558  5C35               	subwf	SunPleaseFixTheDamnClock@timedifference^0,w,c
  1705  00055A  0EFF               	movlw	255
  1706  00055C  5836               	subwfb	(SunPleaseFixTheDamnClock@timedifference+1)^0,w,c
  1707  00055E  B0D8               	btfsc	status,0,c
  1708  000560  EFB4  F002         	goto	u1541
  1709  000564  EFB6  F002         	goto	u1540
  1710  000568                     u1541:
  1711  000568  EFC3  F003         	goto	l1627
  1712  00056C                     u1540:
  1713  00056C                     l1599:
  1714                           
  1715                           ;timers.c: 98:         *pminute = timedifference % 60;
  1716  00056C  C035  F001         	movff	SunPleaseFixTheDamnClock@timedifference,___awmod@dividend
  1717  000570  C036  F002         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awmod@dividend+1
  1718  000574  0E00               	movlw	0
  1719  000576  6E04               	movwf	(___awmod@divisor+1)^0,c
  1720  000578  0E3C               	movlw	60
  1721  00057A  6E03               	movwf	___awmod@divisor^0,c
  1722  00057C  ECB6  F005         	call	___awmod	;wreg free
  1723  000580  C02C  FFD9         	movff	SunPleaseFixTheDamnClock@pminute,fsr2l
  1724  000584  C02D  FFDA         	movff	SunPleaseFixTheDamnClock@pminute+1,fsr2h
  1725  000588  C001  FFDE         	movff	?___awmod,postinc2
  1726  00058C  C002  FFDD         	movff	?___awmod+1,postdec2
  1727                           
  1728                           ;timers.c: 99:         *pdawnminute += timedifference % 60;
  1729  000590  C035  F001         	movff	SunPleaseFixTheDamnClock@timedifference,___awmod@dividend
  1730  000594  C036  F002         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awmod@dividend+1
  1731  000598  0E00               	movlw	0
  1732  00059A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1733  00059C  0E3C               	movlw	60
  1734  00059E  6E03               	movwf	___awmod@divisor^0,c
  1735  0005A0  ECB6  F005         	call	___awmod	;wreg free
  1736  0005A4  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  1737  0005A8  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  1738  0005AC  5001               	movf	?___awmod^0,w,c
  1739  0005AE  26DE               	addwf	postinc2,f,c
  1740  0005B0  5002               	movf	(?___awmod+1)^0,w,c
  1741  0005B2  22DD               	addwfc	postdec2,f,c
  1742                           
  1743                           ;timers.c: 100:         *pduskminute += timedifference % 60;
  1744  0005B4  C035  F001         	movff	SunPleaseFixTheDamnClock@timedifference,___awmod@dividend
  1745  0005B8  C036  F002         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awmod@dividend+1
  1746  0005BC  0E00               	movlw	0
  1747  0005BE  6E04               	movwf	(___awmod@divisor+1)^0,c
  1748  0005C0  0E3C               	movlw	60
  1749  0005C2  6E03               	movwf	___awmod@divisor^0,c
  1750  0005C4  ECB6  F005         	call	___awmod	;wreg free
  1751  0005C8  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  1752  0005CC  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  1753  0005D0  5001               	movf	?___awmod^0,w,c
  1754  0005D2  26DE               	addwf	postinc2,f,c
  1755  0005D4  5002               	movf	(?___awmod+1)^0,w,c
  1756  0005D6  22DD               	addwfc	postdec2,f,c
  1757  0005D8                     
  1758                           ;timers.c: 102:         if (*pminute < 0) {--*phour; *pminute += 60;}
  1759  0005D8  C02C  FFD9         	movff	SunPleaseFixTheDamnClock@pminute,fsr2l
  1760  0005DC  C02D  FFDA         	movff	SunPleaseFixTheDamnClock@pminute+1,fsr2h
  1761  0005E0  0E01               	movlw	1
  1762  0005E2  BEDB               	btfsc	plusw2,7,c
  1763  0005E4  EFF8  F002         	goto	u1550
  1764  0005E8  EFF6  F002         	goto	u1551
  1765  0005EC                     u1551:
  1766  0005EC  EF07  F003         	goto	l179
  1767  0005F0                     u1550:
  1768  0005F0  C02A  FFD9         	movff	SunPleaseFixTheDamnClock@phour,fsr2l
  1769  0005F4  C02B  FFDA         	movff	SunPleaseFixTheDamnClock@phour+1,fsr2h
  1770  0005F8  06DE               	decf	postinc2,f,c
  1771  0005FA  0E00               	movlw	0
  1772  0005FC  5ADD               	subwfb	postdec2,f,c
  1773  0005FE  0E3C               	movlw	60
  1774  000600  C02C  FFD9         	movff	SunPleaseFixTheDamnClock@pminute,fsr2l
  1775  000604  C02D  FFDA         	movff	SunPleaseFixTheDamnClock@pminute+1,fsr2h
  1776  000608  26DE               	addwf	postinc2,f,c
  1777  00060A  0E00               	movlw	0
  1778  00060C  22DD               	addwfc	postdec2,f,c
  1779  00060E                     l179:
  1780                           
  1781                           ;timers.c: 104:         if (*pdawnminute >= 60) {++*pdawnhour; *pdawnminute -= 60;}
  1782  00060E  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  1783  000612  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  1784  000616  0E01               	movlw	1
  1785  000618  BEDB               	btfsc	plusw2,7,c
  1786  00061A  EF19  F003         	goto	u1561
  1787  00061E  0E01               	movlw	1
  1788  000620  50DB               	movf	plusw2,w,c
  1789  000622  E109               	bnz	u1560
  1790  000624  0E3C               	movlw	60
  1791  000626  5CDE               	subwf	postinc2,w,c
  1792  000628  A0D8               	btfss	status,0,c
  1793  00062A  EF19  F003         	goto	u1561
  1794  00062E  EF1B  F003         	goto	u1560
  1795  000632                     u1561:
  1796  000632  EF2C  F003         	goto	l1609
  1797  000636                     u1560:
  1798  000636  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  1799  00063A  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  1800  00063E  2ADE               	incf	postinc2,f,c
  1801  000640  0E00               	movlw	0
  1802  000642  22DD               	addwfc	postdec2,f,c
  1803  000644  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  1804  000648  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  1805  00064C  0EC4               	movlw	196
  1806  00064E  26DE               	addwf	postinc2,f,c
  1807  000650  0EFF               	movlw	255
  1808  000652  22DD               	addwfc	postdec2,f,c
  1809  000654  EF47  F003         	goto	l181
  1810  000658                     l1609:
  1811  000658  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  1812  00065C  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  1813  000660  0E01               	movlw	1
  1814  000662  BEDB               	btfsc	plusw2,7,c
  1815  000664  EF38  F003         	goto	u1570
  1816  000668  EF36  F003         	goto	u1571
  1817  00066C                     u1571:
  1818  00066C  EF47  F003         	goto	l181
  1819  000670                     u1570:
  1820  000670  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  1821  000674  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  1822  000678  06DE               	decf	postinc2,f,c
  1823  00067A  0E00               	movlw	0
  1824  00067C  5ADD               	subwfb	postdec2,f,c
  1825  00067E  0E3C               	movlw	60
  1826  000680  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  1827  000684  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  1828  000688  26DE               	addwf	postinc2,f,c
  1829  00068A  0E00               	movlw	0
  1830  00068C  22DD               	addwfc	postdec2,f,c
  1831  00068E                     l181:
  1832                           
  1833                           ;timers.c: 107:         if (*pduskminute >= 60) {++*pduskhour; *pduskminute -= 60;}
  1834  00068E  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  1835  000692  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  1836  000696  0E01               	movlw	1
  1837  000698  BEDB               	btfsc	plusw2,7,c
  1838  00069A  EF59  F003         	goto	u1581
  1839  00069E  0E01               	movlw	1
  1840  0006A0  50DB               	movf	plusw2,w,c
  1841  0006A2  E109               	bnz	u1580
  1842  0006A4  0E3C               	movlw	60
  1843  0006A6  5CDE               	subwf	postinc2,w,c
  1844  0006A8  A0D8               	btfss	status,0,c
  1845  0006AA  EF59  F003         	goto	u1581
  1846  0006AE  EF5B  F003         	goto	u1580
  1847  0006B2                     u1581:
  1848  0006B2  EF6C  F003         	goto	l1617
  1849  0006B6                     u1580:
  1850  0006B6  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  1851  0006BA  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  1852  0006BE  2ADE               	incf	postinc2,f,c
  1853  0006C0  0E00               	movlw	0
  1854  0006C2  22DD               	addwfc	postdec2,f,c
  1855  0006C4  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  1856  0006C8  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  1857  0006CC  0EC4               	movlw	196
  1858  0006CE  26DE               	addwf	postinc2,f,c
  1859  0006D0  0EFF               	movlw	255
  1860  0006D2  22DD               	addwfc	postdec2,f,c
  1861  0006D4  EF87  F003         	goto	l1621
  1862  0006D8                     l1617:
  1863  0006D8  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  1864  0006DC  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  1865  0006E0  0E01               	movlw	1
  1866  0006E2  BEDB               	btfsc	plusw2,7,c
  1867  0006E4  EF78  F003         	goto	u1590
  1868  0006E8  EF76  F003         	goto	u1591
  1869  0006EC                     u1591:
  1870  0006EC  EF87  F003         	goto	l1621
  1871  0006F0                     u1590:
  1872  0006F0  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  1873  0006F4  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  1874  0006F8  06DE               	decf	postinc2,f,c
  1875  0006FA  0E00               	movlw	0
  1876  0006FC  5ADD               	subwfb	postdec2,f,c
  1877  0006FE  0E3C               	movlw	60
  1878  000700  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  1879  000704  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  1880  000708  26DE               	addwf	postinc2,f,c
  1881  00070A  0E00               	movlw	0
  1882  00070C  22DD               	addwfc	postdec2,f,c
  1883  00070E                     l1621:
  1884                           
  1885                           ;timers.c: 110:         *phour = 12 + timedifference / 60;
  1886  00070E  C035  F00A         	movff	SunPleaseFixTheDamnClock@timedifference,___awdiv@dividend
  1887  000712  C036  F00B         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awdiv@dividend+1
  1888  000716  0E00               	movlw	0
  1889  000718  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  1890  00071A  0E3C               	movlw	60
  1891  00071C  6E0C               	movwf	___awdiv@divisor^0,c
  1892  00071E  EC54  F005         	call	___awdiv	;wreg free
  1893  000722  0E0C               	movlw	12
  1894  000724  260A               	addwf	?___awdiv^0,f,c
  1895  000726  0E00               	movlw	0
  1896  000728  220B               	addwfc	(?___awdiv+1)^0,f,c
  1897  00072A  C02A  FFD9         	movff	SunPleaseFixTheDamnClock@phour,fsr2l
  1898  00072E  C02B  FFDA         	movff	SunPleaseFixTheDamnClock@phour+1,fsr2h
  1899  000732  C00A  FFDE         	movff	?___awdiv,postinc2
  1900  000736  C00B  FFDD         	movff	?___awdiv+1,postdec2
  1901  00073A                     
  1902                           ;timers.c: 111:         *pdawnhour += timedifference / 60;
  1903  00073A  C035  F00A         	movff	SunPleaseFixTheDamnClock@timedifference,___awdiv@dividend
  1904  00073E  C036  F00B         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awdiv@dividend+1
  1905  000742  0E00               	movlw	0
  1906  000744  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  1907  000746  0E3C               	movlw	60
  1908  000748  6E0C               	movwf	___awdiv@divisor^0,c
  1909  00074A  EC54  F005         	call	___awdiv	;wreg free
  1910  00074E  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  1911  000752  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  1912  000756  500A               	movf	?___awdiv^0,w,c
  1913  000758  26DE               	addwf	postinc2,f,c
  1914  00075A  500B               	movf	(?___awdiv+1)^0,w,c
  1915  00075C  22DD               	addwfc	postdec2,f,c
  1916  00075E                     
  1917                           ;timers.c: 112:         *pduskhour += timedifference / 60;
  1918  00075E  C035  F00A         	movff	SunPleaseFixTheDamnClock@timedifference,___awdiv@dividend
  1919  000762  C036  F00B         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awdiv@dividend+1
  1920  000766  0E00               	movlw	0
  1921  000768  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  1922  00076A  0E3C               	movlw	60
  1923  00076C  6E0C               	movwf	___awdiv@divisor^0,c
  1924  00076E  EC54  F005         	call	___awdiv	;wreg free
  1925  000772  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  1926  000776  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  1927  00077A  500A               	movf	?___awdiv^0,w,c
  1928  00077C  26DE               	addwf	postinc2,f,c
  1929  00077E  500B               	movf	(?___awdiv+1)^0,w,c
  1930  000780  22DD               	addwfc	postdec2,f,c
  1931                           
  1932                           ;timers.c: 115:     } else if (*pdawnhour > 12 && *pduskhour < 12) {
  1933  000782  EF03  F004         	goto	l188
  1934  000786                     l1627:
  1935  000786  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  1936  00078A  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  1937  00078E  0E01               	movlw	1
  1938  000790  BEDB               	btfsc	plusw2,7,c
  1939  000792  EFD5  F003         	goto	u1601
  1940  000796  0E01               	movlw	1
  1941  000798  50DB               	movf	plusw2,w,c
  1942  00079A  E109               	bnz	u1600
  1943  00079C  0E0D               	movlw	13
  1944  00079E  5CDE               	subwf	postinc2,w,c
  1945  0007A0  A0D8               	btfss	status,0,c
  1946  0007A2  EFD5  F003         	goto	u1601
  1947  0007A6  EFD7  F003         	goto	u1600
  1948  0007AA                     u1601:
  1949  0007AA  EF03  F004         	goto	l188
  1950  0007AE                     u1600:
  1951  0007AE  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  1952  0007B2  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  1953  0007B6  0E01               	movlw	1
  1954  0007B8  BEDB               	btfsc	plusw2,7,c
  1955  0007BA  EFEB  F003         	goto	u1610
  1956  0007BE  0E01               	movlw	1
  1957  0007C0  50DB               	movf	plusw2,w,c
  1958  0007C2  E107               	bnz	u1611
  1959  0007C4  0E0C               	movlw	12
  1960  0007C6  5CDE               	subwf	postinc2,w,c
  1961  0007C8  B0D8               	btfsc	status,0,c
  1962  0007CA  EFE9  F003         	goto	u1611
  1963  0007CE  EFEB  F003         	goto	u1610
  1964  0007D2                     u1611:
  1965  0007D2  EF03  F004         	goto	l188
  1966  0007D6                     u1610:
  1967  0007D6                     
  1968                           ;timers.c: 116:         *phour = 0;
  1969  0007D6  C02A  FFD9         	movff	SunPleaseFixTheDamnClock@phour,fsr2l
  1970  0007DA  C02B  FFDA         	movff	SunPleaseFixTheDamnClock@phour+1,fsr2h
  1971  0007DE  0E00               	movlw	0
  1972  0007E0  6EDE               	movwf	postinc2,c
  1973  0007E2  0E00               	movlw	0
  1974  0007E4  6EDD               	movwf	postdec2,c
  1975                           
  1976                           ;timers.c: 117:         *pdawnhour -= 12;
  1977  0007E6  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  1978  0007EA  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  1979  0007EE  0EF4               	movlw	244
  1980  0007F0  26DE               	addwf	postinc2,f,c
  1981  0007F2  0EFF               	movlw	255
  1982  0007F4  22DD               	addwfc	postdec2,f,c
  1983  0007F6                     
  1984                           ;timers.c: 118:         *pduskhour += 12;
  1985  0007F6  0E0C               	movlw	12
  1986  0007F8  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  1987  0007FC  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  1988  000800  26DE               	addwf	postinc2,f,c
  1989  000802  0E00               	movlw	0
  1990  000804  22DD               	addwfc	postdec2,f,c
  1991  000806                     l188:
  1992  000806  0012               	return		;funcret
  1993  000808                     __end_of_SunPleaseFixTheDamnClock:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _TimeAvg *****************
  1997 ;; Defined at:
  1998 ;;		line 145 in file "timers.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  hour1           2   17[COMRAM] int 
  2001 ;;  minute1         2   19[COMRAM] int 
  2002 ;;  hour2           2   21[COMRAM] int 
  2003 ;;  minute2         2   23[COMRAM] int 
  2004 ;;  pavghour        2   25[COMRAM] PTR int 
  2005 ;;		 -> SunPleaseFixTheDamnClock@avghour(2), 
  2006 ;;  pavgminute      2   27[COMRAM] PTR int 
  2007 ;;		 -> SunPleaseFixTheDamnClock@avgminute(2), 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  HalfTimeDiff    2   31[COMRAM] int 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2019 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;Total ram usage:       16 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 2
  2026 ;; This function calls:
  2027 ;;		_TimeDiff
  2028 ;;		___awdiv
  2029 ;;		___awmod
  2030 ;; This function is called by:
  2031 ;;		_SunPleaseFixTheDamnClock
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text7
  2036  00098E                     __ptext7:
  2037                           	callstack 0
  2038  00098E                     _TimeAvg:
  2039                           	callstack 27
  2040  00098E                     
  2041                           ;timers.c: 145: void TimeAvg(int hour1, int minute1, int hour2, int minute2, int *pavgho
      +                          ur, int *pavgminute);timers.c: 146: {;timers.c: 147:     int HalfTimeDiff = TimeDiff(hou
      +                          r1, minute1, hour2, minute2) / 2;
  2042  00098E  C018  F007         	movff	TimeAvg@minute2,TimeDiff@minute2
  2043  000992  C019  F008         	movff	TimeAvg@minute2+1,TimeDiff@minute2+1
  2044  000996  C016  F005         	movff	TimeAvg@hour2,TimeDiff@hour2
  2045  00099A  C017  F006         	movff	TimeAvg@hour2+1,TimeDiff@hour2+1
  2046  00099E  C014  F003         	movff	TimeAvg@minute1,TimeDiff@minute1
  2047  0009A2  C015  F004         	movff	TimeAvg@minute1+1,TimeDiff@minute1+1
  2048  0009A6  C012  F001         	movff	TimeAvg@hour1,TimeDiff@hour1
  2049  0009AA  C013  F002         	movff	TimeAvg@hour1+1,TimeDiff@hour1+1
  2050  0009AE  EC0E  F006         	call	_TimeDiff	;wreg free
  2051  0009B2  C001  F00A         	movff	?_TimeDiff,___awdiv@dividend
  2052  0009B6  C002  F00B         	movff	?_TimeDiff+1,___awdiv@dividend+1
  2053  0009BA  0E00               	movlw	0
  2054  0009BC  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2055  0009BE  0E02               	movlw	2
  2056  0009C0  6E0C               	movwf	___awdiv@divisor^0,c
  2057  0009C2  EC54  F005         	call	___awdiv	;wreg free
  2058  0009C6  C00A  F020         	movff	?___awdiv,TimeAvg@HalfTimeDiff
  2059  0009CA  C00B  F021         	movff	?___awdiv+1,TimeAvg@HalfTimeDiff+1
  2060  0009CE                     
  2061                           ;timers.c: 149:     *pavghour = hour1 + HalfTimeDiff / 60;
  2062  0009CE  C020  F00A         	movff	TimeAvg@HalfTimeDiff,___awdiv@dividend
  2063  0009D2  C021  F00B         	movff	TimeAvg@HalfTimeDiff+1,___awdiv@dividend+1
  2064  0009D6  0E00               	movlw	0
  2065  0009D8  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2066  0009DA  0E3C               	movlw	60
  2067  0009DC  6E0C               	movwf	___awdiv@divisor^0,c
  2068  0009DE  EC54  F005         	call	___awdiv	;wreg free
  2069  0009E2  5012               	movf	TimeAvg@hour1^0,w,c
  2070  0009E4  260A               	addwf	?___awdiv^0,f,c
  2071  0009E6  5013               	movf	(TimeAvg@hour1+1)^0,w,c
  2072  0009E8  220B               	addwfc	(?___awdiv+1)^0,f,c
  2073  0009EA  C01A  FFD9         	movff	TimeAvg@pavghour,fsr2l
  2074  0009EE  C01B  FFDA         	movff	TimeAvg@pavghour+1,fsr2h
  2075  0009F2  C00A  FFDE         	movff	?___awdiv,postinc2
  2076  0009F6  C00B  FFDD         	movff	?___awdiv+1,postdec2
  2077  0009FA                     
  2078                           ;timers.c: 150:     *pavgminute = minute1 + HalfTimeDiff % 60;
  2079  0009FA  C020  F001         	movff	TimeAvg@HalfTimeDiff,___awmod@dividend
  2080  0009FE  C021  F002         	movff	TimeAvg@HalfTimeDiff+1,___awmod@dividend+1
  2081  000A02  0E00               	movlw	0
  2082  000A04  6E04               	movwf	(___awmod@divisor+1)^0,c
  2083  000A06  0E3C               	movlw	60
  2084  000A08  6E03               	movwf	___awmod@divisor^0,c
  2085  000A0A  ECB6  F005         	call	___awmod	;wreg free
  2086  000A0E  5014               	movf	TimeAvg@minute1^0,w,c
  2087  000A10  2601               	addwf	?___awmod^0,f,c
  2088  000A12  5015               	movf	(TimeAvg@minute1+1)^0,w,c
  2089  000A14  2202               	addwfc	(?___awmod+1)^0,f,c
  2090  000A16  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2091  000A1A  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2092  000A1E  C001  FFDE         	movff	?___awmod,postinc2
  2093  000A22  C002  FFDD         	movff	?___awmod+1,postdec2
  2094  000A26                     
  2095                           ;timers.c: 152:     if (*pavgminute >= 60) {++*pavghour; *pavgminute -= 60;}
  2096  000A26  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2097  000A2A  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2098  000A2E  0E01               	movlw	1
  2099  000A30  BEDB               	btfsc	plusw2,7,c
  2100  000A32  EF25  F005         	goto	u1071
  2101  000A36  0E01               	movlw	1
  2102  000A38  50DB               	movf	plusw2,w,c
  2103  000A3A  E109               	bnz	u1070
  2104  000A3C  0E3C               	movlw	60
  2105  000A3E  5CDE               	subwf	postinc2,w,c
  2106  000A40  A0D8               	btfss	status,0,c
  2107  000A42  EF25  F005         	goto	u1071
  2108  000A46  EF27  F005         	goto	u1070
  2109  000A4A                     u1071:
  2110  000A4A  EF38  F005         	goto	l1447
  2111  000A4E                     u1070:
  2112  000A4E  C01A  FFD9         	movff	TimeAvg@pavghour,fsr2l
  2113  000A52  C01B  FFDA         	movff	TimeAvg@pavghour+1,fsr2h
  2114  000A56  2ADE               	incf	postinc2,f,c
  2115  000A58  0E00               	movlw	0
  2116  000A5A  22DD               	addwfc	postdec2,f,c
  2117  000A5C  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2118  000A60  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2119  000A64  0EC4               	movlw	196
  2120  000A66  26DE               	addwf	postinc2,f,c
  2121  000A68  0EFF               	movlw	255
  2122  000A6A  22DD               	addwfc	postdec2,f,c
  2123  000A6C  EF53  F005         	goto	l206
  2124  000A70                     l1447:
  2125  000A70  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2126  000A74  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2127  000A78  0E01               	movlw	1
  2128  000A7A  BEDB               	btfsc	plusw2,7,c
  2129  000A7C  EF44  F005         	goto	u1080
  2130  000A80  EF42  F005         	goto	u1081
  2131  000A84                     u1081:
  2132  000A84  EF53  F005         	goto	l206
  2133  000A88                     u1080:
  2134  000A88  C01A  FFD9         	movff	TimeAvg@pavghour,fsr2l
  2135  000A8C  C01B  FFDA         	movff	TimeAvg@pavghour+1,fsr2h
  2136  000A90  06DE               	decf	postinc2,f,c
  2137  000A92  0E00               	movlw	0
  2138  000A94  5ADD               	subwfb	postdec2,f,c
  2139  000A96  0E3C               	movlw	60
  2140  000A98  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2141  000A9C  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2142  000AA0  26DE               	addwf	postinc2,f,c
  2143  000AA2  0E00               	movlw	0
  2144  000AA4  22DD               	addwfc	postdec2,f,c
  2145  000AA6                     l206:
  2146  000AA6  0012               	return		;funcret
  2147  000AA8                     __end_of_TimeAvg:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function ___awmod *****************
  2151 ;; Defined at:
  2152 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  dividend        2    0[COMRAM] int 
  2155 ;;  divisor         2    2[COMRAM] int 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  sign            1    5[COMRAM] unsigned char 
  2158 ;;  counter         1    4[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2    0[COMRAM] int 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;Total ram usage:        6 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_SunPleaseFixTheDamnClock
  2179 ;;		_TimeAvg
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text8
  2184  000B6C                     __ptext8:
  2185                           	callstack 0
  2186  000B6C                     ___awmod:
  2187                           	callstack 28
  2188  000B6C  0E00               	movlw	0
  2189  000B6E  6E06               	movwf	___awmod@sign^0,c
  2190  000B70  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2191  000B72  EFBF  F005         	goto	u950
  2192  000B76  EFBD  F005         	goto	u951
  2193  000B7A                     u951:
  2194  000B7A  EFC5  F005         	goto	l1377
  2195  000B7E                     u950:
  2196  000B7E  6C01               	negf	___awmod@dividend^0,c
  2197  000B80  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2198  000B82  B0D8               	btfsc	status,0,c
  2199  000B84  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2200  000B86  0E01               	movlw	1
  2201  000B88  6E06               	movwf	___awmod@sign^0,c
  2202  000B8A                     l1377:
  2203  000B8A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2204  000B8C  EFCC  F005         	goto	u960
  2205  000B90  EFCA  F005         	goto	u961
  2206  000B94                     u961:
  2207  000B94  EFD0  F005         	goto	l1381
  2208  000B98                     u960:
  2209  000B98  6C03               	negf	___awmod@divisor^0,c
  2210  000B9A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2211  000B9C  B0D8               	btfsc	status,0,c
  2212  000B9E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2213  000BA0                     l1381:
  2214  000BA0  5003               	movf	___awmod@divisor^0,w,c
  2215  000BA2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2216  000BA4  B4D8               	btfsc	status,2,c
  2217  000BA6  EFD7  F005         	goto	u971
  2218  000BAA  EFD9  F005         	goto	u970
  2219  000BAE                     u971:
  2220  000BAE  EFFD  F005         	goto	l1397
  2221  000BB2                     u970:
  2222  000BB2  0E01               	movlw	1
  2223  000BB4  6E05               	movwf	___awmod@counter^0,c
  2224  000BB6  EFE1  F005         	goto	l1387
  2225  000BBA                     l1385:
  2226  000BBA  90D8               	bcf	status,0,c
  2227  000BBC  3603               	rlcf	___awmod@divisor^0,f,c
  2228  000BBE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2229  000BC0  2A05               	incf	___awmod@counter^0,f,c
  2230  000BC2                     l1387:
  2231  000BC2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2232  000BC4  EFE6  F005         	goto	u981
  2233  000BC8  EFE8  F005         	goto	u980
  2234  000BCC                     u981:
  2235  000BCC  EFDD  F005         	goto	l1385
  2236  000BD0                     u980:
  2237  000BD0                     l1389:
  2238  000BD0  5003               	movf	___awmod@divisor^0,w,c
  2239  000BD2  5C01               	subwf	___awmod@dividend^0,w,c
  2240  000BD4  5004               	movf	(___awmod@divisor+1)^0,w,c
  2241  000BD6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2242  000BD8  A0D8               	btfss	status,0,c
  2243  000BDA  EFF1  F005         	goto	u991
  2244  000BDE  EFF3  F005         	goto	u990
  2245  000BE2                     u991:
  2246  000BE2  EFF7  F005         	goto	l1393
  2247  000BE6                     u990:
  2248  000BE6  5003               	movf	___awmod@divisor^0,w,c
  2249  000BE8  5E01               	subwf	___awmod@dividend^0,f,c
  2250  000BEA  5004               	movf	(___awmod@divisor+1)^0,w,c
  2251  000BEC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2252  000BEE                     l1393:
  2253  000BEE  90D8               	bcf	status,0,c
  2254  000BF0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2255  000BF2  3203               	rrcf	___awmod@divisor^0,f,c
  2256  000BF4  2E05               	decfsz	___awmod@counter^0,f,c
  2257  000BF6  EFE8  F005         	goto	l1389
  2258  000BFA                     l1397:
  2259  000BFA  5006               	movf	___awmod@sign^0,w,c
  2260  000BFC  B4D8               	btfsc	status,2,c
  2261  000BFE  EF03  F006         	goto	u1001
  2262  000C02  EF05  F006         	goto	u1000
  2263  000C06                     u1001:
  2264  000C06  EF09  F006         	goto	l1401
  2265  000C0A                     u1000:
  2266  000C0A  6C01               	negf	___awmod@dividend^0,c
  2267  000C0C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2268  000C0E  B0D8               	btfsc	status,0,c
  2269  000C10  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2270  000C12                     l1401:
  2271  000C12  C001  F001         	movff	___awmod@dividend,?___awmod
  2272  000C16  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2273  000C1A  0012               	return		;funcret
  2274  000C1C                     __end_of___awmod:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function ___awdiv *****************
  2278 ;; Defined at:
  2279 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  dividend        2    9[COMRAM] int 
  2282 ;;  divisor         2   11[COMRAM] int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  quotient        2   15[COMRAM] int 
  2285 ;;  sign            1   14[COMRAM] unsigned char 
  2286 ;;  counter         1   13[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2    9[COMRAM] int 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;Total ram usage:        8 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 1
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_SunPleaseFixTheDamnClock
  2307 ;;		_TimeAvg
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text9
  2312  000AA8                     __ptext9:
  2313                           	callstack 0
  2314  000AA8                     ___awdiv:
  2315                           	callstack 28
  2316  000AA8  0E00               	movlw	0
  2317  000AAA  6E0F               	movwf	___awdiv@sign^0,c
  2318  000AAC  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
  2319  000AAE  EF5D  F005         	goto	u890
  2320  000AB2  EF5B  F005         	goto	u891
  2321  000AB6                     u891:
  2322  000AB6  EF63  F005         	goto	l1333
  2323  000ABA                     u890:
  2324  000ABA  6C0C               	negf	___awdiv@divisor^0,c
  2325  000ABC  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  2326  000ABE  B0D8               	btfsc	status,0,c
  2327  000AC0  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  2328  000AC2  0E01               	movlw	1
  2329  000AC4  6E0F               	movwf	___awdiv@sign^0,c
  2330  000AC6                     l1333:
  2331  000AC6  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
  2332  000AC8  EF6A  F005         	goto	u900
  2333  000ACC  EF68  F005         	goto	u901
  2334  000AD0                     u901:
  2335  000AD0  EF70  F005         	goto	l1339
  2336  000AD4                     u900:
  2337  000AD4  6C0A               	negf	___awdiv@dividend^0,c
  2338  000AD6  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  2339  000AD8  B0D8               	btfsc	status,0,c
  2340  000ADA  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  2341  000ADC  0E01               	movlw	1
  2342  000ADE  1A0F               	xorwf	___awdiv@sign^0,f,c
  2343  000AE0                     l1339:
  2344  000AE0  0E00               	movlw	0
  2345  000AE2  6E11               	movwf	(___awdiv@quotient+1)^0,c
  2346  000AE4  0E00               	movlw	0
  2347  000AE6  6E10               	movwf	___awdiv@quotient^0,c
  2348  000AE8  500C               	movf	___awdiv@divisor^0,w,c
  2349  000AEA  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  2350  000AEC  B4D8               	btfsc	status,2,c
  2351  000AEE  EF7B  F005         	goto	u911
  2352  000AF2  EF7D  F005         	goto	u910
  2353  000AF6                     u911:
  2354  000AF6  EFA5  F005         	goto	l1361
  2355  000AFA                     u910:
  2356  000AFA  0E01               	movlw	1
  2357  000AFC  6E0E               	movwf	___awdiv@counter^0,c
  2358  000AFE  EF85  F005         	goto	l1347
  2359  000B02                     l1345:
  2360  000B02  90D8               	bcf	status,0,c
  2361  000B04  360C               	rlcf	___awdiv@divisor^0,f,c
  2362  000B06  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  2363  000B08  2A0E               	incf	___awdiv@counter^0,f,c
  2364  000B0A                     l1347:
  2365  000B0A  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  2366  000B0C  EF8A  F005         	goto	u921
  2367  000B10  EF8C  F005         	goto	u920
  2368  000B14                     u921:
  2369  000B14  EF81  F005         	goto	l1345
  2370  000B18                     u920:
  2371  000B18                     l1349:
  2372  000B18  90D8               	bcf	status,0,c
  2373  000B1A  3610               	rlcf	___awdiv@quotient^0,f,c
  2374  000B1C  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  2375  000B1E  500C               	movf	___awdiv@divisor^0,w,c
  2376  000B20  5C0A               	subwf	___awdiv@dividend^0,w,c
  2377  000B22  500D               	movf	(___awdiv@divisor+1)^0,w,c
  2378  000B24  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  2379  000B26  A0D8               	btfss	status,0,c
  2380  000B28  EF98  F005         	goto	u931
  2381  000B2C  EF9A  F005         	goto	u930
  2382  000B30                     u931:
  2383  000B30  EF9F  F005         	goto	l1357
  2384  000B34                     u930:
  2385  000B34  500C               	movf	___awdiv@divisor^0,w,c
  2386  000B36  5E0A               	subwf	___awdiv@dividend^0,f,c
  2387  000B38  500D               	movf	(___awdiv@divisor+1)^0,w,c
  2388  000B3A  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  2389  000B3C  8010               	bsf	___awdiv@quotient^0,0,c
  2390  000B3E                     l1357:
  2391  000B3E  90D8               	bcf	status,0,c
  2392  000B40  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  2393  000B42  320C               	rrcf	___awdiv@divisor^0,f,c
  2394  000B44  2E0E               	decfsz	___awdiv@counter^0,f,c
  2395  000B46  EF8C  F005         	goto	l1349
  2396  000B4A                     l1361:
  2397  000B4A  500F               	movf	___awdiv@sign^0,w,c
  2398  000B4C  B4D8               	btfsc	status,2,c
  2399  000B4E  EFAB  F005         	goto	u941
  2400  000B52  EFAD  F005         	goto	u940
  2401  000B56                     u941:
  2402  000B56  EFB1  F005         	goto	l1365
  2403  000B5A                     u940:
  2404  000B5A  6C10               	negf	___awdiv@quotient^0,c
  2405  000B5C  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  2406  000B5E  B0D8               	btfsc	status,0,c
  2407  000B60  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  2408  000B62                     l1365:
  2409  000B62  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  2410  000B66  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  2411  000B6A  0012               	return		;funcret
  2412  000B6C                     __end_of___awdiv:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _TimeDiff *****************
  2416 ;; Defined at:
  2417 ;;		line 125 in file "timers.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  hour1           2    0[COMRAM] int 
  2420 ;;  minute1         2    2[COMRAM] int 
  2421 ;;  hour2           2    4[COMRAM] int 
  2422 ;;  minute2         2    6[COMRAM] int 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  2    0[COMRAM] int 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2434 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;Total ram usage:        9 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_SunPleaseFixTheDamnClock
  2445 ;;		_TimeAvg
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text10
  2450  000C1C                     __ptext10:
  2451                           	callstack 0
  2452  000C1C                     _TimeDiff:
  2453                           	callstack 28
  2454  000C1C                     
  2455                           ;timers.c: 125: int TimeDiff(int hour1, int minute1, int hour2, int minute2);timers.c: 1
      +                          26: {;timers.c: 127:     if (hour2 > hour1) {
  2456  000C1C  5005               	movf	TimeDiff@hour2^0,w,c
  2457  000C1E  5C01               	subwf	TimeDiff@hour1^0,w,c
  2458  000C20  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2459  000C22  0A80               	xorlw	128
  2460  000C24  6E09               	movwf	??_TimeDiff^0,c
  2461  000C26  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2462  000C28  0A80               	xorlw	128
  2463  000C2A  5809               	subwfb	??_TimeDiff^0,w,c
  2464  000C2C  B0D8               	btfsc	status,0,c
  2465  000C2E  EF1B  F006         	goto	u851
  2466  000C32  EF1D  F006         	goto	u850
  2467  000C36                     u851:
  2468  000C36  EF37  F006         	goto	l1311
  2469  000C3A                     u850:
  2470  000C3A  EF26  F006         	goto	l1309
  2471  000C3E                     l1305:
  2472                           
  2473                           ;timers.c: 129:             --hour2;
  2474  000C3E  0605               	decf	TimeDiff@hour2^0,f,c
  2475  000C40  A0D8               	btfss	status,0,c
  2476  000C42  0606               	decf	(TimeDiff@hour2+1)^0,f,c
  2477  000C44                     
  2478                           ;timers.c: 130:             minute2 += 60;
  2479  000C44  0E3C               	movlw	60
  2480  000C46  2607               	addwf	TimeDiff@minute2^0,f,c
  2481  000C48  0E00               	movlw	0
  2482  000C4A  2208               	addwfc	(TimeDiff@minute2+1)^0,f,c
  2483  000C4C                     l1309:
  2484                           
  2485                           ;timers.c: 128:         while (hour2 > hour1) {
  2486  000C4C  5005               	movf	TimeDiff@hour2^0,w,c
  2487  000C4E  5C01               	subwf	TimeDiff@hour1^0,w,c
  2488  000C50  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2489  000C52  0A80               	xorlw	128
  2490  000C54  6E09               	movwf	??_TimeDiff^0,c
  2491  000C56  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2492  000C58  0A80               	xorlw	128
  2493  000C5A  5809               	subwfb	??_TimeDiff^0,w,c
  2494  000C5C  A0D8               	btfss	status,0,c
  2495  000C5E  EF33  F006         	goto	u861
  2496  000C62  EF35  F006         	goto	u860
  2497  000C66                     u861:
  2498  000C66  EF1F  F006         	goto	l1305
  2499  000C6A                     u860:
  2500  000C6A  EF5E  F006         	goto	l1321
  2501  000C6E                     l1311:
  2502  000C6E  5001               	movf	TimeDiff@hour1^0,w,c
  2503  000C70  5C05               	subwf	TimeDiff@hour2^0,w,c
  2504  000C72  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2505  000C74  0A80               	xorlw	128
  2506  000C76  6E09               	movwf	??_TimeDiff^0,c
  2507  000C78  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2508  000C7A  0A80               	xorlw	128
  2509  000C7C  5809               	subwfb	??_TimeDiff^0,w,c
  2510  000C7E  B0D8               	btfsc	status,0,c
  2511  000C80  EF44  F006         	goto	u871
  2512  000C84  EF46  F006         	goto	u870
  2513  000C88                     u871:
  2514  000C88  EF5E  F006         	goto	l1321
  2515  000C8C                     u870:
  2516  000C8C  EF4F  F006         	goto	l1319
  2517  000C90                     l1315:
  2518                           
  2519                           ;timers.c: 135:             --hour1;
  2520  000C90  0601               	decf	TimeDiff@hour1^0,f,c
  2521  000C92  A0D8               	btfss	status,0,c
  2522  000C94  0602               	decf	(TimeDiff@hour1+1)^0,f,c
  2523  000C96                     
  2524                           ;timers.c: 136:             minute1 += 60;
  2525  000C96  0E3C               	movlw	60
  2526  000C98  2603               	addwf	TimeDiff@minute1^0,f,c
  2527  000C9A  0E00               	movlw	0
  2528  000C9C  2204               	addwfc	(TimeDiff@minute1+1)^0,f,c
  2529  000C9E                     l1319:
  2530                           
  2531                           ;timers.c: 134:         while (hour1 > hour2) {
  2532  000C9E  5001               	movf	TimeDiff@hour1^0,w,c
  2533  000CA0  5C05               	subwf	TimeDiff@hour2^0,w,c
  2534  000CA2  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2535  000CA4  0A80               	xorlw	128
  2536  000CA6  6E09               	movwf	??_TimeDiff^0,c
  2537  000CA8  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2538  000CAA  0A80               	xorlw	128
  2539  000CAC  5809               	subwfb	??_TimeDiff^0,w,c
  2540  000CAE  A0D8               	btfss	status,0,c
  2541  000CB0  EF5C  F006         	goto	u881
  2542  000CB4  EF5E  F006         	goto	u880
  2543  000CB8                     u881:
  2544  000CB8  EF48  F006         	goto	l1315
  2545  000CBC                     u880:
  2546  000CBC                     l1321:
  2547                           
  2548                           ;timers.c: 139:     return minute2 - minute1;
  2549  000CBC  5003               	movf	TimeDiff@minute1^0,w,c
  2550  000CBE  5C07               	subwf	TimeDiff@minute2^0,w,c
  2551  000CC0  6E01               	movwf	?_TimeDiff^0,c
  2552  000CC2  5004               	movf	(TimeDiff@minute1+1)^0,w,c
  2553  000CC4  5808               	subwfb	(TimeDiff@minute2+1)^0,w,c
  2554  000CC6  6E02               	movwf	(?_TimeDiff+1)^0,c
  2555  000CC8  0012               	return		;funcret
  2556  000CCA                     __end_of_TimeDiff:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _SmallHours *****************
  2560 ;; Defined at:
  2561 ;;		line 43 in file "lights.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  hour            2    0[COMRAM] int 
  2564 ;;  minute          2    2[COMRAM] int 
  2565 ;;  dawnhour        2    4[COMRAM] int 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2577 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;Total ram usage:        6 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text11
  2592  000E5C                     __ptext11:
  2593                           	callstack 0
  2594  000E5C                     _SmallHours:
  2595                           	callstack 29
  2596  000E5C                     
  2597                           ;lights.c: 43: void SmallHours(int hour, int minute, int dawnhour);lights.c: 44: {;light
      +                          s.c: 45:     if (hour >= 1 && hour < 5) {
  2598  000E5C  BE02               	btfsc	(SmallHours@hour+1)^0,7,c
  2599  000E5E  EF39  F007         	goto	u1461
  2600  000E62  5002               	movf	(SmallHours@hour+1)^0,w,c
  2601  000E64  E108               	bnz	u1460
  2602  000E66  0401               	decf	SmallHours@hour^0,w,c
  2603  000E68  A0D8               	btfss	status,0,c
  2604  000E6A  EF39  F007         	goto	u1461
  2605  000E6E  EF3B  F007         	goto	u1460
  2606  000E72                     u1461:
  2607  000E72  EF4A  F007         	goto	l1573
  2608  000E76                     u1460:
  2609  000E76  BE02               	btfsc	(SmallHours@hour+1)^0,7,c
  2610  000E78  EF49  F007         	goto	u1470
  2611  000E7C  5002               	movf	(SmallHours@hour+1)^0,w,c
  2612  000E7E  E107               	bnz	u1471
  2613  000E80  0E05               	movlw	5
  2614  000E82  5C01               	subwf	SmallHours@hour^0,w,c
  2615  000E84  B0D8               	btfsc	status,0,c
  2616  000E86  EF47  F007         	goto	u1471
  2617  000E8A  EF49  F007         	goto	u1470
  2618  000E8E                     u1471:
  2619  000E8E  EF4A  F007         	goto	l1573
  2620  000E92                     u1470:
  2621  000E92                     
  2622                           ;lights.c: 46:         LATHbits.LATH3 = 0;
  2623  000E92  9680               	bcf	128,3,c	;volatile
  2624  000E94                     l1573:
  2625                           
  2626                           ;lights.c: 49:     if (hour == 5 && minute == 0) {
  2627  000E94  0E05               	movlw	5
  2628  000E96  1801               	xorwf	SmallHours@hour^0,w,c
  2629  000E98  1002               	iorwf	(SmallHours@hour+1)^0,w,c
  2630  000E9A  A4D8               	btfss	status,2,c
  2631  000E9C  EF52  F007         	goto	u1481
  2632  000EA0  EF54  F007         	goto	u1480
  2633  000EA4                     u1481:
  2634  000EA4  EF63  F007         	goto	l128
  2635  000EA8                     u1480:
  2636  000EA8  5003               	movf	SmallHours@minute^0,w,c
  2637  000EAA  1004               	iorwf	(SmallHours@minute+1)^0,w,c
  2638  000EAC  A4D8               	btfss	status,2,c
  2639  000EAE  EF5B  F007         	goto	u1491
  2640  000EB2  EF5D  F007         	goto	u1490
  2641  000EB6                     u1491:
  2642  000EB6  EF63  F007         	goto	l128
  2643  000EBA                     u1490:
  2644  000EBA                     
  2645                           ;lights.c: 50:         LATHbits.LATH3 = CM1CON0bits.OUT;
  2646  000EBA  010E               	movlb	14	; () banked
  2647  000EBC  ADD0               	btfss	208,6,b	;volatile
  2648  000EBE  D002               	bra	u1505
  2649  000EC0  8680               	bsf	128,3,c	;volatile
  2650  000EC2  D001               	bra	u1507
  2651  000EC4                     u1505:
  2652  000EC4  9680               	bcf	128,3,c	;volatile
  2653  000EC6                     u1507:
  2654  000EC6                     l128:
  2655  000EC6  0012               	return		;funcret
  2656  000EC8                     __end_of_SmallHours:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _Lights_init *****************
  2660 ;; Defined at:
  2661 ;;		line 8 in file "lights.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		None
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text12
  2690  000F7A                     __ptext12:
  2691                           	callstack 0
  2692  000F7A                     _Lights_init:
  2693                           	callstack 29
  2694  000F7A                     
  2695                           ;lights.c: 11:     LATGbits.LATG0 = 0;
  2696  000F7A  907F               	bcf	127,0,c	;volatile
  2697                           
  2698                           ;lights.c: 12:     LATGbits.LATG1 = 0;
  2699  000F7C  927F               	bcf	127,1,c	;volatile
  2700                           
  2701                           ;lights.c: 13:     LATAbits.LATA2 = 0;
  2702  000F7E  9479               	bcf	121,2,c	;volatile
  2703                           
  2704                           ;lights.c: 14:     LATFbits.LATF6 = 0;
  2705  000F80  9C7E               	bcf	126,6,c	;volatile
  2706                           
  2707                           ;lights.c: 15:     LATAbits.LATA4 = 0;
  2708  000F82  9879               	bcf	121,4,c	;volatile
  2709                           
  2710                           ;lights.c: 16:     LATHbits.LATH3 = 0;
  2711  000F84  9680               	bcf	128,3,c	;volatile
  2712                           
  2713                           ;lights.c: 19:     TRISGbits.TRISG0 = 0;
  2714  000F86  9087               	bcf	135,0,c	;volatile
  2715                           
  2716                           ;lights.c: 20:     TRISGbits.TRISG1 = 0;
  2717  000F88  9287               	bcf	135,1,c	;volatile
  2718                           
  2719                           ;lights.c: 21:     TRISAbits.TRISA2 = 0;
  2720  000F8A  9481               	bcf	129,2,c	;volatile
  2721                           
  2722                           ;lights.c: 22:     TRISFbits.TRISF6 = 0;
  2723  000F8C  9C86               	bcf	134,6,c	;volatile
  2724                           
  2725                           ;lights.c: 23:     TRISAbits.TRISA4 = 0;
  2726  000F8E  9881               	bcf	129,4,c	;volatile
  2727                           
  2728                           ;lights.c: 24:     TRISHbits.TRISH3 = 0;
  2729  000F90  9688               	bcf	136,3,c	;volatile
  2730  000F92  0012               	return		;funcret
  2731  000F94                     __end_of_Lights_init:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _LEDarray_disp_bin *****************
  2735 ;; Defined at:
  2736 ;;		line 30 in file "lights.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  number          2    0[COMRAM] int 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		None
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:        2 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text13
  2765  000DEC                     __ptext13:
  2766                           	callstack 0
  2767  000DEC                     _LEDarray_disp_bin:
  2768                           	callstack 29
  2769  000DEC                     
  2770                           ;lights.c: 30: void LEDarray_disp_bin(int number);lights.c: 31: {;lights.c: 33:     if (
      +                          number & 0b00001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  2771  000DEC  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  2772  000DEE  EFFB  F006         	goto	u1411
  2773  000DF2  EFFD  F006         	goto	u1410
  2774  000DF6                     u1411:
  2775  000DF6  EF00  F007         	goto	l113
  2776  000DFA                     u1410:
  2777  000DFA  807F               	bsf	127,0,c	;volatile
  2778  000DFC  EF01  F007         	goto	l114
  2779  000E00                     l113:
  2780  000E00  907F               	bcf	127,0,c	;volatile
  2781  000E02                     l114:
  2782                           
  2783                           ;lights.c: 34:     if (number & 0b00010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 = 0;
      +                          }
  2784  000E02  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  2785  000E04  EF06  F007         	goto	u1421
  2786  000E08  EF08  F007         	goto	u1420
  2787  000E0C                     u1421:
  2788  000E0C  EF0B  F007         	goto	l115
  2789  000E10                     u1420:
  2790  000E10  827F               	bsf	127,1,c	;volatile
  2791  000E12  EF0C  F007         	goto	l116
  2792  000E16                     l115:
  2793  000E16  927F               	bcf	127,1,c	;volatile
  2794  000E18                     l116:
  2795                           
  2796                           ;lights.c: 35:     if (number & 0b00100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 = 0;
      +                          }
  2797  000E18  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  2798  000E1A  EF11  F007         	goto	u1431
  2799  000E1E  EF13  F007         	goto	u1430
  2800  000E22                     u1431:
  2801  000E22  EF16  F007         	goto	l117
  2802  000E26                     u1430:
  2803  000E26  8479               	bsf	121,2,c	;volatile
  2804  000E28  EF17  F007         	goto	l118
  2805  000E2C                     l117:
  2806  000E2C  9479               	bcf	121,2,c	;volatile
  2807  000E2E                     l118:
  2808                           
  2809                           ;lights.c: 36:     if (number & 0b01000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 = 0;
      +                          }
  2810  000E2E  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  2811  000E30  EF1C  F007         	goto	u1441
  2812  000E34  EF1E  F007         	goto	u1440
  2813  000E38                     u1441:
  2814  000E38  EF21  F007         	goto	l119
  2815  000E3C                     u1440:
  2816  000E3C  8C7E               	bsf	126,6,c	;volatile
  2817  000E3E  EF22  F007         	goto	l120
  2818  000E42                     l119:
  2819  000E42  9C7E               	bcf	126,6,c	;volatile
  2820  000E44                     l120:
  2821                           
  2822                           ;lights.c: 37:     if (number & 0b10000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 = 0;
      +                          }
  2823  000E44  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  2824  000E46  EF27  F007         	goto	u1451
  2825  000E4A  EF29  F007         	goto	u1450
  2826  000E4E                     u1451:
  2827  000E4E  EF2C  F007         	goto	l121
  2828  000E52                     u1450:
  2829  000E52  8879               	bsf	121,4,c	;volatile
  2830  000E54  EF2D  F007         	goto	l123
  2831  000E58                     l121:
  2832  000E58  9879               	bcf	121,4,c	;volatile
  2833  000E5A                     l123:
  2834  000E5A  0012               	return		;funcret
  2835  000E5C                     __end_of_LEDarray_disp_bin:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _Interrupts_init *****************
  2839 ;; Defined at:
  2840 ;;		line 8 in file "interrupts.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		None
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text14
  2869  000FB6                     __ptext14:
  2870                           	callstack 0
  2871  000FB6                     _Interrupts_init:
  2872                           	callstack 29
  2873  000FB6                     
  2874                           ;interrupts.c: 11:     PIE0bits.TMR0IE = 1;
  2875  000FB6  010E               	movlb	14	; () banked
  2876  000FB8  8B29               	bsf	41,5,b	;volatile
  2877                           
  2878                           ;interrupts.c: 12:     PIE2bits.C1IE = 1;
  2879  000FBA  812B               	bsf	43,0,b	;volatile
  2880                           
  2881                           ;interrupts.c: 13:     INTCONbits.PEIE = 1;
  2882  000FBC  8CF2               	bsf	242,6,c	;volatile
  2883                           
  2884                           ;interrupts.c: 14:     INTCONbits.GIE = 1;
  2885  000FBE  8EF2               	bsf	242,7,c	;volatile
  2886  000FC0                     
  2887                           ; BSR set to: 14
  2888  000FC0  0012               	return		;funcret
  2889  000FC2                     __end_of_Interrupts_init:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function _Comp1_init *****************
  2893 ;; Defined at:
  2894 ;;		line 21 in file "comparator.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 2
  2915 ;; This function calls:
  2916 ;;		_DAC_init
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text15
  2923  000F2C                     __ptext15:
  2924                           	callstack 0
  2925  000F2C                     _Comp1_init:
  2926                           	callstack 28
  2927  000F2C                     
  2928                           ;comparator.c: 23:     TRISFbits.TRISF7 = 1;
  2929  000F2C  8E86               	bsf	134,7,c	;volatile
  2930  000F2E                     
  2931                           ;comparator.c: 24:     CM1NCHbits.NCH = 0b011;
  2932  000F2E  010E               	movlb	14	; () banked
  2933  000F30  51D2               	movf	210,w,b	;volatile
  2934  000F32  0BF8               	andlw	-8
  2935  000F34  0903               	iorlw	3
  2936  000F36  6FD2               	movwf	210,b	;volatile
  2937                           
  2938                           ;comparator.c: 25:     CM1PCHbits.PCH = 0b101;
  2939  000F38  51D3               	movf	211,w,b	;volatile
  2940  000F3A  0BF8               	andlw	-8
  2941  000F3C  0905               	iorlw	5
  2942  000F3E  6FD3               	movwf	211,b	;volatile
  2943  000F40                     
  2944                           ; BSR set to: 14
  2945                           ;comparator.c: 26:     CM1CON0bits.HYS = 1;
  2946  000F40  83D0               	bsf	208,1,b	;volatile
  2947  000F42                     
  2948                           ; BSR set to: 14
  2949                           ;comparator.c: 27:     CM1CON0bits.POL = 1;
  2950  000F42  89D0               	bsf	208,4,b	;volatile
  2951  000F44                     
  2952                           ; BSR set to: 14
  2953                           ;comparator.c: 28:     CM1CON1bits.INTP = 1;
  2954  000F44  83D1               	bsf	209,1,b	;volatile
  2955  000F46                     
  2956                           ; BSR set to: 14
  2957                           ;comparator.c: 29:     CM1CON1bits.INTN = 1;
  2958  000F46  81D1               	bsf	209,0,b	;volatile
  2959  000F48                     
  2960                           ; BSR set to: 14
  2961                           ;comparator.c: 30:     DAC_init();
  2962  000F48  ECCA  F007         	call	_DAC_init	;wreg free
  2963  000F4C                     
  2964                           ;comparator.c: 31:     CM1CON0bits.EN = 1;
  2965  000F4C  010E               	movlb	14	; () banked
  2966  000F4E  8FD0               	bsf	208,7,b	;volatile
  2967  000F50                     
  2968                           ; BSR set to: 14
  2969                           ;comparator.c: 32:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  2970  000F50  0E05               	movlw	5
  2971  000F52                     u1667:
  2972  000F52  2EE8               	decfsz	wreg,f,c
  2973  000F54  D7FE               	bra	u1667
  2974  000F56  F000               	nop	
  2975  000F58  0012               	return		;funcret
  2976  000F5A                     __end_of_Comp1_init:
  2977                           	callstack 0
  2978                           
  2979 ;; *************** function _DAC_init *****************
  2980 ;; Defined at:
  2981 ;;		line 7 in file "comparator.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_Comp1_init
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text16
  3010  000F94                     __ptext16:
  3011                           	callstack 0
  3012  000F94                     _DAC_init:
  3013                           	callstack 28
  3014  000F94                     
  3015                           ;comparator.c: 9:     DAC1CON0bits.PSS = 0b00;
  3016  000F94  0EF3               	movlw	-13
  3017  000F96  010E               	movlb	14	; () banked
  3018  000F98  17C6               	andwf	198,f,b	;volatile
  3019  000F9A                     
  3020                           ; BSR set to: 14
  3021                           ;comparator.c: 10:     DAC1CON0bits.NSS = 0b0;
  3022  000F9A  91C6               	bcf	198,0,b	;volatile
  3023                           
  3024                           ;comparator.c: 14:     DAC1CON1bits.DAC1R = 0b11011;
  3025  000F9C  51C7               	movf	199,w,b	;volatile
  3026  000F9E  0BE0               	andlw	-32
  3027  000FA0  091B               	iorlw	27
  3028  000FA2  6FC7               	movwf	199,b	;volatile
  3029  000FA4                     
  3030                           ; BSR set to: 14
  3031                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN = 1;
  3032  000FA4  8FC6               	bsf	198,7,b	;volatile
  3033  000FA6                     
  3034                           ; BSR set to: 14
  3035  000FA6  0012               	return		;funcret
  3036  000FA8                     __end_of_DAC_init:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _ISR *****************
  3040 ;; Defined at:
  3041 ;;		line 20 in file "interrupts.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		Interrupt level 2
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	intcode
  3069  000008                     __pintcode:
  3070                           	callstack 0
  3071  000008                     _ISR:
  3072                           	callstack 27
  3073                           
  3074                           ; BSR set to: 14
  3075                           ;incstack = 0
  3076  000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3077  00000A                     
  3078                           ;interrupts.c: 22:     if (PIR0bits.TMR0IF == 1) {
  3079  00000A  010E               	movlb	14	; () banked
  3080  00000C  AB33               	btfss	51,5,b	;volatile
  3081  00000E  EF0B  F000         	goto	i2u78_41
  3082  000012  EF0D  F000         	goto	i2u78_40
  3083  000016                     i2u78_41:
  3084  000016  EF14  F000         	goto	i2l1263
  3085  00001A                     i2u78_40:
  3086  00001A                     
  3087                           ; BSR set to: 14
  3088                           ;interrupts.c: 23:         minutehand = 1;
  3089  00001A  0E01               	movlw	1
  3090  00001C  6E4A               	movwf	_minutehand^0,c
  3091                           
  3092                           ;interrupts.c: 24:         TMR0H=0b00011011;
  3093  00001E  0E1B               	movlw	27
  3094  000020  6ED4               	movwf	212,c	;volatile
  3095                           
  3096                           ;interrupts.c: 25:         TMR0L=0b00011110;
  3097  000022  0E1E               	movlw	30
  3098  000024  6ED3               	movwf	211,c	;volatile
  3099  000026                     
  3100                           ; BSR set to: 14
  3101                           ;interrupts.c: 26:         PIR0bits.TMR0IF = 0;
  3102  000026  9B33               	bcf	51,5,b	;volatile
  3103  000028                     i2l1263:
  3104                           
  3105                           ; BSR set to: 14
  3106                           ;interrupts.c: 29:     if (PIR2bits.C1IF == 1) {
  3107  000028  A135               	btfss	53,0,b	;volatile
  3108  00002A  EF19  F000         	goto	i2u79_41
  3109  00002E  EF1B  F000         	goto	i2u79_40
  3110  000032                     i2u79_41:
  3111  000032  EF2B  F000         	goto	i2l56
  3112  000036                     i2u79_40:
  3113  000036                     
  3114                           ; BSR set to: 14
  3115                           ;interrupts.c: 30:         if (CM1CON0bits.OUT) {LATHbits.LATH3 = 1; dawndusk = 2;}
  3116  000036  ADD0               	btfss	208,6,b	;volatile
  3117  000038  EF20  F000         	goto	i2u80_41
  3118  00003C  EF22  F000         	goto	i2u80_40
  3119  000040                     i2u80_41:
  3120  000040  EF27  F000         	goto	i2l54
  3121  000044                     i2u80_40:
  3122  000044                     
  3123                           ; BSR set to: 14
  3124  000044  8680               	bsf	128,3,c	;volatile
  3125  000046                     
  3126                           ; BSR set to: 14
  3127  000046  0E02               	movlw	2
  3128  000048  6E49               	movwf	_dawndusk^0,c
  3129  00004A  EF2A  F000         	goto	i2l1273
  3130  00004E                     i2l54:
  3131                           
  3132                           ; BSR set to: 14
  3133  00004E  9680               	bcf	128,3,c	;volatile
  3134  000050                     
  3135                           ; BSR set to: 14
  3136  000050  0E01               	movlw	1
  3137  000052  6E49               	movwf	_dawndusk^0,c
  3138  000054                     i2l1273:
  3139                           
  3140                           ; BSR set to: 14
  3141                           ;interrupts.c: 32:         PIR2bits.C1IF = 0;
  3142  000054  9135               	bcf	53,0,b	;volatile
  3143  000056                     i2l56:
  3144                           
  3145                           ; BSR set to: 14
  3146  000056  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3147  000058  0011               	retfie		f
  3148  00005A                     __end_of_ISR:
  3149                           	callstack 0
  3150  0000                     
  3151                           	psect	rparam
  3152  0000                     
  3153                           	psect	temp
  3154  00004B                     btemp:
  3155                           	callstack 0
  3156  00004B                     	ds	1
  3157  0000                     int$flags	set	btemp
  3158  0000                     wtemp8	set	btemp+1
  3159  0000                     ttemp5	set	btemp+1
  3160  0000                     ttemp6	set	btemp+4
  3161  0000                     ttemp7	set	btemp+8
  3162                           
  3163                           	psect	idloc
  3164                           
  3165                           ;Config register IDLOC0 @ 0x200000
  3166                           ;	unspecified, using default values
  3167  200000                     	org	2097152
  3168  200000  0FFF               	dw	4095
  3169                           
  3170                           ;Config register IDLOC1 @ 0x200002
  3171                           ;	unspecified, using default values
  3172  200002                     	org	2097154
  3173  200002  0FFF               	dw	4095
  3174                           
  3175                           ;Config register IDLOC2 @ 0x200004
  3176                           ;	unspecified, using default values
  3177  200004                     	org	2097156
  3178  200004  0FFF               	dw	4095
  3179                           
  3180                           ;Config register IDLOC3 @ 0x200006
  3181                           ;	unspecified, using default values
  3182  200006                     	org	2097158
  3183  200006  0FFF               	dw	4095
  3184                           
  3185                           ;Config register IDLOC4 @ 0x200008
  3186                           ;	unspecified, using default values
  3187  200008                     	org	2097160
  3188  200008  0FFF               	dw	4095
  3189                           
  3190                           ;Config register IDLOC5 @ 0x20000A
  3191                           ;	unspecified, using default values
  3192  20000A                     	org	2097162
  3193  20000A  0FFF               	dw	4095
  3194                           
  3195                           ;Config register IDLOC6 @ 0x20000C
  3196                           ;	unspecified, using default values
  3197  20000C                     	org	2097164
  3198  20000C  0FFF               	dw	4095
  3199                           
  3200                           ;Config register IDLOC7 @ 0x20000E
  3201                           ;	unspecified, using default values
  3202  20000E                     	org	2097166
  3203  20000E  0FFF               	dw	4095
  3204                           
  3205                           	psect	config
  3206                           
  3207                           ;Config register CONFIG1L @ 0x300000
  3208                           ;	External Oscillator mode Selection bits
  3209                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3210                           ;	Power-up default value for COSC bits
  3211                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3212  300000                     	org	3145728
  3213  300000  AA                 	db	170
  3214                           
  3215                           ;Config register CONFIG1H @ 0x300001
  3216                           ;	unspecified, using default values
  3217                           ;	Clock Out Enable bit
  3218                           ;	CLKOUTEN = 0x1, unprogrammed default
  3219                           ;	Clock Switch Enable bit
  3220                           ;	CSWEN = 0x1, unprogrammed default
  3221                           ;	Fail-Safe Clock Monitor Enable bit
  3222                           ;	FCMEN = 0x1, unprogrammed default
  3223  300001                     	org	3145729
  3224  300001  FF                 	db	255
  3225                           
  3226                           ;Config register CONFIG2L @ 0x300002
  3227                           ;	unspecified, using default values
  3228                           ;	Master Clear Enable bit
  3229                           ;	MCLRE = 0x1, unprogrammed default
  3230                           ;	Power-up Timer Enable bit
  3231                           ;	PWRTE = 0x1, unprogrammed default
  3232                           ;	Low-power BOR enable bit
  3233                           ;	LPBOREN = 0x1, unprogrammed default
  3234                           ;	Brown-out Reset Enable bits
  3235                           ;	BOREN = 0x3, unprogrammed default
  3236  300002                     	org	3145730
  3237  300002  FF                 	db	255
  3238                           
  3239                           ;Config register CONFIG2H @ 0x300003
  3240                           ;	unspecified, using default values
  3241                           ;	Brown Out Reset Voltage selection bits
  3242                           ;	BORV = 0x3, unprogrammed default
  3243                           ;	ZCD Disable bit
  3244                           ;	ZCD = 0x1, unprogrammed default
  3245                           ;	PPSLOCK bit One-Way Set Enable bit
  3246                           ;	PPS1WAY = 0x1, unprogrammed default
  3247                           ;	Stack Full/Underflow Reset Enable bit
  3248                           ;	STVREN = 0x1, unprogrammed default
  3249                           ;	Debugger Enable bit
  3250                           ;	DEBUG = 0x1, unprogrammed default
  3251                           ;	Extended Instruction Set Enable bit
  3252                           ;	XINST = 0x1, unprogrammed default
  3253  300003                     	org	3145731
  3254  300003  FF                 	db	255
  3255                           
  3256                           ;Config register CONFIG3L @ 0x300004
  3257                           ;	WDT Period Select bits
  3258                           ;	WDTCPS = 0x1F, unprogrammed default
  3259                           ;	WDT operating mode
  3260                           ;	WDTE = OFF, WDT Disabled
  3261  300004                     	org	3145732
  3262  300004  9F                 	db	159
  3263                           
  3264                           ;Config register CONFIG3H @ 0x300005
  3265                           ;	unspecified, using default values
  3266                           ;	WDT Window Select bits
  3267                           ;	WDTCWS = 0x7, unprogrammed default
  3268                           ;	WDT input clock selector
  3269                           ;	WDTCCS = 0x7, unprogrammed default
  3270  300005                     	org	3145733
  3271  300005  FF                 	db	255
  3272                           
  3273                           ;Config register CONFIG4L @ 0x300006
  3274                           ;	unspecified, using default values
  3275                           ;	Write Protection Block 0
  3276                           ;	WRT0 = 0x1, unprogrammed default
  3277                           ;	Write Protection Block 1
  3278                           ;	WRT1 = 0x1, unprogrammed default
  3279                           ;	Write Protection Block 2
  3280                           ;	WRT2 = 0x1, unprogrammed default
  3281                           ;	Write Protection Block 3
  3282                           ;	WRT3 = 0x1, unprogrammed default
  3283                           ;	Write Protection Block 3
  3284                           ;	WRT4 = 0x1, unprogrammed default
  3285                           ;	Write Protection Block 3
  3286                           ;	WRT5 = 0x1, unprogrammed default
  3287                           ;	Write Protection Block 3
  3288                           ;	WRT6 = 0x1, unprogrammed default
  3289                           ;	Write Protection Block 3
  3290                           ;	WRT7 = 0x1, unprogrammed default
  3291  300006                     	org	3145734
  3292  300006  FF                 	db	255
  3293                           
  3294                           ;Config register CONFIG4H @ 0x300007
  3295                           ;	unspecified, using default values
  3296                           ;	Configuration Register Write Protection bit
  3297                           ;	WRTC = 0x1, unprogrammed default
  3298                           ;	Boot Block Write Protection bit
  3299                           ;	WRTB = 0x1, unprogrammed default
  3300                           ;	Data EEPROM Write Protection bit
  3301                           ;	WRTD = 0x1, unprogrammed default
  3302                           ;	Scanner Enable bit
  3303                           ;	SCANE = 0x1, unprogrammed default
  3304                           ;	Low Voltage Programming Enable bit
  3305                           ;	LVP = 0x1, unprogrammed default
  3306  300007                     	org	3145735
  3307  300007  FF                 	db	255
  3308                           
  3309                           ;Config register CONFIG5L @ 0x300008
  3310                           ;	unspecified, using default values
  3311                           ;	UserNVM Program Memory Code Protection bit
  3312                           ;	CP = 0x1, unprogrammed default
  3313                           ;	DataNVM Memory Code Protection bit
  3314                           ;	CPD = 0x1, unprogrammed default
  3315  300008                     	org	3145736
  3316  300008  FF                 	db	255
  3317                           
  3318                           ;Config register CONFIG5H @ 0x300009
  3319                           ;	unspecified, using default values
  3320  300009                     	org	3145737
  3321  300009  FF                 	db	255
  3322                           
  3323                           ;Config register CONFIG6L @ 0x30000A
  3324                           ;	unspecified, using default values
  3325                           ;	Table Read Protection Block 0
  3326                           ;	EBTR0 = 0x1, unprogrammed default
  3327                           ;	Table Read Protection Block 1
  3328                           ;	EBTR1 = 0x1, unprogrammed default
  3329                           ;	Table Read Protection Block 2
  3330                           ;	EBTR2 = 0x1, unprogrammed default
  3331                           ;	Table Read Protection Block 3
  3332                           ;	EBTR3 = 0x1, unprogrammed default
  3333                           ;	Table Read Protection Block 4
  3334                           ;	EBTR4 = 0x1, unprogrammed default
  3335                           ;	Table Read Protection Block 5
  3336                           ;	EBTR5 = 0x1, unprogrammed default
  3337                           ;	Table Read Protection Block 6
  3338                           ;	EBTR6 = 0x1, unprogrammed default
  3339                           ;	Table Read Protection Block 7
  3340                           ;	EBTR7 = 0x1, unprogrammed default
  3341  30000A                     	org	3145738
  3342  30000A  FF                 	db	255
  3343                           
  3344                           ;Config register CONFIG6H @ 0x30000B
  3345                           ;	unspecified, using default values
  3346                           ;	Boot Block Table Read Protection bit
  3347                           ;	EBTRB = 0x1, unprogrammed default
  3348  30000B                     	org	3145739
  3349  30000B  FF                 	db	255
  3350                           tosu	equ	0xFFF
  3351                           tosh	equ	0xFFE
  3352                           tosl	equ	0xFFD
  3353                           stkptr	equ	0xFFC
  3354                           pclatu	equ	0xFFB
  3355                           pclath	equ	0xFFA
  3356                           pcl	equ	0xFF9
  3357                           tblptru	equ	0xFF8
  3358                           tblptrh	equ	0xFF7
  3359                           tblptrl	equ	0xFF6
  3360                           tablat	equ	0xFF5
  3361                           prodh	equ	0xFF4
  3362                           prodl	equ	0xFF3
  3363                           indf0	equ	0xFEF
  3364                           postinc0	equ	0xFEE
  3365                           postdec0	equ	0xFED
  3366                           preinc0	equ	0xFEC
  3367                           plusw0	equ	0xFEB
  3368                           fsr0h	equ	0xFEA
  3369                           fsr0l	equ	0xFE9
  3370                           wreg	equ	0xFE8
  3371                           indf1	equ	0xFE7
  3372                           postinc1	equ	0xFE6
  3373                           postdec1	equ	0xFE5
  3374                           preinc1	equ	0xFE4
  3375                           plusw1	equ	0xFE3
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           bsr	equ	0xFE0
  3379                           indf2	equ	0xFDF
  3380                           postinc2	equ	0xFDE
  3381                           postdec2	equ	0xFDD
  3382                           preinc2	equ	0xFDC
  3383                           plusw2	equ	0xFDB
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     72      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    UpdateDawnDusk@pduskminute	PTR int  size(2) Largest target is 2
		 -> main@duskminute(COMRAM[2]), 

    UpdateDawnDusk@pduskhour	PTR int  size(2) Largest target is 2
		 -> main@duskhour(COMRAM[2]), 

    UpdateDawnDusk@pminute	PTR int  size(2) Largest target is 2
		 -> main@minute(COMRAM[2]), 

    UpdateDawnDusk@pdawnminute	PTR int  size(2) Largest target is 2
		 -> main@dawnminute(COMRAM[2]), 

    UpdateDawnDusk@phour	PTR int  size(2) Largest target is 2
		 -> main@hour(COMRAM[2]), 

    UpdateDawnDusk@pdawnhour	PTR int  size(2) Largest target is 2
		 -> main@dawnhour(COMRAM[2]), 

    TimeAvg@pavgminute	PTR int  size(2) Largest target is 2
		 -> SunPleaseFixTheDamnClock@avgminute(COMRAM[2]), 

    TimeAvg@pavghour	PTR int  size(2) Largest target is 2
		 -> SunPleaseFixTheDamnClock@avghour(COMRAM[2]), 

    SunPleaseFixTheDamnClock@phour	PTR int  size(2) Largest target is 2
		 -> main@hour(COMRAM[2]), 

    SunPleaseFixTheDamnClock@pminute	PTR int  size(2) Largest target is 2
		 -> main@minute(COMRAM[2]), 

    SunPleaseFixTheDamnClock@pduskminute	PTR int  size(2) Largest target is 2
		 -> main@duskminute(COMRAM[2]), 

    SunPleaseFixTheDamnClock@pduskhour	PTR int  size(2) Largest target is 2
		 -> main@duskhour(COMRAM[2]), 

    SunPleaseFixTheDamnClock@pdawnminute	PTR int  size(2) Largest target is 2
		 -> main@dawnminute(COMRAM[2]), 

    SunPleaseFixTheDamnClock@pdawnhour	PTR int  size(2) Largest target is 2
		 -> main@dawnhour(COMRAM[2]), 

    Timekeeper@pDST	PTR unsigned char  size(2) Largest target is 1
		 -> main@DST(COMRAM[1]), 

    Timekeeper@pyear	PTR unsigned int  size(2) Largest target is 2
		 -> main@year(COMRAM[2]), 

    Timekeeper@pmonth	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(COMRAM[1]), 

    Timekeeper@pdayofweek	PTR unsigned char  size(2) Largest target is 1
		 -> main@dayofweek(COMRAM[1]), 

    Timekeeper@pday	PTR unsigned char  size(2) Largest target is 1
		 -> main@day(COMRAM[1]), 

    Timekeeper@phour	PTR int  size(2) Largest target is 2
		 -> main@hour(COMRAM[2]), 

    Timekeeper@pminute	PTR int  size(2) Largest target is 2
		 -> main@minute(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_SunPleaseFixTheDamnClock
    _Timekeeper->_LeapYear
    _LeapYear->___lwmod
    _SunPleaseFixTheDamnClock->_TimeAvg
    _TimeAvg->___awdiv
    ___awdiv->_TimeDiff

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   12270
                                             54 COMRAM    18    18      0
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                        _Lights_init
                         _SmallHours
           _SunPleaseFixTheDamnClock
                         _Timekeeper
                        _Timer0_init
                     _UpdateDawnDusk
 ---------------------------------------------------------------------------------
 (1) _UpdateDawnDusk                                      15     2     13     752
                                              0 COMRAM    15     2     13
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timekeeper                                          16     2     14    2404
                                             10 COMRAM    16     2     14
                           _LeapYear
 ---------------------------------------------------------------------------------
 (2) _LeapYear                                             5     3      2     706
                                              5 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _SunPleaseFixTheDamnClock                            21     8     13    7872
                                             33 COMRAM    21     8     13
                            _TimeAvg
                           _TimeDiff
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _TimeAvg                                             16     4     12    3605
                                             17 COMRAM    16     4     12
                           _TimeDiff
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              9 COMRAM     8     4      4
                           _TimeDiff (ARG)
 ---------------------------------------------------------------------------------
 (2) _TimeDiff                                             9     1      8     832
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _SmallHours                                           6     0      6     316
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _Lights_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     186
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _Lights_init
   _SmallHours
   _SunPleaseFixTheDamnClock
     _TimeAvg
       _TimeDiff
       ___awdiv
         _TimeDiff (ARG)
       ___awmod
     _TimeDiff
     ___awdiv
     ___awmod
   _Timekeeper
     _LeapYear
       ___lwmod
   _Timer0_init
   _UpdateDawnDusk

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     48      4A       1       78.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A       8        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 04 23:59:56 2021

                  Timekeeper@pdayofweek 0015                                      l22 0F58  
                                    l19 0FA6                                      l47 0FC0  
                                    l83 0864                            ___awdiv@sign 000F  
                     ??_Interrupts_init 0001                                     l110 0F92  
                                   l120 0E44                                     l200 0CC8  
                                   l121 0E58                                     l113 0E00  
                                   l114 0E02                                     l123 0E5A  
                                   l115 0E16                                     l211 0D6C  
                                   l116 0E18                                     l117 0E2C  
                                   l118 0E2E                                     l206 0AA6  
                                   l119 0E42                                     l128 0EC6  
                                   l170 0DE8                                     l181 068E  
                                   l173 0DEA                                     l149 0F78  
                                   l166 04B2                                     l179 060E  
                                   l188 0806                                     l445 0B6A  
                                   l458 0C1A                                     l722 0F2A  
                                   l715 0F22                                     _ISR 0008  
                                   u900 0AD4                                     u901 0AD0  
                                   u910 0AFA                                     u911 0AF6  
                                   u920 0B18                                     u921 0B14  
                                   u850 0C3A                                     u930 0B34  
                                   u851 0C36                                     u931 0B30  
                                   u860 0C6A                                     u940 0B5A  
                                   u861 0C66                                     u941 0B56  
                                   u870 0C8C                                     u950 0B7E  
                                   u871 0C88                                     u951 0B7A  
                                   u880 0CBC                                     u960 0B98  
                                   u881 0CB8                                     u961 0B94  
                                   u890 0ABA                                     u970 0BB2  
                                   u891 0AB6                                     u971 0BAE  
                                   u980 0BD0                                     u981 0BCC  
                                   u990 0BE6                                     u991 0BE2  
                          ___awmod@sign 0006                                     wreg 000FE8  
                                  ?_ISR 0001                                    l1011 0FA4  
                                  l1007 0F94                                    l1009 0F9A  
                                  l1051 0F44                                    l1043 0F2C  
                                  l1053 0F46                                    l1045 0F2E  
                                  l1061 0FB6                                    l1301 0C1C  
                                  l1055 0F48                                    l1047 0F40  
                                  l1063 0F7A                                    l1311 0C6E  
                                  l1071 0F76                                    l1057 0F4C  
                                  l1049 0F42                                    l1321 0CBC  
                                  l1305 0C3E                                    l1401 0C12  
                                  l1065 0F5A                                    l1059 0F50  
                                  l1315 0C90                                    l1307 0C44  
                                  l1331 0AC2                                    l1411 0EEA  
                                  l1067 0F62                                    l1317 0C96  
                                  l1309 0C4C                                    l1341 0AE8  
                                  l1333 0AC6                                    l1325 0AA8  
                                  l1413 0EF8                                    l1405 0EC8  
                                  l1421 0D6E                                    l1501 0276  
                                  l1069 0F6C                                    l1319 0C9E  
                                  l1351 0B1E                                    l1343 0AFA  
                                  l1335 0AD4                                    l1327 0AAC  
                                  l1415 0F0E                                    l1407 0EDA  
                                  l1431 0DE4                                    l1423 0D8C  
                                  l1511 02E6                                    l1503 0280  
                                  l1353 0B34                                    l1345 0B02  
                                  l1361 0B4A                                    l1337 0ADC  
                                  l1329 0ABA                                    l1441 0A26  
                                  l1601 05D8                                    l1417 0F16  
                                  l1409 0EE2                                    l1425 0DB2  
                                  l1521 035A                                    l1513 0300  
                                  l1505 029A                                    l1363 0B5A  
                                  l1355 0B3C                                    l1347 0B0A  
                                  l1339 0AE0                                    l1371 0B70  
                                  l1443 0A4E                                    l1435 098E  
                                  l1611 0670                                    l1603 05F0  
                                  l1419 0F1C                                    l1427 0DBA  
                                  l1531 03B2                                    l1515 031A  
                                  l1507 02B2                                    l1523 0364  
                                  l1451 005E                                    l1365 0B62  
                                  l1357 0B3E                                    l1349 0B18  
                                  l1381 0BA0                                    l1373 0B7E  
                                  l1445 0A5C                                    l1437 09CE  
                                  l1621 070E                                    l1613 06B6  
                                  l1605 0636                                    l1533 03CA  
                                  l1541 0418                                    l1525 037E  
                                  l1517 0334                                    l1509 02CC  
                                  l1461 00D2                                    l1453 0088  
                                  l1359 0B44                                    l1391 0BE6  
                                  l1383 0BB2                                    l1375 0B86  
                                  l1447 0A70                                    l1439 09FA  
                                  l1631 07D6                                    l1623 073A  
                                  l1615 06C4                                    l1607 0644  
                                  l1551 0498                                    l1543 0432  
                                  l1535 03E4                                    l1527 038A  
                                  l1519 034E                                    l1471 0126  
                                  l1463 00DC                                    l1455 0098  
                                  l1561 0E26                                    l1393 0BEE  
                                  l1385 0BBA                                    l1377 0B8A  
                                  l1369 0B6C                                    l1449 0A88  
                                  l1633 07F6                                    l1625 075E  
                                  l1617 06D8                                    l1609 0658  
                                  l1553 04A6                                    l1545 044A  
                                  l1537 03FE                                    l1529 0398  
                                  l1481 0194                                    l1473 0140  
                                  l1465 00E6                                    l1457 00A6  
                                  l1641 0874                                    l1563 0E3C  
                                  l1555 0DEC                                    l1571 0E92  
                                  l1395 0BF4                                    l1387 0BC2  
                                  l1379 0B98                                    l1619 06F0  
                                  l1627 0786                                    l1547 0466  
                                  l1539 040C                                    l1491 0202  
                                  l1483 01AE                                    l1475 0164  
                                  l1467 0100                                    l1459 00C2  
                                  l1651 08EC                                    l1643 08B0  
                                  l1635 0808                                    l1565 0E52  
                                  l1557 0DFA                                    l1573 0E94  
                                  l1389 0BD0                                    l1397 0BFA  
                                  l1629 07AE                                    l1549 0480  
                                  l1493 021C                                    l1485 01D2  
                                  l1477 0170                                    l1469 010C  
                                  l1581 0CDA                                    l1653 0924  
                                  l1645 08B4                                    l1637 0850  
                                  l1559 0E10                                    l1575 0EA8  
                                  l1567 0E5C                                    l1399 0C0A  
                                  l1591 04B4                                    l1495 0236  
                                  l1487 01DE                                    l1479 017A  
                                  l1583 0D02                                    l1655 0928  
                                  l1647 08C0                                    l1639 085C  
                                  l1577 0EBA                                    l1569 0E76  
                                  l1593 0508                                    l1497 0250  
                                  l1489 01E8                                    l1585 0D1A  
                                  l1657 093C                                    l1649 08DC  
                                  l1595 0534                                    l1499 026A  
                                  l1587 0D2C                                    l1579 0CCA  
                                  l1659 094E                                    l1597 0550  
                                  l1589 0D54                                    l1599 056C  
                                  u1000 0C0A                                    u1001 0C06  
                                  u1010 0EDA                                    u1011 0ED6  
                                  u1020 0EF8                                    u1100 00C2  
                                  u1021 0EF4                                    u1101 00BE  
                                  u1030 0F0E                                    u1110 0100  
                                  u1031 0F0A                                    u1111 00FC  
                                  u1040 0D8C                                    u1200 0236  
                                  u1120 0126                                    u1041 0D88  
                                  u1201 0232                                    u1121 0122  
                                  u1050 0DB2                                    u1210 0250  
                                  u1130 0140                                    u1051 0DAE  
                                  u1211 024C                                    u1131 013C  
                                  u1060 0DE0                                    u1300 034E  
                                  u1220 026A                                    u1140 0164  
                                  u1061 0DDC                                    u1301 034A  
                                  u1221 0266                                    u1141 0160  
                                  u1070 0A4E                                    u1310 037E  
                                  u1230 029A                                    u1150 0194  
                                  u1071 0A4A                                    u1311 037A  
                                  u1231 0296                                    u1151 0190  
                                  u1080 0A88                                    u1400 0498  
                                  u1320 03B2                                    u1240 02B2  
                                  u1160 01AE                                    u1081 0A84  
                                  u1401 0494                                    u1321 03AE  
                                  u1241 02AE                                    u1161 01AA  
                                  u1410 0DFA                                    u1330 03CA  
                                  u1250 02CC                                    u1170 01D2  
                                  u1090 0088                                    u1411 0DF6  
                                  u1331 03C6                                    u1251 02C8  
                                  u1171 01CE                                    u1091 0084  
                                  u1420 0E10                                    u1340 03E4  
                                  u1260 02E6                                    u1180 0202  
                                  u1421 0E0C                                    u1341 03E0  
                                  u1261 02E2                                    u1181 01FE  
                                  u1430 0E26                                    u1350 03FE  
                                  u1270 0300                                    u1190 021C  
                                  u1510 0CDA                                    u1431 0E22  
                                  u1351 03FA                                    u1271 02FC  
                                  u1191 0218                                    u1511 0CD6  
                                  u1440 0E3C                                    u1600 07AE  
                                  u1360 0432                                    u1280 031A  
                                  u1520 0D2C                                    u1441 0E38  
                                  u1505 0EC4                                    u1601 07AA  
                                  u1361 042E                                    u1281 0316  
                                  u1521 0D28                                    u1450 0E52  
                                  u1610 07D6                                    u1530 0550  
                                  u1370 044A                                    u1290 0334  
                                  u1451 0E4E                                    u1507 0EC6  
                                  u1611 07D2                                    u1531 054C  
                                  u1371 0446                                    u1291 0330  
                                  u1460 0E76                                    u1540 056C  
                                  u1380 0466                                    u1620 0874  
                                  u1461 0E72                                    u1541 0568  
                                  u1381 0462                                    u1621 0870  
                                  u1470 0E92                                    u1550 05F0  
                                  u1390 0480                                    u1630 08EC  
                                  u1471 0E8E                                    u1551 05EC  
                                  u1391 047C                                    u1631 08E8  
                                  u1480 0EA8                                    u1560 0636  
                                  u1640 093C                                    u1481 0EA4  
                                  u1561 0632                                    u1641 0938  
                                  u1490 0EBA                                    u1570 0670  
                                  u1650 094E                                    u1491 0EB6  
                                  u1571 066C                                    u1651 094A  
                                  u1580 06B6                                    u1581 06B2  
                                  u1590 06F0                                    u1591 06EC  
                                  u1667 0F52                                    i2l54 004E  
                                  i2l56 0056                                    _main 0808  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 004B  
                                  start 005A                        __end_of_DAC_init 0FA8  
                          ___param_bank 000000                                   ??_ISR 0001  
                            _Comp1_init 0F2C                            main@dawnhour 0042  
                       __end_of_TimeAvg 0AA8                           ??_Lights_init 0001  
                                 ?_main 0001                         __end_of___awdiv 0B6C  
                       __end_of___awmod 0C1C                         ___awdiv@divisor 000C  
                       __end_of___lwmod 0F2C                         ___awdiv@counter 000E  
                                 _TMR0H 000FD4                                   _TMR0L 000FD3  
                          main@duskhour 003F                                   plusw2 000FDB  
                                 ttemp5 004C                                   ttemp6 004F  
                                 ttemp7 0053                                   status 000FD8  
                                 wtemp8 004C                         __initialization 0FA8  
                      __end_of_LeapYear 0DEC                            __end_of_main 098E  
              _SunPleaseFixTheDamnClock 04B4                                  ??_main 0037  
                         __activetblptr 000000                        __end_of_TimeDiff 0CCA  
                         main@dayofweek 0039                     __end_of_Lights_init 0F94  
                   UpdateDawnDusk@phour 0009                        ___awdiv@dividend 000A  
                                i2l1261 0026                                  i2l1271 0050  
                                i2l1263 0028                                  i2l1273 0054  
                                i2l1265 0036                                  i2l1257 000A  
                                i2l1267 0044                                  i2l1259 001A  
                                i2l1269 0046                       _LEDarray_disp_bin 0DEC  
                            _SmallHours 0E5C                      ?_LEDarray_disp_bin 0001  
                         ??_Timer0_init 0001                               ??_TimeAvg 001E  
                           ?_Comp1_init 0001                               ??___awdiv 000E  
                             ??___awmod 0005                               ??___lwmod 0005  
                            _Timekeeper 005E                     ??_LEDarray_disp_bin 0003  
                      ___awdiv@quotient 0010                         ___awmod@divisor 0003  
   SunPleaseFixTheDamnClock@pdawnminute 0024                                  isa$std 000001  
                       ___awmod@counter 0005                               ?_DAC_init 0001  
             __end_of_LEDarray_disp_bin 0E5C                              __accesstop 0060  
               __end_of__initialization 0FAC                        LeapYear@leapyear 000A  
                      Timekeeper@pmonth 000D                           ___rparam_used 000001  
                       _Interrupts_init 0FB6                          __pcstackCOMRAM 0001  
                       TimeDiff@minute1 0003                         TimeDiff@minute2 0007  
     SunPleaseFixTheDamnClock@avgminute 0033                     __end_of_Timer0_init 0F7A  
                           _Lights_init 0F7A                       UpdateDawnDusk@DST 000D  
   SunPleaseFixTheDamnClock@pduskminute 0028                              ??_DAC_init 0001  
     SunPleaseFixTheDamnClock@pdawnhour 0022                               ?_LeapYear 0006  
                        Timekeeper@pDST 0017                     __size_of_Comp1_init 002E  
                        Timekeeper@pday 000F                          main@dawnminute 003B  
                         TimeDiff@hour1 0001                           TimeDiff@hour2 0005  
     SunPleaseFixTheDamnClock@pduskhour 0026                             ?_SmallHours 0001  
                             ?_TimeDiff 0001                         TimeAvg@pavghour 001A  
                           ?_Timekeeper 000B                       TimeAvg@pavgminute 001C  
SunPleaseFixTheDamnClock@timedifference 0035                                 i2u80_40 0044  
                               i2u80_41 0040                                 i2u78_40 001A  
                               i2u78_41 0016                                 i2u79_40 0036  
                               i2u79_41 0032                              ??_LeapYear 0008  
            __size_of_LEDarray_disp_bin 0070                 __end_of_Interrupts_init 0FC2  
                        main@duskminute 003D                        SmallHours@minute 0003  
            ??_SunPleaseFixTheDamnClock 002F                                 __Hparam 0000  
                            ??_TimeDiff 0009                                 __Lparam 0000  
                               _TimeAvg 098E                             _Timer0_init 0F5A  
                               ___awdiv 0AA8                                 ___awmod 0B6C  
                               ___lwmod 0EC8                                 __pcinit 0FA8  
                               __ramtop 0E00                                 __ptext0 0808  
                               __ptext1 0CCA                                 __ptext2 0F5A  
                               __ptext3 005E                                 __ptext4 0D6E  
                               __ptext5 0EC8                                 __ptext6 04B4  
                               __ptext7 098E                                 __ptext8 0B6C  
                               __ptext9 0AA8                            __size_of_ISR 0052  
               __size_of_UpdateDawnDusk 00A4                        ___awmod@dividend 0001  
                   __size_of_SmallHours 006C                                 main@DST 003A  
                               main@day 0041                    end_of_initialization 0FAC  
                            _minutehand 004A                     __size_of_Timekeeper 0456  
                               postdec1 000FE5                                 postdec2 000FDD  
                          ??_Comp1_init 0001                                 postinc1 000FE6  
                               postinc2 000FDE                               _TRISAbits 000F81  
             UpdateDawnDusk@pdawnminute 0003                               _TRISFbits 000F86  
                             _TRISGbits 000F87                               _TRISHbits 000F88  
                     Timekeeper@pminute 0013                       __size_of_DAC_init 0014  
                    __end_of_Comp1_init 0F5A                             _CM1CON0bits 000ED0  
                           _CM1CON1bits 000ED1                        ?_Interrupts_init 0001  
                    SmallHours@dawnhour 0005                              main@minute 0045  
                          ?_Lights_init 0001                     start_initialization 0FA8  
                           __end_of_ISR 005A         SunPleaseFixTheDamnClock@avghour 0031  
             UpdateDawnDusk@pduskminute 0007         SunPleaseFixTheDamnClock@pminute 002C  
                     __size_of_LeapYear 007E                            ??_SmallHours 0007  
                     __size_of_TimeDiff 00AE                            ??_Timekeeper 0019  
                        _UpdateDawnDusk 0CCA                         Timekeeper@phour 0011  
                       Timekeeper@pyear 000B                             __pbssCOMRAM 0049  
                    __end_of_SmallHours 0EC8           SunPleaseFixTheDamnClock@phour 002A  
                    __end_of_Timekeeper 04B4                                ?_TimeAvg 0012  
                          TimeAvg@hour1 0012                            TimeAvg@hour2 0016  
                          ?_Timer0_init 0001                          TimeAvg@minute1 0014  
                        TimeAvg@minute2 0018                               __pintcode 0008  
                              ?___awdiv 000A                                ?___awmod 0001  
                              ?___lwmod 0001                  __end_of_UpdateDawnDusk 0D6E  
                 UpdateDawnDusk@pminute 000B                                _DAC_init 0F94  
                              _LATAbits 000F79                                _LATFbits 000F7E  
                              _LATGbits 000F7F                                _LATHbits 000F80  
                              _PIE0bits 000E29                                _PIE2bits 000E2B  
               UpdateDawnDusk@pdawnhour 0001                                _PIR0bits 000E33  
                              _PIR2bits 000E35                 UpdateDawnDusk@pduskhour 0005  
                       ?_UpdateDawnDusk 0001       __size_of_SunPleaseFixTheDamnClock 0354  
                  __size_of_Lights_init 001A               ?_SunPleaseFixTheDamnClock 0022  
                             main@month 0044                              _CM1NCHbits 000ED2  
                            _CM1PCHbits 000ED3                                _LeapYear 0D6E  
                              __Hrparam 0000                                _TimeDiff 0C1C  
                              __Lrparam 0000                        __size_of_TimeAvg 011A  
                      __size_of___awdiv 00C4                        __size_of___awmod 00B0  
                      __size_of___lwmod 0064                              _T0CON0bits 000FD5  
                            _T0CON1bits 000FD6                                _dawndusk 0049  
                              __ptext10 0C1C                                __ptext11 0E5C  
                              __ptext12 0F7A                                __ptext13 0DEC  
                              __ptext14 0FB6                                __ptext15 0F2C  
                              __ptext16 0F94                 LEDarray_disp_bin@number 0001  
                        SmallHours@hour 0001                           __size_of_main 0186  
                              isa$xinst 000000                __size_of_Interrupts_init 000C  
                              int$flags 004B                    __size_of_Timer0_init 0020  
                              main@hour 0047                                main@year 0037  
                            _INTCONbits 000FF2                     TimeAvg@HalfTimeDiff 0020  
           SunPleaseFixTheDamnClock@DST 002E                                intlevel2 0000  
                          _DAC1CON0bits 000EC6                            _DAC1CON1bits 000EC7  
                      ___lwmod@dividend 0001                            LeapYear@year 0006  
                       ___lwmod@divisor 0003                         ___lwmod@counter 0005  
      __end_of_SunPleaseFixTheDamnClock 0808                        ??_UpdateDawnDusk 000E  
