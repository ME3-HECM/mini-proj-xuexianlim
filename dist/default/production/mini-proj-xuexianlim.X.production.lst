

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 11 09:17:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.35
    58                           ; Generated 05/05/2021 GMT
    59                           ; 
    60                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     _PIR2bits	set	3637
    93  0000                     _PIR0bits	set	3635
    94  0000                     _PIE2bits	set	3627
    95  0000                     _PIE0bits	set	3625
    96  0000                     _CM1CON1bits	set	3793
    97  0000                     _CM1CON0bits	set	3792
    98  0000                     _CM1PCHbits	set	3795
    99  0000                     _CM1NCHbits	set	3794
   100  0000                     _DAC1CON1bits	set	3783
   101  0000                     _DAC1CON0bits	set	3782
   102  0000                     _TRISEbits	set	3973
   103  0000                     _TRISBbits	set	3970
   104  0000                     _TRISCbits	set	3971
   105  0000                     _LATEbits	set	3965
   106  0000                     _LATBbits	set	3962
   107  0000                     _LATCbits	set	3963
   108  0000                     _T0CON0bits	set	4053
   109  0000                     _T0CON1bits	set	4054
   110  0000                     _TRISHbits	set	3976
   111  0000                     _TRISAbits	set	3969
   112  0000                     _TRISGbits	set	3975
   113  0000                     _LATFbits	set	3966
   114  0000                     _LATAbits	set	3961
   115  0000                     _LATGbits	set	3967
   116  0000                     _LATHbits	set	3968
   117  0000                     _TMR0L	set	4051
   118  0000                     _TMR0H	set	4052
   119  0000                     _INTCONbits	set	4082
   120  0000                     _TRISFbits	set	3974
   121                           
   122                           	psect	smallconst
   123  000E00                     __psmallconst:
   124                           	callstack 0
   125  000E00  00                 	db	0
   126  000E01                     STR_2:
   127                           
   128                           ; BSR set to: 14
   129  000E01  25                 	db	37
   130  000E02  30                 	db	48	;'0'
   131  000E03  32                 	db	50	;'2'
   132  000E04  64                 	db	100	;'d'
   133  000E05  3A                 	db	58	;':'
   134  000E06  25                 	db	37
   135  000E07  30                 	db	48	;'0'
   136  000E08  32                 	db	50	;'2'
   137  000E09  64                 	db	100	;'d'
   138  000E0A  20                 	db	32
   139  000E0B  25                 	db	37
   140  000E0C  30                 	db	48	;'0'
   141  000E0D  32                 	db	50	;'2'
   142  000E0E  64                 	db	100	;'d'
   143  000E0F  3A                 	db	58	;':'
   144  000E10  25                 	db	37
   145  000E11  30                 	db	48	;'0'
   146  000E12  32                 	db	50	;'2'
   147  000E13  64                 	db	100	;'d'
   148  000E14  20                 	db	32
   149  000E15  25                 	db	37
   150  000E16  64                 	db	100	;'d'
   151  000E17  20                 	db	32
   152  000E18  25                 	db	37
   153  000E19  64                 	db	100	;'d'
   154  000E1A  00                 	db	0
   155  000E1B                     STR_1:
   156                           
   157                           ; BSR set to: 14
   158  000E1B  25                 	db	37
   159  000E1C  30                 	db	48	;'0'
   160  000E1D  32                 	db	50	;'2'
   161  000E1E  64                 	db	100	;'d'
   162  000E1F  2F                 	db	47
   163  000E20  25                 	db	37
   164  000E21  30                 	db	48	;'0'
   165  000E22  32                 	db	50	;'2'
   166  000E23  64                 	db	100	;'d'
   167  000E24  2F                 	db	47
   168  000E25  25                 	db	37
   169  000E26  64                 	db	100	;'d'
   170  000E27  20                 	db	32
   171  000E28  25                 	db	37
   172  000E29  30                 	db	48	;'0'
   173  000E2A  32                 	db	50	;'2'
   174  000E2B  64                 	db	100	;'d'
   175  000E2C  3A                 	db	58	;':'
   176  000E2D  25                 	db	37
   177  000E2E  30                 	db	48	;'0'
   178  000E2F  32                 	db	50	;'2'
   179  000E30  64                 	db	100	;'d'
   180  000E31  00                 	db	0
   181  000E32  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186  002EB8                     __pcinit:
   187                           	callstack 0
   188  002EB8                     start_initialization:
   189                           	callstack 0
   190  002EB8                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Clear objects allocated to BANK0 (42 bytes)
   194  002EB8  EE00  F0BD         	lfsr	0,__pbssBANK0
   195  002EBC  0E2A               	movlw	42
   196  002EBE                     clear_0:
   197  002EBE  6AEE               	clrf	postinc0,c
   198  002EC0  06E8               	decf	wreg,f,c
   199  002EC2  E1FD               	bnz	clear_0
   200  002EC4                     end_of_initialization:
   201                           	callstack 0
   202  002EC4                     __end_of__initialization:
   203                           	callstack 0
   204  002EC4  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   205  002EC6  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   206  002EC8  0100               	movlb	0
   207  002ECA  EF2B  F00E         	goto	_main	;jump to C main() function
   208                           
   209                           	psect	bssBANK0
   210  0000BD                     __pbssBANK0:
   211                           	callstack 0
   212  0000BD                     _nout:
   213                           	callstack 0
   214  0000BD                     	ds	2
   215  0000BF                     _width:
   216                           	callstack 0
   217  0000BF                     	ds	2
   218  0000C1                     _prec:
   219                           	callstack 0
   220  0000C1                     	ds	2
   221  0000C3                     _flags:
   222                           	callstack 0
   223  0000C3                     	ds	2
   224  0000C5                     _dawndusk:
   225                           	callstack 0
   226  0000C5                     	ds	1
   227  0000C6                     _minutehand:
   228                           	callstack 0
   229  0000C6                     	ds	1
   230  0000C7                     _dbuf:
   231                           	callstack 0
   232  0000C7                     	ds	32
   233                           
   234                           	psect	cstackBANK0
   235  000060                     __pcstackBANK0:
   236                           	callstack 0
   237  000060                     ?_sprintf:
   238                           	callstack 0
   239  000060                     sprintf@s:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x0
   243  000060                     	ds	2
   244  000062                     sprintf@fmt:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x2
   248  000062                     	ds	14
   249  000070                     sprintf@ap:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x10
   253  000070                     	ds	2
   254  000072                     sprintf@f:
   255                           	callstack 0
   256                           
   257                           ; 6 bytes @ 0x12
   258  000072                     	ds	6
   259  000078                     Display@year:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x18
   263  000078                     	ds	2
   264  00007A                     Display@month:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x1A
   268  00007A                     	ds	1
   269  00007B                     Display@day:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x1B
   273  00007B                     	ds	1
   274  00007C                     Display@hour:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x1C
   278  00007C                     	ds	2
   279  00007E                     Display@minute:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x1E
   283  00007E                     	ds	2
   284  000080                     Display@dayofweek:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x20
   288  000080                     	ds	1
   289  000081                     Display@DST:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x21
   293  000081                     	ds	1
   294  000082                     Display@dawnhour:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x22
   298  000082                     	ds	2
   299  000084                     Display@dawnminute:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x24
   303  000084                     	ds	2
   304  000086                     Display@duskhour:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x26
   308  000086                     	ds	2
   309  000088                     Display@duskminute:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x28
   313  000088                     	ds	2
   314  00008A                     Display@string:
   315                           	callstack 0
   316                           
   317                           ; 16 bytes @ 0x2A
   318  00008A                     	ds	16
   319  00009A                     Display@string2:
   320                           	callstack 0
   321                           
   322                           ; 15 bytes @ 0x3A
   323  00009A                     	ds	15
   324  0000A9                     Display@iyear:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x49
   328  0000A9                     	ds	2
   329  0000AB                     main@year:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x4B
   333  0000AB                     	ds	2
   334  0000AD                     main@dayofweek:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x4D
   338  0000AD                     	ds	1
   339  0000AE                     main@DST:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x4E
   343  0000AE                     	ds	1
   344  0000AF                     main@dawnminute:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x4F
   348  0000AF                     	ds	2
   349  0000B1                     main@duskminute:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x51
   353  0000B1                     	ds	2
   354  0000B3                     main@duskhour:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x53
   358  0000B3                     	ds	2
   359  0000B5                     main@day:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x55
   363  0000B5                     	ds	1
   364  0000B6                     main@dawnhour:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x56
   368  0000B6                     	ds	2
   369  0000B8                     main@month:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x58
   373  0000B8                     	ds	1
   374  0000B9                     main@minute:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x59
   378  0000B9                     	ds	2
   379  0000BB                     main@hour:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x5B
   383  0000BB                     	ds	2
   384                           
   385                           	psect	cstackCOMRAM
   386  000001                     __pcstackCOMRAM:
   387                           	callstack 0
   388  000001                     ?_TimeDiff:
   389                           	callstack 0
   390  000001                     ?_strlen:
   391                           	callstack 0
   392  000001                     ?_isdigit:
   393                           	callstack 0
   394  000001                     ?_isspace:
   395                           	callstack 0
   396  000001                     ?___wmul:
   397                           	callstack 0
   398  000001                     ?___awmod:
   399                           	callstack 0
   400  000001                     ?___lwmod:
   401                           	callstack 0
   402  000001                     ?___aodiv:
   403                           	callstack 0
   404  000001                     ?___aomod:
   405                           	callstack 0
   406  000001                     LCD_sendnibble@number:
   407                           	callstack 0
   408  000001                     LEDarray_disp_bin@number:
   409                           	callstack 0
   410  000001                     SmallHours@hour:
   411                           	callstack 0
   412  000001                     TimeDiff@hour1:
   413                           	callstack 0
   414  000001                     UpdateDawnDusk@pdawnhour:
   415                           	callstack 0
   416  000001                     ___wmul@multiplier:
   417                           	callstack 0
   418  000001                     ___awmod@dividend:
   419                           	callstack 0
   420  000001                     ___lwmod@dividend:
   421                           	callstack 0
   422  000001                     isdigit@c:
   423                           	callstack 0
   424  000001                     isspace@c:
   425                           	callstack 0
   426  000001                     fputc@c:
   427                           	callstack 0
   428  000001                     strlen@s:
   429                           	callstack 0
   430  000001                     ___aodiv@dividend:
   431                           	callstack 0
   432  000001                     ___aomod@dividend:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0x0
   436  000001                     	ds	1
   437  000002                     LCD_sendbyte@type:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x1
   441  000002                     	ds	1
   442  000003                     ??_isdigit:
   443  000003                     ??_isspace:
   444  000003                     LCD_sendbyte@Byte:
   445                           	callstack 0
   446  000003                     SmallHours@minute:
   447                           	callstack 0
   448  000003                     TimeDiff@minute1:
   449                           	callstack 0
   450  000003                     UpdateDawnDusk@pdawnminute:
   451                           	callstack 0
   452  000003                     ___wmul@multiplicand:
   453                           	callstack 0
   454  000003                     ___awmod@divisor:
   455                           	callstack 0
   456  000003                     ___lwmod@divisor:
   457                           	callstack 0
   458  000003                     fputc@fp:
   459                           	callstack 0
   460  000003                     strlen@a:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x2
   464  000003                     	ds	1
   465  000004                     ??_LCD_Init:
   466  000004                     LCD_setline@line:
   467                           	callstack 0
   468  000004                     LCD_sendstring@string:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x3
   472  000004                     	ds	1
   473  000005                     ??_fputc:
   474  000005                     ___awmod@counter:
   475                           	callstack 0
   476  000005                     ___lwmod@counter:
   477                           	callstack 0
   478  000005                     SmallHours@dawnhour:
   479                           	callstack 0
   480  000005                     TimeDiff@hour2:
   481                           	callstack 0
   482  000005                     UpdateDawnDusk@pduskhour:
   483                           	callstack 0
   484  000005                     ___wmul@product:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x4
   488  000005                     	ds	1
   489  000006                     ___awmod@sign:
   490                           	callstack 0
   491  000006                     LeapYear@year:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x5
   495  000006                     	ds	1
   496  000007                     _isspace$1864:
   497                           	callstack 0
   498  000007                     TimeDiff@minute2:
   499                           	callstack 0
   500  000007                     UpdateDawnDusk@pduskminute:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x6
   504  000007                     	ds	1
   505  000008                     ??_LeapYear:
   506  000008                     ?_atoi:
   507                           	callstack 0
   508  000008                     atoi@s:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x7
   512  000008                     	ds	1
   513  000009                     ??_TimeDiff:
   514  000009                     UpdateDawnDusk@phour:
   515                           	callstack 0
   516  000009                     ___aodiv@divisor:
   517                           	callstack 0
   518  000009                     ___aomod@divisor:
   519                           	callstack 0
   520                           
   521                           ; 8 bytes @ 0x8
   522  000009                     	ds	1
   523  00000A                     ??_atoi:
   524  00000A                     ?___awdiv:
   525                           	callstack 0
   526  00000A                     LeapYear@leapyear:
   527                           	callstack 0
   528  00000A                     ___awdiv@dividend:
   529                           	callstack 0
   530  00000A                     fputs@s:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x9
   534  00000A                     	ds	1
   535  00000B                     Timekeeper@pyear:
   536                           	callstack 0
   537  00000B                     UpdateDawnDusk@pminute:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0xA
   541  00000B                     	ds	1
   542  00000C                     ___awdiv@divisor:
   543                           	callstack 0
   544  00000C                     fputs@fp:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0xB
   548  00000C                     	ds	1
   549  00000D                     UpdateDawnDusk@DST:
   550                           	callstack 0
   551  00000D                     Timekeeper@pmonth:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xC
   555  00000D                     	ds	1
   556  00000E                     ??_UpdateDawnDusk:
   557  00000E                     ___awdiv@counter:
   558                           	callstack 0
   559  00000E                     fputs@c:
   560                           	callstack 0
   561  00000E                     atoi@neg:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0xD
   565  00000E                     	ds	1
   566  00000F                     ___awdiv@sign:
   567                           	callstack 0
   568  00000F                     Timekeeper@pday:
   569                           	callstack 0
   570  00000F                     fputs@i:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xE
   574  00000F                     	ds	1
   575  000010                     ___awdiv@quotient:
   576                           	callstack 0
   577  000010                     _atoi$1846:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xF
   581  000010                     	ds	1
   582  000011                     ?_pad:
   583                           	callstack 0
   584  000011                     ___aodiv@counter:
   585                           	callstack 0
   586  000011                     ___aomod@counter:
   587                           	callstack 0
   588  000011                     Timekeeper@phour:
   589                           	callstack 0
   590  000011                     pad@fp:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x10
   594  000011                     	ds	1
   595  000012                     ___aodiv@sign:
   596                           	callstack 0
   597  000012                     ___aomod@sign:
   598                           	callstack 0
   599  000012                     TimeAvg@hour1:
   600                           	callstack 0
   601  000012                     _atoi$1848:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x11
   605  000012                     	ds	1
   606  000013                     ?_abs:
   607                           	callstack 0
   608  000013                     Timekeeper@pminute:
   609                           	callstack 0
   610  000013                     pad@buf:
   611                           	callstack 0
   612  000013                     abs@a:
   613                           	callstack 0
   614  000013                     ___aodiv@quotient:
   615                           	callstack 0
   616                           
   617                           ; 8 bytes @ 0x12
   618  000013                     	ds	1
   619  000014                     _atoi$1847:
   620                           	callstack 0
   621  000014                     TimeAvg@minute1:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x13
   625  000014                     	ds	1
   626  000015                     ??_abs:
   627  000015                     Timekeeper@pdayofweek:
   628                           	callstack 0
   629  000015                     pad@p:
   630                           	callstack 0
   631  000015                     atoi@n:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x14
   635  000015                     	ds	1
   636  000016                     TimeAvg@hour2:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x15
   640  000016                     	ds	1
   641  000017                     ??_pad:
   642  000017                     Timekeeper@pDST:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x16
   646  000017                     	ds	1
   647  000018                     TimeAvg@minute2:
   648                           	callstack 0
   649  000018                     pad@i:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x17
   653  000018                     	ds	1
   654  000019                     
   655                           ; 1 bytes @ 0x18
   656  000019                     	ds	1
   657  00001A                     TimeAvg@pavghour:
   658                           	callstack 0
   659  00001A                     pad@w:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x19
   663  00001A                     	ds	2
   664  00001C                     ?_dtoa:
   665                           	callstack 0
   666  00001C                     TimeAvg@pavgminute:
   667                           	callstack 0
   668  00001C                     dtoa@fp:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x1B
   672  00001C                     	ds	2
   673  00001E                     dtoa@d:
   674                           	callstack 0
   675                           
   676                           ; 8 bytes @ 0x1D
   677  00001E                     	ds	2
   678  000020                     TimeAvg@HalfTimeDiff:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x1F
   682  000020                     	ds	2
   683  000022                     SunPleaseFixTheDamnClock@pdawnhour:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x21
   687  000022                     	ds	2
   688  000024                     SunPleaseFixTheDamnClock@pdawnminute:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x23
   692  000024                     	ds	2
   693  000026                     ??_dtoa:
   694  000026                     SunPleaseFixTheDamnClock@pduskhour:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x25
   698  000026                     	ds	2
   699  000028                     SunPleaseFixTheDamnClock@pduskminute:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x27
   703  000028                     	ds	2
   704  00002A                     SunPleaseFixTheDamnClock@phour:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x29
   708  00002A                     	ds	2
   709  00002C                     SunPleaseFixTheDamnClock@pminute:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x2B
   713  00002C                     	ds	2
   714  00002E                     SunPleaseFixTheDamnClock@DST:
   715                           	callstack 0
   716  00002E                     _dtoa$1811:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x2D
   720  00002E                     	ds	1
   721  00002F                     
   722                           ; 1 bytes @ 0x2E
   723  00002F                     	ds	1
   724  000030                     dtoa@p:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x2F
   728  000030                     	ds	1
   729  000031                     SunPleaseFixTheDamnClock@avghour:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x30
   733  000031                     	ds	1
   734  000032                     dtoa@w:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x31
   738  000032                     	ds	1
   739  000033                     SunPleaseFixTheDamnClock@avgminute:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x32
   743  000033                     	ds	1
   744  000034                     dtoa@s:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x33
   748  000034                     	ds	1
   749  000035                     SunPleaseFixTheDamnClock@timedifference:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x34
   753  000035                     	ds	1
   754  000036                     dtoa@n:
   755                           	callstack 0
   756                           
   757                           ; 8 bytes @ 0x35
   758  000036                     	ds	8
   759  00003E                     dtoa@i:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x3D
   763  00003E                     	ds	2
   764  000040                     ?_vfpfcnvrt:
   765                           	callstack 0
   766  000040                     vfpfcnvrt@fp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x3F
   770  000040                     	ds	2
   771  000042                     vfpfcnvrt@fmt:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x41
   775  000042                     	ds	2
   776  000044                     vfpfcnvrt@ap:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x43
   780  000044                     	ds	2
   781  000046                     ??_vfpfcnvrt:
   782                           
   783                           ; 1 bytes @ 0x45
   784  000046                     	ds	4
   785  00004A                     vfpfcnvrt@ll:
   786                           	callstack 0
   787                           
   788                           ; 8 bytes @ 0x49
   789  00004A                     	ds	8
   790  000052                     vfpfcnvrt@done:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x51
   794  000052                     	ds	2
   795  000054                     _vfpfcnvrt$1826:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x53
   799  000054                     	ds	2
   800  000056                     ?_vfprintf:
   801                           	callstack 0
   802  000056                     vfprintf@fp:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x55
   806  000056                     	ds	2
   807  000058                     vfprintf@fmt:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x57
   811  000058                     	ds	2
   812  00005A                     vfprintf@ap:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x59
   816  00005A                     	ds	2
   817  00005C                     vfprintf@cfmt:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x5B
   821  00005C                     	ds	2
   822  00005E                     
   823                           ; 1 bytes @ 0x5D
   824 ;;
   825 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   826 ;;
   827 ;; *************** function _main *****************
   828 ;; Defined at:
   829 ;;		line 18 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  hour            2   91[BANK0 ] int 
   834 ;;  minute          2   89[BANK0 ] int 
   835 ;;  dawnhour        2   86[BANK0 ] int 
   836 ;;  duskhour        2   83[BANK0 ] int 
   837 ;;  duskminute      2   81[BANK0 ] int 
   838 ;;  dawnminute      2   79[BANK0 ] int 
   839 ;;  year            2   75[BANK0 ] unsigned int 
   840 ;;  month           1   88[BANK0 ] unsigned char 
   841 ;;  day             1   85[BANK0 ] unsigned char 
   842 ;;  DST             1   78[BANK0 ] unsigned char 
   843 ;;  dayofweek       1   77[BANK0 ] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   854 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   856 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   857 ;;Total ram usage:       18 bytes
   858 ;; Hardware stack levels required when called: 10
   859 ;; This function calls:
   860 ;;		_Comp1_init
   861 ;;		_Display
   862 ;;		_Interrupts_init
   863 ;;		_LCD_Init
   864 ;;		_LEDarray_disp_bin
   865 ;;		_Lights_init
   866 ;;		_SmallHours
   867 ;;		_SunPleaseFixTheDamnClock
   868 ;;		_Timekeeper
   869 ;;		_Timer0_init
   870 ;;		_UpdateDawnDusk
   871 ;; This function is called by:
   872 ;;		Startup code after reset
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text0
   877  001C56                     __ptext0:
   878                           	callstack 0
   879  001C56                     _main:
   880                           	callstack 21
   881  001C56                     
   882                           ;main.c: 20:     unsigned int year = 2021;
   883  001C56  0E07               	movlw	7
   884  001C58  0100               	movlb	0	; () banked
   885  001C5A  6FAC               	movwf	(main@year+1)& (0+255),b
   886  001C5C  0EE5               	movlw	229
   887  001C5E  6FAB               	movwf	main@year& (0+255),b
   888                           
   889                           ;main.c: 21:     char month = 11;
   890  001C60  0E0B               	movlw	11
   891  001C62  6FB8               	movwf	main@month& (0+255),b
   892                           
   893                           ;main.c: 22:     char day = 11;
   894  001C64  0E0B               	movlw	11
   895  001C66  6FB5               	movwf	main@day& (0+255),b
   896                           
   897                           ;main.c: 23:     int hour = 9;
   898  001C68  0E00               	movlw	0
   899  001C6A  6FBC               	movwf	(main@hour+1)& (0+255),b
   900  001C6C  0E09               	movlw	9
   901  001C6E  6FBB               	movwf	main@hour& (0+255),b
   902                           
   903                           ;main.c: 24:     int minute = 00;
   904  001C70  0E00               	movlw	0
   905  001C72  6FBA               	movwf	(main@minute+1)& (0+255),b
   906  001C74  0E00               	movlw	0
   907  001C76  6FB9               	movwf	main@minute& (0+255),b
   908                           
   909                           ;main.c: 25:     char dayofweek = 4;
   910  001C78  0E04               	movlw	4
   911  001C7A  6FAD               	movwf	main@dayofweek& (0+255),b
   912                           
   913                           ;main.c: 26:     char DST = 0;
   914  001C7C  0E00               	movlw	0
   915  001C7E  6FAE               	movwf	main@DST& (0+255),b
   916                           
   917                           ;main.c: 27:     int dawnhour = 7;
   918  001C80  0E00               	movlw	0
   919  001C82  6FB7               	movwf	(main@dawnhour+1)& (0+255),b
   920  001C84  0E07               	movlw	7
   921  001C86  6FB6               	movwf	main@dawnhour& (0+255),b
   922                           
   923                           ;main.c: 28:     int dawnminute = 0;
   924  001C88  0E00               	movlw	0
   925  001C8A  6FB0               	movwf	(main@dawnminute+1)& (0+255),b
   926  001C8C  0E00               	movlw	0
   927  001C8E  6FAF               	movwf	main@dawnminute& (0+255),b
   928                           
   929                           ;main.c: 29:     int duskhour = 17;
   930  001C90  0E00               	movlw	0
   931  001C92  6FB4               	movwf	(main@duskhour+1)& (0+255),b
   932  001C94  0E11               	movlw	17
   933  001C96  6FB3               	movwf	main@duskhour& (0+255),b
   934                           
   935                           ;main.c: 30:     int duskminute = 0;
   936  001C98  0E00               	movlw	0
   937  001C9A  6FB2               	movwf	(main@duskminute+1)& (0+255),b
   938  001C9C  0E00               	movlw	0
   939  001C9E  6FB1               	movwf	main@duskminute& (0+255),b
   940  001CA0                     
   941                           ; BSR set to: 0
   942                           ;main.c: 33:     Lights_init();
   943  001CA0  EC4F  F017         	call	_Lights_init	;wreg free
   944                           
   945                           ;main.c: 34:     Timer0_init();
   946  001CA4  EC3F  F017         	call	_Timer0_init	;wreg free
   947                           
   948                           ;main.c: 35:     Comp1_init();
   949  001CA8  EC15  F017         	call	_Comp1_init	;wreg free
   950  001CAC                     
   951                           ;main.c: 36:     Interrupts_init();
   952  001CAC  EC78  F017         	call	_Interrupts_init	;wreg free
   953                           
   954                           ;main.c: 37:     dawndusk = 0;
   955  001CB0  0E00               	movlw	0
   956  001CB2  0100               	movlb	0	; () banked
   957  001CB4  6FC5               	movwf	_dawndusk& (0+255),b
   958  001CB6                     
   959                           ; BSR set to: 0
   960                           ;main.c: 38:     LCD_Init();
   961  001CB6  EC72  F014         	call	_LCD_Init	;wreg free
   962  001CBA                     l2919:
   963                           
   964                           ;main.c: 41:         if (minutehand) {
   965  001CBA  0100               	movlb	0	; () banked
   966  001CBC  51C6               	movf	_minutehand& (0+255),w,b
   967  001CBE  B4D8               	btfsc	status,2,c
   968  001CC0  EF64  F00E         	goto	u3051
   969  001CC4  EF66  F00E         	goto	u3050
   970  001CC8                     u3051:
   971  001CC8  EF87  F00E         	goto	l2925
   972  001CCC                     u3050:
   973  001CCC                     
   974                           ; BSR set to: 0
   975                           ;main.c: 42:             Timekeeper(&year, &month, &day, &hour, &minute, &dayofweek, &DS
      +                          T);
   976  001CCC  0EAB               	movlw	low main@year
   977  001CCE  6E0B               	movwf	Timekeeper@pyear^0,c
   978  001CD0  0E00               	movlw	high main@year
   979  001CD2  6E0C               	movwf	(Timekeeper@pyear+1)^0,c
   980  001CD4  0EB8               	movlw	low main@month
   981  001CD6  6E0D               	movwf	Timekeeper@pmonth^0,c
   982  001CD8  0E00               	movlw	high main@month
   983  001CDA  6E0E               	movwf	(Timekeeper@pmonth+1)^0,c
   984  001CDC  0EB5               	movlw	low main@day
   985  001CDE  6E0F               	movwf	Timekeeper@pday^0,c
   986  001CE0  0E00               	movlw	high main@day
   987  001CE2  6E10               	movwf	(Timekeeper@pday+1)^0,c
   988  001CE4  0EBB               	movlw	low main@hour
   989  001CE6  6E11               	movwf	Timekeeper@phour^0,c
   990  001CE8  0E00               	movlw	high main@hour
   991  001CEA  6E12               	movwf	(Timekeeper@phour+1)^0,c
   992  001CEC  0EB9               	movlw	low main@minute
   993  001CEE  6E13               	movwf	Timekeeper@pminute^0,c
   994  001CF0  0E00               	movlw	high main@minute
   995  001CF2  6E14               	movwf	(Timekeeper@pminute+1)^0,c
   996  001CF4  0EAD               	movlw	low main@dayofweek
   997  001CF6  6E15               	movwf	Timekeeper@pdayofweek^0,c
   998  001CF8  0E00               	movlw	high main@dayofweek
   999  001CFA  6E16               	movwf	(Timekeeper@pdayofweek+1)^0,c
  1000  001CFC  0EAE               	movlw	low main@DST
  1001  001CFE  6E17               	movwf	Timekeeper@pDST^0,c
  1002  001D00  0E00               	movlw	high main@DST
  1003  001D02  6E18               	movwf	(Timekeeper@pDST+1)^0,c
  1004  001D04  EC1A  F007         	call	_Timekeeper	;wreg free
  1005  001D08                     
  1006                           ;main.c: 43:             minutehand = 0;
  1007  001D08  0E00               	movlw	0
  1008  001D0A  0100               	movlb	0	; () banked
  1009  001D0C  6FC6               	movwf	_minutehand& (0+255),b
  1010  001D0E                     l2925:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;main.c: 46:         LEDarray_disp_bin(hour);
  1014  001D0E  C0BB  F001         	movff	main@hour,LEDarray_disp_bin@number
  1015  001D12  C0BC  F002         	movff	main@hour+1,LEDarray_disp_bin@number+1
  1016  001D16  ECF1  F014         	call	_LEDarray_disp_bin	;wreg free
  1017  001D1A                     
  1018                           ;main.c: 48:         SmallHours(hour, minute, dawnhour);
  1019  001D1A  C0BB  F001         	movff	main@hour,SmallHours@hour
  1020  001D1E  C0BC  F002         	movff	main@hour+1,SmallHours@hour+1
  1021  001D22  C0B9  F003         	movff	main@minute,SmallHours@minute
  1022  001D26  C0BA  F004         	movff	main@minute+1,SmallHours@minute+1
  1023  001D2A  C0B6  F005         	movff	main@dawnhour,SmallHours@dawnhour
  1024  001D2E  C0B7  F006         	movff	main@dawnhour+1,SmallHours@dawnhour+1
  1025  001D32  EC29  F015         	call	_SmallHours	;wreg free
  1026  001D36                     
  1027                           ;main.c: 50:         if (dawndusk) {
  1028  001D36  0100               	movlb	0	; () banked
  1029  001D38  51C5               	movf	_dawndusk& (0+255),w,b
  1030  001D3A  B4D8               	btfsc	status,2,c
  1031  001D3C  EFA2  F00E         	goto	u3061
  1032  001D40  EFA4  F00E         	goto	u3060
  1033  001D44                     u3061:
  1034  001D44  EFC3  F00E         	goto	l2935
  1035  001D48                     u3060:
  1036  001D48                     
  1037                           ; BSR set to: 0
  1038                           ;main.c: 51:             UpdateDawnDusk(&dawnhour, &dawnminute, &duskhour, &duskminute, 
      +                          &hour, &minute, DST);
  1039  001D48  0EB6               	movlw	low main@dawnhour
  1040  001D4A  6E01               	movwf	UpdateDawnDusk@pdawnhour^0,c
  1041  001D4C  0E00               	movlw	high main@dawnhour
  1042  001D4E  6E02               	movwf	(UpdateDawnDusk@pdawnhour+1)^0,c
  1043  001D50  0EAF               	movlw	low main@dawnminute
  1044  001D52  6E03               	movwf	UpdateDawnDusk@pdawnminute^0,c
  1045  001D54  0E00               	movlw	high main@dawnminute
  1046  001D56  6E04               	movwf	(UpdateDawnDusk@pdawnminute+1)^0,c
  1047  001D58  0EB3               	movlw	low main@duskhour
  1048  001D5A  6E05               	movwf	UpdateDawnDusk@pduskhour^0,c
  1049  001D5C  0E00               	movlw	high main@duskhour
  1050  001D5E  6E06               	movwf	(UpdateDawnDusk@pduskhour+1)^0,c
  1051  001D60  0EB1               	movlw	low main@duskminute
  1052  001D62  6E07               	movwf	UpdateDawnDusk@pduskminute^0,c
  1053  001D64  0E00               	movlw	high main@duskminute
  1054  001D66  6E08               	movwf	(UpdateDawnDusk@pduskminute+1)^0,c
  1055  001D68  0EBB               	movlw	low main@hour
  1056  001D6A  6E09               	movwf	UpdateDawnDusk@phour^0,c
  1057  001D6C  0E00               	movlw	high main@hour
  1058  001D6E  6E0A               	movwf	(UpdateDawnDusk@phour+1)^0,c
  1059  001D70  0EB9               	movlw	low main@minute
  1060  001D72  6E0B               	movwf	UpdateDawnDusk@pminute^0,c
  1061  001D74  0E00               	movlw	high main@minute
  1062  001D76  6E0C               	movwf	(UpdateDawnDusk@pminute+1)^0,c
  1063  001D78  C0AE  F00D         	movff	main@DST,UpdateDawnDusk@DST
  1064  001D7C  EC1F  F014         	call	_UpdateDawnDusk	;wreg free
  1065  001D80                     
  1066                           ;main.c: 52:             dawndusk = 0;
  1067  001D80  0E00               	movlw	0
  1068  001D82  0100               	movlb	0	; () banked
  1069  001D84  6FC5               	movwf	_dawndusk& (0+255),b
  1070  001D86                     l2935:
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;main.c: 55:         if (hour == 12 && minute == 0) {
  1074  001D86  0E0C               	movlw	12
  1075  001D88  19BB               	xorwf	main@hour& (0+255),w,b
  1076  001D8A  11BC               	iorwf	(main@hour+1)& (0+255),w,b
  1077  001D8C  A4D8               	btfss	status,2,c
  1078  001D8E  EFCB  F00E         	goto	u3071
  1079  001D92  EFCD  F00E         	goto	u3070
  1080  001D96                     u3071:
  1081  001D96  EFF2  F00E         	goto	l2941
  1082  001D9A                     u3070:
  1083  001D9A                     
  1084                           ; BSR set to: 0
  1085  001D9A  51B9               	movf	main@minute& (0+255),w,b
  1086  001D9C  11BA               	iorwf	(main@minute+1)& (0+255),w,b
  1087  001D9E  A4D8               	btfss	status,2,c
  1088  001DA0  EFD4  F00E         	goto	u3081
  1089  001DA4  EFD6  F00E         	goto	u3080
  1090  001DA8                     u3081:
  1091  001DA8  EFF2  F00E         	goto	l2941
  1092  001DAC                     u3080:
  1093  001DAC                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 56:             SunPleaseFixTheDamnClock(&dawnhour, &dawnminute, &duskhour, &du
      +                          skminute, &hour, &minute, DST);
  1096  001DAC  0EB6               	movlw	low main@dawnhour
  1097  001DAE  6E22               	movwf	SunPleaseFixTheDamnClock@pdawnhour^0,c
  1098  001DB0  0E00               	movlw	high main@dawnhour
  1099  001DB2  6E23               	movwf	(SunPleaseFixTheDamnClock@pdawnhour+1)^0,c
  1100  001DB4  0EAF               	movlw	low main@dawnminute
  1101  001DB6  6E24               	movwf	SunPleaseFixTheDamnClock@pdawnminute^0,c
  1102  001DB8  0E00               	movlw	high main@dawnminute
  1103  001DBA  6E25               	movwf	(SunPleaseFixTheDamnClock@pdawnminute+1)^0,c
  1104  001DBC  0EB3               	movlw	low main@duskhour
  1105  001DBE  6E26               	movwf	SunPleaseFixTheDamnClock@pduskhour^0,c
  1106  001DC0  0E00               	movlw	high main@duskhour
  1107  001DC2  6E27               	movwf	(SunPleaseFixTheDamnClock@pduskhour+1)^0,c
  1108  001DC4  0EB1               	movlw	low main@duskminute
  1109  001DC6  6E28               	movwf	SunPleaseFixTheDamnClock@pduskminute^0,c
  1110  001DC8  0E00               	movlw	high main@duskminute
  1111  001DCA  6E29               	movwf	(SunPleaseFixTheDamnClock@pduskminute+1)^0,c
  1112  001DCC  0EBB               	movlw	low main@hour
  1113  001DCE  6E2A               	movwf	SunPleaseFixTheDamnClock@phour^0,c
  1114  001DD0  0E00               	movlw	high main@hour
  1115  001DD2  6E2B               	movwf	(SunPleaseFixTheDamnClock@phour+1)^0,c
  1116  001DD4  0EB9               	movlw	low main@minute
  1117  001DD6  6E2C               	movwf	SunPleaseFixTheDamnClock@pminute^0,c
  1118  001DD8  0E00               	movlw	high main@minute
  1119  001DDA  6E2D               	movwf	(SunPleaseFixTheDamnClock@pminute+1)^0,c
  1120  001DDC  C0AE  F02E         	movff	main@DST,SunPleaseFixTheDamnClock@DST
  1121  001DE0  EC10  F00B         	call	_SunPleaseFixTheDamnClock	;wreg free
  1122  001DE4                     l2941:
  1123                           
  1124                           ;main.c: 59:         Display(year, month, day, hour, minute, dayofweek, DST, dawnhour, d
      +                          awnminute, duskhour, duskminute);
  1125  001DE4  C0AB  F078         	movff	main@year,Display@year
  1126  001DE8  C0AC  F079         	movff	main@year+1,Display@year+1
  1127  001DEC  C0B8  F07A         	movff	main@month,Display@month
  1128  001DF0  C0B5  F07B         	movff	main@day,Display@day
  1129  001DF4  C0BB  F07C         	movff	main@hour,Display@hour
  1130  001DF8  C0BC  F07D         	movff	main@hour+1,Display@hour+1
  1131  001DFC  C0B9  F07E         	movff	main@minute,Display@minute
  1132  001E00  C0BA  F07F         	movff	main@minute+1,Display@minute+1
  1133  001E04  C0AD  F080         	movff	main@dayofweek,Display@dayofweek
  1134  001E08  C0AE  F081         	movff	main@DST,Display@DST
  1135  001E0C  C0B6  F082         	movff	main@dawnhour,Display@dawnhour
  1136  001E10  C0B7  F083         	movff	main@dawnhour+1,Display@dawnhour+1
  1137  001E14  C0AF  F084         	movff	main@dawnminute,Display@dawnminute
  1138  001E18  C0B0  F085         	movff	main@dawnminute+1,Display@dawnminute+1
  1139  001E1C  C0B3  F086         	movff	main@duskhour,Display@duskhour
  1140  001E20  C0B4  F087         	movff	main@duskhour+1,Display@duskhour+1
  1141  001E24  C0B1  F088         	movff	main@duskminute,Display@duskminute
  1142  001E28  C0B2  F089         	movff	main@duskminute+1,Display@duskminute+1
  1143  001E2C  ECCA  F013         	call	_Display	;wreg free
  1144  001E30  EF5D  F00E         	goto	l2919
  1145  001E34  EF32  F000         	goto	start
  1146  001E38                     __end_of_main:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _UpdateDawnDusk *****************
  1150 ;; Defined at:
  1151 ;;		line 160 in file "timers.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  pdawnhour       2    0[COMRAM] PTR int 
  1154 ;;		 -> main@dawnhour(2), 
  1155 ;;  pdawnminute     2    2[COMRAM] PTR int 
  1156 ;;		 -> main@dawnminute(2), 
  1157 ;;  pduskhour       2    4[COMRAM] PTR int 
  1158 ;;		 -> main@duskhour(2), 
  1159 ;;  pduskminute     2    6[COMRAM] PTR int 
  1160 ;;		 -> main@duskminute(2), 
  1161 ;;  phour           2    8[COMRAM] PTR int 
  1162 ;;		 -> main@hour(2), 
  1163 ;;  pminute         2   10[COMRAM] PTR int 
  1164 ;;		 -> main@minute(2), 
  1165 ;;  DST             1   12[COMRAM] unsigned char 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1177 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1181 ;;Total ram usage:       15 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text1
  1192  00283E                     __ptext1:
  1193                           	callstack 0
  1194  00283E                     _UpdateDawnDusk:
  1195                           	callstack 29
  1196  00283E                     
  1197                           ;timers.c: 160: void UpdateDawnDusk(int *pdawnhour, int *pdawnminute, int *pduskhour, in
      +                          t *pduskminute, int *phour, int *pminute, char DST);timers.c: 161: {;timers.c: 162:     
      +                          if (dawndusk == 1) {
  1198  00283E  0100               	movlb	0	; () banked
  1199  002840  05C5               	decf	_dawndusk& (0+255),w,b
  1200  002842  A4D8               	btfss	status,2,c
  1201  002844  EF26  F014         	goto	u2911
  1202  002848  EF28  F014         	goto	u2910
  1203  00284C                     u2911:
  1204  00284C  EF48  F014         	goto	l2831
  1205  002850                     u2910:
  1206  002850                     
  1207                           ; BSR set to: 0
  1208                           ;timers.c: 163:         *pdawnhour = *phour - DST;
  1209  002850  500D               	movf	UpdateDawnDusk@DST^0,w,c
  1210  002852  C009  FFD9         	movff	UpdateDawnDusk@phour,fsr2l
  1211  002856  C00A  FFDA         	movff	UpdateDawnDusk@phour+1,fsr2h
  1212  00285A  CFDE F00E          	movff	postinc2,??_UpdateDawnDusk
  1213  00285E  CFDD F00F          	movff	postdec2,??_UpdateDawnDusk+1
  1214  002862  5E0E               	subwf	??_UpdateDawnDusk^0,f,c
  1215  002864  0E00               	movlw	0
  1216  002866  5A0F               	subwfb	(??_UpdateDawnDusk+1)^0,f,c
  1217  002868  C001  FFD9         	movff	UpdateDawnDusk@pdawnhour,fsr2l
  1218  00286C  C002  FFDA         	movff	UpdateDawnDusk@pdawnhour+1,fsr2h
  1219  002870  C00E  FFDE         	movff	??_UpdateDawnDusk,postinc2
  1220  002874  C00F  FFDD         	movff	??_UpdateDawnDusk+1,postdec2
  1221  002878                     
  1222                           ; BSR set to: 0
  1223                           ;timers.c: 164:         *pdawnminute = *pminute;
  1224  002878  C00B  FFD9         	movff	UpdateDawnDusk@pminute,fsr2l
  1225  00287C  C00C  FFDA         	movff	UpdateDawnDusk@pminute+1,fsr2h
  1226  002880  C003  FFE1         	movff	UpdateDawnDusk@pdawnminute,fsr1l
  1227  002884  C004  FFE2         	movff	UpdateDawnDusk@pdawnminute+1,fsr1h
  1228  002888  CFDE FFE6          	movff	postinc2,postinc1
  1229  00288C  CFDD FFE5          	movff	postdec2,postdec1
  1230  002890                     l2831:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;timers.c: 167:     if (dawndusk == 2) {
  1234  002890  0E02               	movlw	2
  1235  002892  19C5               	xorwf	_dawndusk& (0+255),w,b
  1236  002894  A4D8               	btfss	status,2,c
  1237  002896  EF4F  F014         	goto	u2921
  1238  00289A  EF51  F014         	goto	u2920
  1239  00289E                     u2921:
  1240  00289E  EF71  F014         	goto	l215
  1241  0028A2                     u2920:
  1242  0028A2                     
  1243                           ; BSR set to: 0
  1244                           ;timers.c: 168:         *pduskhour = *phour - DST;
  1245  0028A2  500D               	movf	UpdateDawnDusk@DST^0,w,c
  1246  0028A4  C009  FFD9         	movff	UpdateDawnDusk@phour,fsr2l
  1247  0028A8  C00A  FFDA         	movff	UpdateDawnDusk@phour+1,fsr2h
  1248  0028AC  CFDE F00E          	movff	postinc2,??_UpdateDawnDusk
  1249  0028B0  CFDD F00F          	movff	postdec2,??_UpdateDawnDusk+1
  1250  0028B4  5E0E               	subwf	??_UpdateDawnDusk^0,f,c
  1251  0028B6  0E00               	movlw	0
  1252  0028B8  5A0F               	subwfb	(??_UpdateDawnDusk+1)^0,f,c
  1253  0028BA  C005  FFD9         	movff	UpdateDawnDusk@pduskhour,fsr2l
  1254  0028BE  C006  FFDA         	movff	UpdateDawnDusk@pduskhour+1,fsr2h
  1255  0028C2  C00E  FFDE         	movff	??_UpdateDawnDusk,postinc2
  1256  0028C6  C00F  FFDD         	movff	??_UpdateDawnDusk+1,postdec2
  1257  0028CA                     
  1258                           ; BSR set to: 0
  1259                           ;timers.c: 169:         *pduskminute = *pminute;
  1260  0028CA  C00B  FFD9         	movff	UpdateDawnDusk@pminute,fsr2l
  1261  0028CE  C00C  FFDA         	movff	UpdateDawnDusk@pminute+1,fsr2h
  1262  0028D2  C007  FFE1         	movff	UpdateDawnDusk@pduskminute,fsr1l
  1263  0028D6  C008  FFE2         	movff	UpdateDawnDusk@pduskminute+1,fsr1h
  1264  0028DA  CFDE FFE6          	movff	postinc2,postinc1
  1265  0028DE  CFDD FFE5          	movff	postdec2,postdec1
  1266  0028E2                     l215:
  1267                           
  1268                           ; BSR set to: 0
  1269  0028E2  0012               	return		;funcret
  1270  0028E4                     __end_of_UpdateDawnDusk:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _Timer0_init *****************
  1274 ;; Defined at:
  1275 ;;		line 9 in file "timers.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text2
  1304  002E7E                     __ptext2:
  1305                           	callstack 0
  1306  002E7E                     _Timer0_init:
  1307                           	callstack 29
  1308  002E7E                     
  1309                           ;timers.c: 11:     T0CON1bits.T0CS=0b010;
  1310  002E7E  50D6               	movf	214,w,c	;volatile
  1311  002E80  0B1F               	andlw	-225
  1312  002E82  0940               	iorlw	64
  1313  002E84  6ED6               	movwf	214,c	;volatile
  1314  002E86                     
  1315                           ;timers.c: 12:     T0CON1bits.T0ASYNC=1;
  1316  002E86  88D6               	bsf	214,4,c	;volatile
  1317                           
  1318                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b0010;
  1319  002E88  50D6               	movf	214,w,c	;volatile
  1320  002E8A  0BF0               	andlw	-16
  1321  002E8C  0902               	iorlw	2
  1322  002E8E  6ED6               	movwf	214,c	;volatile
  1323  002E90                     
  1324                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  1325  002E90  88D5               	bsf	213,4,c	;volatile
  1326                           
  1327                           ;timers.c: 18:     TMR0H=0b00011011;
  1328  002E92  0E1B               	movlw	27
  1329  002E94  6ED4               	movwf	212,c	;volatile
  1330                           
  1331                           ;timers.c: 19:     TMR0L=0b00011101;
  1332  002E96  0E1D               	movlw	29
  1333  002E98  6ED3               	movwf	211,c	;volatile
  1334  002E9A                     
  1335                           ;timers.c: 20:     T0CON0bits.T0EN=1;
  1336  002E9A  8ED5               	bsf	213,7,c	;volatile
  1337  002E9C  0012               	return		;funcret
  1338  002E9E                     __end_of_Timer0_init:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _Timekeeper *****************
  1342 ;; Defined at:
  1343 ;;		line 26 in file "timers.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  pyear           2   10[COMRAM] PTR unsigned int 
  1346 ;;		 -> main@year(2), 
  1347 ;;  pmonth          2   12[COMRAM] PTR unsigned char 
  1348 ;;		 -> main@month(1), 
  1349 ;;  pday            2   14[COMRAM] PTR unsigned char 
  1350 ;;		 -> main@day(1), 
  1351 ;;  phour           2   16[COMRAM] PTR int 
  1352 ;;		 -> main@hour(2), 
  1353 ;;  pminute         2   18[COMRAM] PTR int 
  1354 ;;		 -> main@minute(2), 
  1355 ;;  pdayofweek      2   20[COMRAM] PTR unsigned char 
  1356 ;;		 -> main@dayofweek(1), 
  1357 ;;  pDST            2   22[COMRAM] PTR unsigned char 
  1358 ;;		 -> main@DST(1), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1370 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;Total ram usage:       16 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 3
  1377 ;; This function calls:
  1378 ;;		_LeapYear
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text3
  1385  000E34                     __ptext3:
  1386                           	callstack 0
  1387  000E34                     _Timekeeper:
  1388                           	callstack 27
  1389  000E34                     
  1390                           ;timers.c: 28:     ++*pminute;
  1391  000E34  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
  1392  000E38  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
  1393  000E3C  2ADE               	incf	postinc2,f,c
  1394  000E3E  0E00               	movlw	0
  1395  000E40  22DD               	addwfc	postdec2,f,c
  1396                           
  1397                           ;timers.c: 30:     if (*pminute == 60) {*pminute = 0; ++*phour;}
  1398  000E42  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
  1399  000E46  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
  1400  000E4A  0E3C               	movlw	60
  1401  000E4C  18DE               	xorwf	postinc2,w,c
  1402  000E4E  10DE               	iorwf	postinc2,w,c
  1403  000E50  A4D8               	btfss	status,2,c
  1404  000E52  EF2D  F007         	goto	u2491
  1405  000E56  EF2F  F007         	goto	u2490
  1406  000E5A                     u2491:
  1407  000E5A  EF3E  F007         	goto	l2703
  1408  000E5E                     u2490:
  1409  000E5E  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
  1410  000E62  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
  1411  000E66  0E00               	movlw	0
  1412  000E68  6EDE               	movwf	postinc2,c
  1413  000E6A  0E00               	movlw	0
  1414  000E6C  6EDD               	movwf	postdec2,c
  1415  000E6E  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1416  000E72  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1417  000E76  2ADE               	incf	postinc2,f,c
  1418  000E78  0E00               	movlw	0
  1419  000E7A  22DD               	addwfc	postdec2,f,c
  1420  000E7C                     l2703:
  1421                           
  1422                           ;timers.c: 32:     if (*phour == 24) {*phour = 0; ++*pday; ++*pdayofweek;}
  1423  000E7C  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1424  000E80  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1425  000E84  0E18               	movlw	24
  1426  000E86  18DE               	xorwf	postinc2,w,c
  1427  000E88  10DE               	iorwf	postinc2,w,c
  1428  000E8A  A4D8               	btfss	status,2,c
  1429  000E8C  EF4A  F007         	goto	u2501
  1430  000E90  EF4C  F007         	goto	u2500
  1431  000E94                     u2501:
  1432  000E94  EF5E  F007         	goto	l2711
  1433  000E98                     u2500:
  1434  000E98  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1435  000E9C  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1436  000EA0  0E00               	movlw	0
  1437  000EA2  6EDE               	movwf	postinc2,c
  1438  000EA4  0E00               	movlw	0
  1439  000EA6  6EDD               	movwf	postdec2,c
  1440  000EA8  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1441  000EAC  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1442  000EB0  2ADF               	incf	indf2,f,c
  1443  000EB2  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
  1444  000EB6  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1445  000EBA  2ADF               	incf	indf2,f,c
  1446  000EBC                     l2711:
  1447                           
  1448                           ;timers.c: 34:     if (*pdayofweek == 8) {*pdayofweek = 1;}
  1449  000EBC  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
  1450  000EC0  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1451  000EC4  0E08               	movlw	8
  1452  000EC6  18DE               	xorwf	postinc2,w,c
  1453  000EC8  A4D8               	btfss	status,2,c
  1454  000ECA  EF69  F007         	goto	u2511
  1455  000ECE  EF6B  F007         	goto	u2510
  1456  000ED2                     u2511:
  1457  000ED2  EF71  F007         	goto	l2715
  1458  000ED6                     u2510:
  1459  000ED6  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
  1460  000EDA  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1461  000EDE  0E01               	movlw	1
  1462  000EE0  6EDF               	movwf	indf2,c
  1463  000EE2                     l2715:
  1464                           
  1465                           ;timers.c: 36:     if (*pday == 29 && *pmonth == 2 && !LeapYear(*pyear)) {
  1466  000EE2  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1467  000EE6  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1468  000EEA  0E1D               	movlw	29
  1469  000EEC  18DE               	xorwf	postinc2,w,c
  1470  000EEE  A4D8               	btfss	status,2,c
  1471  000EF0  EF7C  F007         	goto	u2521
  1472  000EF4  EF7E  F007         	goto	u2520
  1473  000EF8                     u2521:
  1474  000EF8  EFA8  F007         	goto	l2725
  1475  000EFC                     u2520:
  1476  000EFC  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1477  000F00  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1478  000F04  0E02               	movlw	2
  1479  000F06  18DE               	xorwf	postinc2,w,c
  1480  000F08  A4D8               	btfss	status,2,c
  1481  000F0A  EF89  F007         	goto	u2531
  1482  000F0E  EF8B  F007         	goto	u2530
  1483  000F12                     u2531:
  1484  000F12  EFA8  F007         	goto	l2725
  1485  000F16                     u2530:
  1486  000F16  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
  1487  000F1A  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
  1488  000F1E  CFDE F006          	movff	postinc2,LeapYear@year
  1489  000F22  CFDD F007          	movff	postdec2,LeapYear@year+1
  1490  000F26  ECB2  F014         	call	_LeapYear	;wreg free
  1491  000F2A  0900               	iorlw	0
  1492  000F2C  A4D8               	btfss	status,2,c
  1493  000F2E  EF9B  F007         	goto	u2541
  1494  000F32  EF9D  F007         	goto	u2540
  1495  000F36                     u2541:
  1496  000F36  EFA8  F007         	goto	l2725
  1497  000F3A                     u2540:
  1498  000F3A                     
  1499                           ;timers.c: 37:         *pday = 1;
  1500  000F3A  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1501  000F3E  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1502  000F42  0E01               	movlw	1
  1503  000F44  6EDF               	movwf	indf2,c
  1504  000F46                     
  1505                           ;timers.c: 38:         ++*pmonth;
  1506  000F46  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1507  000F4A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1508  000F4E  2ADF               	incf	indf2,f,c
  1509  000F50                     l2725:
  1510                           
  1511                           ;timers.c: 41:     if (*pday == 30 && *pmonth == 2 && LeapYear(*pyear)) {
  1512  000F50  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1513  000F54  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1514  000F58  0E1E               	movlw	30
  1515  000F5A  18DE               	xorwf	postinc2,w,c
  1516  000F5C  A4D8               	btfss	status,2,c
  1517  000F5E  EFB3  F007         	goto	u2551
  1518  000F62  EFB5  F007         	goto	u2550
  1519  000F66                     u2551:
  1520  000F66  EFDF  F007         	goto	l2735
  1521  000F6A                     u2550:
  1522  000F6A  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1523  000F6E  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1524  000F72  0E02               	movlw	2
  1525  000F74  18DE               	xorwf	postinc2,w,c
  1526  000F76  A4D8               	btfss	status,2,c
  1527  000F78  EFC0  F007         	goto	u2561
  1528  000F7C  EFC2  F007         	goto	u2560
  1529  000F80                     u2561:
  1530  000F80  EFDF  F007         	goto	l2735
  1531  000F84                     u2560:
  1532  000F84  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
  1533  000F88  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
  1534  000F8C  CFDE F006          	movff	postinc2,LeapYear@year
  1535  000F90  CFDD F007          	movff	postdec2,LeapYear@year+1
  1536  000F94  ECB2  F014         	call	_LeapYear	;wreg free
  1537  000F98  0900               	iorlw	0
  1538  000F9A  B4D8               	btfsc	status,2,c
  1539  000F9C  EFD2  F007         	goto	u2571
  1540  000FA0  EFD4  F007         	goto	u2570
  1541  000FA4                     u2571:
  1542  000FA4  EFDF  F007         	goto	l2735
  1543  000FA8                     u2570:
  1544  000FA8                     
  1545                           ;timers.c: 42:         *pday = 1;
  1546  000FA8  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1547  000FAC  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1548  000FB0  0E01               	movlw	1
  1549  000FB2  6EDF               	movwf	indf2,c
  1550  000FB4                     
  1551                           ;timers.c: 43:         ++*pmonth;
  1552  000FB4  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1553  000FB8  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1554  000FBC  2ADF               	incf	indf2,f,c
  1555  000FBE                     l2735:
  1556                           
  1557                           ;timers.c: 46:     if (*pday == 31 && (*pmonth == 4 || *pmonth == 6 || *pmonth == 9 || *
      +                          pmonth == 11)) {
  1558  000FBE  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1559  000FC2  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1560  000FC6  0E1F               	movlw	31
  1561  000FC8  18DE               	xorwf	postinc2,w,c
  1562  000FCA  A4D8               	btfss	status,2,c
  1563  000FCC  EFEA  F007         	goto	u2581
  1564  000FD0  EFEC  F007         	goto	u2580
  1565  000FD4                     u2581:
  1566  000FD4  EF2B  F008         	goto	l2749
  1567  000FD8                     u2580:
  1568  000FD8  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1569  000FDC  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1570  000FE0  0E04               	movlw	4
  1571  000FE2  18DE               	xorwf	postinc2,w,c
  1572  000FE4  B4D8               	btfsc	status,2,c
  1573  000FE6  EFF7  F007         	goto	u2591
  1574  000FEA  EFF9  F007         	goto	u2590
  1575  000FEE                     u2591:
  1576  000FEE  EF20  F008         	goto	l2745
  1577  000FF2                     u2590:
  1578  000FF2  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1579  000FF6  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1580  000FFA  0E06               	movlw	6
  1581  000FFC  18DE               	xorwf	postinc2,w,c
  1582  000FFE  B4D8               	btfsc	status,2,c
  1583  001000  EF04  F008         	goto	u2601
  1584  001004  EF06  F008         	goto	u2600
  1585  001008                     u2601:
  1586  001008  EF20  F008         	goto	l2745
  1587  00100C                     u2600:
  1588  00100C  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1589  001010  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1590  001014  0E09               	movlw	9
  1591  001016  18DE               	xorwf	postinc2,w,c
  1592  001018  B4D8               	btfsc	status,2,c
  1593  00101A  EF11  F008         	goto	u2611
  1594  00101E  EF13  F008         	goto	u2610
  1595  001022                     u2611:
  1596  001022  EF20  F008         	goto	l2745
  1597  001026                     u2610:
  1598  001026  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1599  00102A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1600  00102E  0E0B               	movlw	11
  1601  001030  18DE               	xorwf	postinc2,w,c
  1602  001032  A4D8               	btfss	status,2,c
  1603  001034  EF1E  F008         	goto	u2621
  1604  001038  EF20  F008         	goto	u2620
  1605  00103C                     u2621:
  1606  00103C  EF2B  F008         	goto	l2749
  1607  001040                     u2620:
  1608  001040                     l2745:
  1609                           
  1610                           ;timers.c: 47:         *pday = 1;
  1611  001040  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1612  001044  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1613  001048  0E01               	movlw	1
  1614  00104A  6EDF               	movwf	indf2,c
  1615  00104C                     
  1616                           ;timers.c: 48:         ++*pmonth;
  1617  00104C  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1618  001050  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1619  001054  2ADF               	incf	indf2,f,c
  1620  001056                     l2749:
  1621                           
  1622                           ;timers.c: 51:     if (*pday == 32 && (*pmonth == 1 || *pmonth == 3 || *pmonth == 5 || *
      +                          pmonth == 7 || *pmonth == 8 || *pmonth == 10 || *pmonth == 12)) {
  1623  001056  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1624  00105A  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1625  00105E  0E20               	movlw	32
  1626  001060  18DE               	xorwf	postinc2,w,c
  1627  001062  A4D8               	btfss	status,2,c
  1628  001064  EF36  F008         	goto	u2631
  1629  001068  EF38  F008         	goto	u2630
  1630  00106C                     u2631:
  1631  00106C  EF9D  F008         	goto	l2769
  1632  001070                     u2630:
  1633  001070  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1634  001074  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1635  001078  04DE               	decf	postinc2,w,c
  1636  00107A  B4D8               	btfsc	status,2,c
  1637  00107C  EF42  F008         	goto	u2641
  1638  001080  EF44  F008         	goto	u2640
  1639  001084                     u2641:
  1640  001084  EF92  F008         	goto	l2765
  1641  001088                     u2640:
  1642  001088  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1643  00108C  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1644  001090  0E03               	movlw	3
  1645  001092  18DE               	xorwf	postinc2,w,c
  1646  001094  B4D8               	btfsc	status,2,c
  1647  001096  EF4F  F008         	goto	u2651
  1648  00109A  EF51  F008         	goto	u2650
  1649  00109E                     u2651:
  1650  00109E  EF92  F008         	goto	l2765
  1651  0010A2                     u2650:
  1652  0010A2  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1653  0010A6  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1654  0010AA  0E05               	movlw	5
  1655  0010AC  18DE               	xorwf	postinc2,w,c
  1656  0010AE  B4D8               	btfsc	status,2,c
  1657  0010B0  EF5C  F008         	goto	u2661
  1658  0010B4  EF5E  F008         	goto	u2660
  1659  0010B8                     u2661:
  1660  0010B8  EF92  F008         	goto	l2765
  1661  0010BC                     u2660:
  1662  0010BC  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1663  0010C0  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1664  0010C4  0E07               	movlw	7
  1665  0010C6  18DE               	xorwf	postinc2,w,c
  1666  0010C8  B4D8               	btfsc	status,2,c
  1667  0010CA  EF69  F008         	goto	u2671
  1668  0010CE  EF6B  F008         	goto	u2670
  1669  0010D2                     u2671:
  1670  0010D2  EF92  F008         	goto	l2765
  1671  0010D6                     u2670:
  1672  0010D6  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1673  0010DA  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1674  0010DE  0E08               	movlw	8
  1675  0010E0  18DE               	xorwf	postinc2,w,c
  1676  0010E2  B4D8               	btfsc	status,2,c
  1677  0010E4  EF76  F008         	goto	u2681
  1678  0010E8  EF78  F008         	goto	u2680
  1679  0010EC                     u2681:
  1680  0010EC  EF92  F008         	goto	l2765
  1681  0010F0                     u2680:
  1682  0010F0  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1683  0010F4  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1684  0010F8  0E0A               	movlw	10
  1685  0010FA  18DE               	xorwf	postinc2,w,c
  1686  0010FC  B4D8               	btfsc	status,2,c
  1687  0010FE  EF83  F008         	goto	u2691
  1688  001102  EF85  F008         	goto	u2690
  1689  001106                     u2691:
  1690  001106  EF92  F008         	goto	l2765
  1691  00110A                     u2690:
  1692  00110A  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1693  00110E  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1694  001112  0E0C               	movlw	12
  1695  001114  18DE               	xorwf	postinc2,w,c
  1696  001116  A4D8               	btfss	status,2,c
  1697  001118  EF90  F008         	goto	u2701
  1698  00111C  EF92  F008         	goto	u2700
  1699  001120                     u2701:
  1700  001120  EF9D  F008         	goto	l2769
  1701  001124                     u2700:
  1702  001124                     l2765:
  1703                           
  1704                           ;timers.c: 52:         *pday = 1;
  1705  001124  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1706  001128  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1707  00112C  0E01               	movlw	1
  1708  00112E  6EDF               	movwf	indf2,c
  1709  001130                     
  1710                           ;timers.c: 53:         ++*pmonth;
  1711  001130  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1712  001134  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1713  001138  2ADF               	incf	indf2,f,c
  1714  00113A                     l2769:
  1715                           
  1716                           ;timers.c: 56:     if (*pmonth == 13) {*pmonth = 1; ++*pyear;}
  1717  00113A  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1718  00113E  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1719  001142  0E0D               	movlw	13
  1720  001144  18DE               	xorwf	postinc2,w,c
  1721  001146  A4D8               	btfss	status,2,c
  1722  001148  EFA8  F008         	goto	u2711
  1723  00114C  EFAA  F008         	goto	u2710
  1724  001150                     u2711:
  1725  001150  EFB7  F008         	goto	l2775
  1726  001154                     u2710:
  1727  001154  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1728  001158  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1729  00115C  0E01               	movlw	1
  1730  00115E  6EDF               	movwf	indf2,c
  1731  001160  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
  1732  001164  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
  1733  001168  2ADE               	incf	postinc2,f,c
  1734  00116A  0E00               	movlw	0
  1735  00116C  22DD               	addwfc	postdec2,f,c
  1736  00116E                     l2775:
  1737                           
  1738                           ;timers.c: 59:     if (*pmonth == 3 && *pday >= 25 && *phour == 1 && *pdayofweek == 7) {
  1739  00116E  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1740  001172  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1741  001176  0E03               	movlw	3
  1742  001178  18DE               	xorwf	postinc2,w,c
  1743  00117A  A4D8               	btfss	status,2,c
  1744  00117C  EFC2  F008         	goto	u2721
  1745  001180  EFC4  F008         	goto	u2720
  1746  001184                     u2721:
  1747  001184  EFF7  F008         	goto	l2787
  1748  001188                     u2720:
  1749  001188  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1750  00118C  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1751  001190  0E18               	movlw	24
  1752  001192  64DF               	cpfsgt	indf2,c
  1753  001194  EFCE  F008         	goto	u2731
  1754  001198  EFD0  F008         	goto	u2730
  1755  00119C                     u2731:
  1756  00119C  EFF7  F008         	goto	l2787
  1757  0011A0                     u2730:
  1758  0011A0  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1759  0011A4  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1760  0011A8  04DE               	decf	postinc2,w,c
  1761  0011AA  10DE               	iorwf	postinc2,w,c
  1762  0011AC  A4D8               	btfss	status,2,c
  1763  0011AE  EFDB  F008         	goto	u2741
  1764  0011B2  EFDD  F008         	goto	u2740
  1765  0011B6                     u2741:
  1766  0011B6  EFF7  F008         	goto	l2787
  1767  0011BA                     u2740:
  1768  0011BA  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
  1769  0011BE  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1770  0011C2  0E07               	movlw	7
  1771  0011C4  18DE               	xorwf	postinc2,w,c
  1772  0011C6  A4D8               	btfss	status,2,c
  1773  0011C8  EFE8  F008         	goto	u2751
  1774  0011CC  EFEA  F008         	goto	u2750
  1775  0011D0                     u2751:
  1776  0011D0  EFF7  F008         	goto	l2787
  1777  0011D4                     u2750:
  1778  0011D4                     
  1779                           ;timers.c: 60:         ++*phour;
  1780  0011D4  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1781  0011D8  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1782  0011DC  2ADE               	incf	postinc2,f,c
  1783  0011DE  0E00               	movlw	0
  1784  0011E0  22DD               	addwfc	postdec2,f,c
  1785  0011E2                     
  1786                           ;timers.c: 61:         *pDST = 1;
  1787  0011E2  C017  FFD9         	movff	Timekeeper@pDST,fsr2l
  1788  0011E6  C018  FFDA         	movff	Timekeeper@pDST+1,fsr2h
  1789  0011EA  0E01               	movlw	1
  1790  0011EC  6EDF               	movwf	indf2,c
  1791  0011EE                     l2787:
  1792                           
  1793                           ;timers.c: 64:     if (*pmonth == 10 && *pday >=25 && *phour == 2 && *pdayofweek == 7 &&
      +                           *pDST) {
  1794  0011EE  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
  1795  0011F2  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
  1796  0011F6  0E0A               	movlw	10
  1797  0011F8  18DE               	xorwf	postinc2,w,c
  1798  0011FA  A4D8               	btfss	status,2,c
  1799  0011FC  EF02  F009         	goto	u2761
  1800  001200  EF04  F009         	goto	u2760
  1801  001204                     u2761:
  1802  001204  EF44  F009         	goto	l170
  1803  001208                     u2760:
  1804  001208  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
  1805  00120C  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
  1806  001210  0E18               	movlw	24
  1807  001212  64DF               	cpfsgt	indf2,c
  1808  001214  EF0E  F009         	goto	u2771
  1809  001218  EF10  F009         	goto	u2770
  1810  00121C                     u2771:
  1811  00121C  EF44  F009         	goto	l170
  1812  001220                     u2770:
  1813  001220  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1814  001224  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1815  001228  0E02               	movlw	2
  1816  00122A  18DE               	xorwf	postinc2,w,c
  1817  00122C  10DE               	iorwf	postinc2,w,c
  1818  00122E  A4D8               	btfss	status,2,c
  1819  001230  EF1C  F009         	goto	u2781
  1820  001234  EF1E  F009         	goto	u2780
  1821  001238                     u2781:
  1822  001238  EF44  F009         	goto	l170
  1823  00123C                     u2780:
  1824  00123C  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
  1825  001240  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
  1826  001244  0E07               	movlw	7
  1827  001246  18DE               	xorwf	postinc2,w,c
  1828  001248  A4D8               	btfss	status,2,c
  1829  00124A  EF29  F009         	goto	u2791
  1830  00124E  EF2B  F009         	goto	u2790
  1831  001252                     u2791:
  1832  001252  EF44  F009         	goto	l170
  1833  001256                     u2790:
  1834  001256  C017  FFD9         	movff	Timekeeper@pDST,fsr2l
  1835  00125A  C018  FFDA         	movff	Timekeeper@pDST+1,fsr2h
  1836  00125E  50DF               	movf	indf2,w,c
  1837  001260  B4D8               	btfsc	status,2,c
  1838  001262  EF35  F009         	goto	u2801
  1839  001266  EF37  F009         	goto	u2800
  1840  00126A                     u2801:
  1841  00126A  EF44  F009         	goto	l170
  1842  00126E                     u2800:
  1843  00126E                     
  1844                           ;timers.c: 65:         --*phour;
  1845  00126E  C011  FFD9         	movff	Timekeeper@phour,fsr2l
  1846  001272  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
  1847  001276  06DE               	decf	postinc2,f,c
  1848  001278  0E00               	movlw	0
  1849  00127A  5ADD               	subwfb	postdec2,f,c
  1850  00127C                     
  1851                           ;timers.c: 66:         *pDST = 0;
  1852  00127C  C017  FFD9         	movff	Timekeeper@pDST,fsr2l
  1853  001280  C018  FFDA         	movff	Timekeeper@pDST+1,fsr2h
  1854  001284  0E00               	movlw	0
  1855  001286  6EDF               	movwf	indf2,c
  1856  001288                     l170:
  1857  001288  0012               	return		;funcret
  1858  00128A                     __end_of_Timekeeper:
  1859                           	callstack 0
  1860                           
  1861 ;; *************** function _LeapYear *****************
  1862 ;; Defined at:
  1863 ;;		line 73 in file "timers.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  year            2    5[COMRAM] unsigned int 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  leapyear        1    9[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      unsigned char 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;Total ram usage:        5 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 2
  1884 ;; This function calls:
  1885 ;;		___lwmod
  1886 ;; This function is called by:
  1887 ;;		_Timekeeper
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text4
  1892  002964                     __ptext4:
  1893                           	callstack 0
  1894  002964                     _LeapYear:
  1895                           	callstack 27
  1896  002964                     
  1897                           ;timers.c: 73: char LeapYear(unsigned int year);timers.c: 74: {;timers.c: 75:     char l
      +                          eapyear;;timers.c: 76:     if (year % 4 == 0 && year % 100 != 0) {
  1898  002964  0E03               	movlw	3
  1899  002966  1406               	andwf	LeapYear@year^0,w,c
  1900  002968  6E08               	movwf	??_LeapYear^0,c
  1901  00296A  0E00               	movlw	0
  1902  00296C  1407               	andwf	(LeapYear@year+1)^0,w,c
  1903  00296E  6E09               	movwf	(??_LeapYear+1)^0,c
  1904  002970  5008               	movf	??_LeapYear^0,w,c
  1905  002972  1009               	iorwf	(??_LeapYear+1)^0,w,c
  1906  002974  A4D8               	btfss	status,2,c
  1907  002976  EFBF  F014         	goto	u2411
  1908  00297A  EFC1  F014         	goto	u2410
  1909  00297E                     u2411:
  1910  00297E  EFD8  F014         	goto	l2591
  1911  002982                     u2410:
  1912  002982  C006  F001         	movff	LeapYear@year,___lwmod@dividend
  1913  002986  C007  F002         	movff	LeapYear@year+1,___lwmod@dividend+1
  1914  00298A  0E00               	movlw	0
  1915  00298C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1916  00298E  0E64               	movlw	100
  1917  002990  6E03               	movwf	___lwmod@divisor^0,c
  1918  002992  ECC6  F015         	call	___lwmod	;wreg free
  1919  002996  5001               	movf	?___lwmod^0,w,c
  1920  002998  1002               	iorwf	(?___lwmod+1)^0,w,c
  1921  00299A  B4D8               	btfsc	status,2,c
  1922  00299C  EFD2  F014         	goto	u2421
  1923  0029A0  EFD4  F014         	goto	u2420
  1924  0029A4                     u2421:
  1925  0029A4  EFD8  F014         	goto	l2591
  1926  0029A8                     u2420:
  1927  0029A8                     l2589:
  1928                           
  1929                           ;timers.c: 77:         leapyear = 1;
  1930  0029A8  0E01               	movlw	1
  1931  0029AA  6E0A               	movwf	LeapYear@leapyear^0,c
  1932                           
  1933                           ;timers.c: 78:     } else if (year % 400 == 0) {
  1934  0029AC  EFEF  F014         	goto	l174
  1935  0029B0                     l2591:
  1936  0029B0  C006  F001         	movff	LeapYear@year,___lwmod@dividend
  1937  0029B4  C007  F002         	movff	LeapYear@year+1,___lwmod@dividend+1
  1938  0029B8  0E01               	movlw	1
  1939  0029BA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1940  0029BC  0E90               	movlw	144
  1941  0029BE  6E03               	movwf	___lwmod@divisor^0,c
  1942  0029C0  ECC6  F015         	call	___lwmod	;wreg free
  1943  0029C4  5001               	movf	?___lwmod^0,w,c
  1944  0029C6  1002               	iorwf	(?___lwmod+1)^0,w,c
  1945  0029C8  A4D8               	btfss	status,2,c
  1946  0029CA  EFE9  F014         	goto	u2431
  1947  0029CE  EFEB  F014         	goto	u2430
  1948  0029D2                     u2431:
  1949  0029D2  EFED  F014         	goto	l2595
  1950  0029D6                     u2430:
  1951  0029D6  EFD4  F014         	goto	l2589
  1952  0029DA                     l2595:
  1953                           
  1954                           ;timers.c: 81:         leapyear = 0;
  1955  0029DA  0E00               	movlw	0
  1956  0029DC  6E0A               	movwf	LeapYear@leapyear^0,c
  1957  0029DE                     l174:
  1958                           
  1959                           ;timers.c: 83:     return leapyear;
  1960  0029DE  500A               	movf	LeapYear@leapyear^0,w,c
  1961  0029E0  0012               	return		;funcret
  1962  0029E2                     __end_of_LeapYear:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function ___lwmod *****************
  1966 ;; Defined at:
  1967 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  dividend        2    0[COMRAM] unsigned int 
  1970 ;;  divisor         2    2[COMRAM] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  counter         1    4[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[COMRAM] unsigned int 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;Total ram usage:        5 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_LeapYear
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text5
  1997  002B8C                     __ptext5:
  1998                           	callstack 0
  1999  002B8C                     ___lwmod:
  2000                           	callstack 27
  2001  002B8C  5003               	movf	___lwmod@divisor^0,w,c
  2002  002B8E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2003  002B90  B4D8               	btfsc	status,2,c
  2004  002B92  EFCD  F015         	goto	u2371
  2005  002B96  EFCF  F015         	goto	u2370
  2006  002B9A                     u2371:
  2007  002B9A  EFF3  F015         	goto	l771
  2008  002B9E                     u2370:
  2009  002B9E  0E01               	movlw	1
  2010  002BA0  6E05               	movwf	___lwmod@counter^0,c
  2011  002BA2  EFD7  F015         	goto	l2561
  2012  002BA6                     l2559:
  2013  002BA6  90D8               	bcf	status,0,c
  2014  002BA8  3603               	rlcf	___lwmod@divisor^0,f,c
  2015  002BAA  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2016  002BAC  2A05               	incf	___lwmod@counter^0,f,c
  2017  002BAE                     l2561:
  2018  002BAE  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2019  002BB0  EFDC  F015         	goto	u2381
  2020  002BB4  EFDE  F015         	goto	u2380
  2021  002BB8                     u2381:
  2022  002BB8  EFD3  F015         	goto	l2559
  2023  002BBC                     u2380:
  2024  002BBC                     l2563:
  2025  002BBC  5003               	movf	___lwmod@divisor^0,w,c
  2026  002BBE  5C01               	subwf	___lwmod@dividend^0,w,c
  2027  002BC0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2028  002BC2  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2029  002BC4  A0D8               	btfss	status,0,c
  2030  002BC6  EFE7  F015         	goto	u2391
  2031  002BCA  EFE9  F015         	goto	u2390
  2032  002BCE                     u2391:
  2033  002BCE  EFED  F015         	goto	l2567
  2034  002BD2                     u2390:
  2035  002BD2  5003               	movf	___lwmod@divisor^0,w,c
  2036  002BD4  5E01               	subwf	___lwmod@dividend^0,f,c
  2037  002BD6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2038  002BD8  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2039  002BDA                     l2567:
  2040  002BDA  90D8               	bcf	status,0,c
  2041  002BDC  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2042  002BDE  3203               	rrcf	___lwmod@divisor^0,f,c
  2043  002BE0  2E05               	decfsz	___lwmod@counter^0,f,c
  2044  002BE2  EFDE  F015         	goto	l2563
  2045  002BE6                     l771:
  2046  002BE6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2047  002BEA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2048  002BEE  0012               	return		;funcret
  2049  002BF0                     __end_of___lwmod:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _SunPleaseFixTheDamnClock *****************
  2053 ;; Defined at:
  2054 ;;		line 89 in file "timers.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  pdawnhour       2   33[COMRAM] PTR int 
  2057 ;;		 -> main@dawnhour(2), 
  2058 ;;  pdawnminute     2   35[COMRAM] PTR int 
  2059 ;;		 -> main@dawnminute(2), 
  2060 ;;  pduskhour       2   37[COMRAM] PTR int 
  2061 ;;		 -> main@duskhour(2), 
  2062 ;;  pduskminute     2   39[COMRAM] PTR int 
  2063 ;;		 -> main@duskminute(2), 
  2064 ;;  phour           2   41[COMRAM] PTR int 
  2065 ;;		 -> main@hour(2), 
  2066 ;;  pminute         2   43[COMRAM] PTR int 
  2067 ;;		 -> main@minute(2), 
  2068 ;;  DST             1   45[COMRAM] unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  timedifferen    2   52[COMRAM] int 
  2071 ;;  avgminute       2   50[COMRAM] int 
  2072 ;;  avghour         2   48[COMRAM] int 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2082 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;Total ram usage:       21 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 3
  2089 ;; This function calls:
  2090 ;;		_TimeAvg
  2091 ;;		_TimeDiff
  2092 ;;		___awdiv
  2093 ;;		___awmod
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text6
  2100  001620                     __ptext6:
  2101                           	callstack 0
  2102  001620                     _SunPleaseFixTheDamnClock:
  2103                           	callstack 27
  2104  001620                     
  2105                           ;timers.c: 89: void SunPleaseFixTheDamnClock(int *pdawnhour, int *pdawnminute, int *pdus
      +                          khour, int *pduskminute, int *phour, int *pminute, char DST);timers.c: 90: {;timers.c: 9
      +                          1:     int avghour;;timers.c: 92:     int avgminute;;timers.c: 94:     TimeAvg(*pdawnhou
      +                          r, *pdawnminute, *pduskhour, *pduskminute, &avghour, &avgminute);
  2106  001620  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  2107  001624  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  2108  001628  CFDE F012          	movff	postinc2,TimeAvg@hour1
  2109  00162C  CFDD F013          	movff	postdec2,TimeAvg@hour1+1
  2110  001630  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  2111  001634  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  2112  001638  CFDE F014          	movff	postinc2,TimeAvg@minute1
  2113  00163C  CFDD F015          	movff	postdec2,TimeAvg@minute1+1
  2114  001640  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  2115  001644  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  2116  001648  CFDE F016          	movff	postinc2,TimeAvg@hour2
  2117  00164C  CFDD F017          	movff	postdec2,TimeAvg@hour2+1
  2118  001650  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  2119  001654  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  2120  001658  CFDE F018          	movff	postinc2,TimeAvg@minute2
  2121  00165C  CFDD F019          	movff	postdec2,TimeAvg@minute2+1
  2122  001660  0E31               	movlw	low SunPleaseFixTheDamnClock@avghour
  2123  001662  6E1A               	movwf	TimeAvg@pavghour^0,c
  2124  001664  0E00               	movlw	high SunPleaseFixTheDamnClock@avghour
  2125  001666  6E1B               	movwf	(TimeAvg@pavghour+1)^0,c
  2126  001668  0E33               	movlw	low SunPleaseFixTheDamnClock@avgminute
  2127  00166A  6E1C               	movwf	TimeAvg@pavgminute^0,c
  2128  00166C  0E00               	movlw	high SunPleaseFixTheDamnClock@avgminute
  2129  00166E  6E1D               	movwf	(TimeAvg@pavgminute+1)^0,c
  2130  001670  EC64  F011         	call	_TimeAvg	;wreg free
  2131  001674                     
  2132                           ;timers.c: 95:     int timedifference = TimeDiff(avghour, avgminute, 12, 0);
  2133  001674  C031  F001         	movff	SunPleaseFixTheDamnClock@avghour,TimeDiff@hour1
  2134  001678  C032  F002         	movff	SunPleaseFixTheDamnClock@avghour+1,TimeDiff@hour1+1
  2135  00167C  C033  F003         	movff	SunPleaseFixTheDamnClock@avgminute,TimeDiff@minute1
  2136  001680  C034  F004         	movff	SunPleaseFixTheDamnClock@avgminute+1,TimeDiff@minute1+1
  2137  001684  0E00               	movlw	0
  2138  001686  6E06               	movwf	(TimeDiff@hour2+1)^0,c
  2139  001688  0E0C               	movlw	12
  2140  00168A  6E05               	movwf	TimeDiff@hour2^0,c
  2141  00168C  0E00               	movlw	0
  2142  00168E  6E08               	movwf	(TimeDiff@minute2+1)^0,c
  2143  001690  0E00               	movlw	0
  2144  001692  6E07               	movwf	TimeDiff@minute2^0,c
  2145  001694  EC73  F013         	call	_TimeDiff	;wreg free
  2146  001698  C001  F035         	movff	?_TimeDiff,SunPleaseFixTheDamnClock@timedifference
  2147  00169C  C002  F036         	movff	?_TimeDiff+1,SunPleaseFixTheDamnClock@timedifference+1
  2148  0016A0                     
  2149                           ;timers.c: 97:     if (timedifference > 30 || timedifference < -30) {
  2150  0016A0  BE36               	btfsc	(SunPleaseFixTheDamnClock@timedifference+1)^0,7,c
  2151  0016A2  EF5E  F00B         	goto	u2930
  2152  0016A6  5036               	movf	(SunPleaseFixTheDamnClock@timedifference+1)^0,w,c
  2153  0016A8  E107               	bnz	u2931
  2154  0016AA  0E1F               	movlw	31
  2155  0016AC  5C35               	subwf	SunPleaseFixTheDamnClock@timedifference^0,w,c
  2156  0016AE  B0D8               	btfsc	status,0,c
  2157  0016B0  EF5C  F00B         	goto	u2931
  2158  0016B4  EF5E  F00B         	goto	u2930
  2159  0016B8                     u2931:
  2160  0016B8  EF6C  F00B         	goto	l2845
  2161  0016BC                     u2930:
  2162  0016BC  AE36               	btfss	(SunPleaseFixTheDamnClock@timedifference+1)^0,7,c
  2163  0016BE  EF6A  F00B         	goto	u2941
  2164  0016C2  0EE2               	movlw	226
  2165  0016C4  5C35               	subwf	SunPleaseFixTheDamnClock@timedifference^0,w,c
  2166  0016C6  0EFF               	movlw	255
  2167  0016C8  5836               	subwfb	(SunPleaseFixTheDamnClock@timedifference+1)^0,w,c
  2168  0016CA  B0D8               	btfsc	status,0,c
  2169  0016CC  EF6A  F00B         	goto	u2941
  2170  0016D0  EF6C  F00B         	goto	u2940
  2171  0016D4                     u2941:
  2172  0016D4  EF79  F00C         	goto	l2873
  2173  0016D8                     u2940:
  2174  0016D8                     l2845:
  2175                           
  2176                           ;timers.c: 98:         *pminute = timedifference % 60;
  2177  0016D8  C035  F001         	movff	SunPleaseFixTheDamnClock@timedifference,___awmod@dividend
  2178  0016DC  C036  F002         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awmod@dividend+1
  2179  0016E0  0E00               	movlw	0
  2180  0016E2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2181  0016E4  0E3C               	movlw	60
  2182  0016E6  6E03               	movwf	___awmod@divisor^0,c
  2183  0016E8  EC1B  F013         	call	___awmod	;wreg free
  2184  0016EC  C02C  FFD9         	movff	SunPleaseFixTheDamnClock@pminute,fsr2l
  2185  0016F0  C02D  FFDA         	movff	SunPleaseFixTheDamnClock@pminute+1,fsr2h
  2186  0016F4  C001  FFDE         	movff	?___awmod,postinc2
  2187  0016F8  C002  FFDD         	movff	?___awmod+1,postdec2
  2188                           
  2189                           ;timers.c: 99:         *pdawnminute += timedifference % 60;
  2190  0016FC  C035  F001         	movff	SunPleaseFixTheDamnClock@timedifference,___awmod@dividend
  2191  001700  C036  F002         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awmod@dividend+1
  2192  001704  0E00               	movlw	0
  2193  001706  6E04               	movwf	(___awmod@divisor+1)^0,c
  2194  001708  0E3C               	movlw	60
  2195  00170A  6E03               	movwf	___awmod@divisor^0,c
  2196  00170C  EC1B  F013         	call	___awmod	;wreg free
  2197  001710  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  2198  001714  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  2199  001718  5001               	movf	?___awmod^0,w,c
  2200  00171A  26DE               	addwf	postinc2,f,c
  2201  00171C  5002               	movf	(?___awmod+1)^0,w,c
  2202  00171E  22DD               	addwfc	postdec2,f,c
  2203                           
  2204                           ;timers.c: 100:         *pduskminute += timedifference % 60;
  2205  001720  C035  F001         	movff	SunPleaseFixTheDamnClock@timedifference,___awmod@dividend
  2206  001724  C036  F002         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awmod@dividend+1
  2207  001728  0E00               	movlw	0
  2208  00172A  6E04               	movwf	(___awmod@divisor+1)^0,c
  2209  00172C  0E3C               	movlw	60
  2210  00172E  6E03               	movwf	___awmod@divisor^0,c
  2211  001730  EC1B  F013         	call	___awmod	;wreg free
  2212  001734  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  2213  001738  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  2214  00173C  5001               	movf	?___awmod^0,w,c
  2215  00173E  26DE               	addwf	postinc2,f,c
  2216  001740  5002               	movf	(?___awmod+1)^0,w,c
  2217  001742  22DD               	addwfc	postdec2,f,c
  2218  001744                     
  2219                           ;timers.c: 102:         if (*pminute < 0) {--*phour; *pminute += 60;}
  2220  001744  C02C  FFD9         	movff	SunPleaseFixTheDamnClock@pminute,fsr2l
  2221  001748  C02D  FFDA         	movff	SunPleaseFixTheDamnClock@pminute+1,fsr2h
  2222  00174C  0E01               	movlw	1
  2223  00174E  BEDB               	btfsc	plusw2,7,c
  2224  001750  EFAE  F00B         	goto	u2950
  2225  001754  EFAC  F00B         	goto	u2951
  2226  001758                     u2951:
  2227  001758  EFBD  F00B         	goto	l183
  2228  00175C                     u2950:
  2229  00175C  C02A  FFD9         	movff	SunPleaseFixTheDamnClock@phour,fsr2l
  2230  001760  C02B  FFDA         	movff	SunPleaseFixTheDamnClock@phour+1,fsr2h
  2231  001764  06DE               	decf	postinc2,f,c
  2232  001766  0E00               	movlw	0
  2233  001768  5ADD               	subwfb	postdec2,f,c
  2234  00176A  0E3C               	movlw	60
  2235  00176C  C02C  FFD9         	movff	SunPleaseFixTheDamnClock@pminute,fsr2l
  2236  001770  C02D  FFDA         	movff	SunPleaseFixTheDamnClock@pminute+1,fsr2h
  2237  001774  26DE               	addwf	postinc2,f,c
  2238  001776  0E00               	movlw	0
  2239  001778  22DD               	addwfc	postdec2,f,c
  2240  00177A                     l183:
  2241                           
  2242                           ;timers.c: 104:         if (*pdawnminute >= 60) {++*pdawnhour; *pdawnminute -= 60;}
  2243  00177A  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  2244  00177E  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  2245  001782  0E01               	movlw	1
  2246  001784  BEDB               	btfsc	plusw2,7,c
  2247  001786  EFCF  F00B         	goto	u2961
  2248  00178A  0E01               	movlw	1
  2249  00178C  50DB               	movf	plusw2,w,c
  2250  00178E  E109               	bnz	u2960
  2251  001790  0E3C               	movlw	60
  2252  001792  5CDE               	subwf	postinc2,w,c
  2253  001794  A0D8               	btfss	status,0,c
  2254  001796  EFCF  F00B         	goto	u2961
  2255  00179A  EFD1  F00B         	goto	u2960
  2256  00179E                     u2961:
  2257  00179E  EFE2  F00B         	goto	l2855
  2258  0017A2                     u2960:
  2259  0017A2  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  2260  0017A6  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  2261  0017AA  2ADE               	incf	postinc2,f,c
  2262  0017AC  0E00               	movlw	0
  2263  0017AE  22DD               	addwfc	postdec2,f,c
  2264  0017B0  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  2265  0017B4  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  2266  0017B8  0EC4               	movlw	196
  2267  0017BA  26DE               	addwf	postinc2,f,c
  2268  0017BC  0EFF               	movlw	255
  2269  0017BE  22DD               	addwfc	postdec2,f,c
  2270  0017C0  EFFD  F00B         	goto	l185
  2271  0017C4                     l2855:
  2272  0017C4  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  2273  0017C8  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  2274  0017CC  0E01               	movlw	1
  2275  0017CE  BEDB               	btfsc	plusw2,7,c
  2276  0017D0  EFEE  F00B         	goto	u2970
  2277  0017D4  EFEC  F00B         	goto	u2971
  2278  0017D8                     u2971:
  2279  0017D8  EFFD  F00B         	goto	l185
  2280  0017DC                     u2970:
  2281  0017DC  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  2282  0017E0  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  2283  0017E4  06DE               	decf	postinc2,f,c
  2284  0017E6  0E00               	movlw	0
  2285  0017E8  5ADD               	subwfb	postdec2,f,c
  2286  0017EA  0E3C               	movlw	60
  2287  0017EC  C024  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnminute,fsr2l
  2288  0017F0  C025  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnminute+1,fsr2h
  2289  0017F4  26DE               	addwf	postinc2,f,c
  2290  0017F6  0E00               	movlw	0
  2291  0017F8  22DD               	addwfc	postdec2,f,c
  2292  0017FA                     l185:
  2293                           
  2294                           ;timers.c: 107:         if (*pduskminute >= 60) {++*pduskhour; *pduskminute -= 60;}
  2295  0017FA  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  2296  0017FE  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  2297  001802  0E01               	movlw	1
  2298  001804  BEDB               	btfsc	plusw2,7,c
  2299  001806  EF0F  F00C         	goto	u2981
  2300  00180A  0E01               	movlw	1
  2301  00180C  50DB               	movf	plusw2,w,c
  2302  00180E  E109               	bnz	u2980
  2303  001810  0E3C               	movlw	60
  2304  001812  5CDE               	subwf	postinc2,w,c
  2305  001814  A0D8               	btfss	status,0,c
  2306  001816  EF0F  F00C         	goto	u2981
  2307  00181A  EF11  F00C         	goto	u2980
  2308  00181E                     u2981:
  2309  00181E  EF22  F00C         	goto	l2863
  2310  001822                     u2980:
  2311  001822  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  2312  001826  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  2313  00182A  2ADE               	incf	postinc2,f,c
  2314  00182C  0E00               	movlw	0
  2315  00182E  22DD               	addwfc	postdec2,f,c
  2316  001830  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  2317  001834  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  2318  001838  0EC4               	movlw	196
  2319  00183A  26DE               	addwf	postinc2,f,c
  2320  00183C  0EFF               	movlw	255
  2321  00183E  22DD               	addwfc	postdec2,f,c
  2322  001840  EF3D  F00C         	goto	l2867
  2323  001844                     l2863:
  2324  001844  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  2325  001848  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  2326  00184C  0E01               	movlw	1
  2327  00184E  BEDB               	btfsc	plusw2,7,c
  2328  001850  EF2E  F00C         	goto	u2990
  2329  001854  EF2C  F00C         	goto	u2991
  2330  001858                     u2991:
  2331  001858  EF3D  F00C         	goto	l2867
  2332  00185C                     u2990:
  2333  00185C  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  2334  001860  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  2335  001864  06DE               	decf	postinc2,f,c
  2336  001866  0E00               	movlw	0
  2337  001868  5ADD               	subwfb	postdec2,f,c
  2338  00186A  0E3C               	movlw	60
  2339  00186C  C028  FFD9         	movff	SunPleaseFixTheDamnClock@pduskminute,fsr2l
  2340  001870  C029  FFDA         	movff	SunPleaseFixTheDamnClock@pduskminute+1,fsr2h
  2341  001874  26DE               	addwf	postinc2,f,c
  2342  001876  0E00               	movlw	0
  2343  001878  22DD               	addwfc	postdec2,f,c
  2344  00187A                     l2867:
  2345                           
  2346                           ;timers.c: 110:         *phour = 12 + timedifference / 60;
  2347  00187A  C035  F00A         	movff	SunPleaseFixTheDamnClock@timedifference,___awdiv@dividend
  2348  00187E  C036  F00B         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awdiv@dividend+1
  2349  001882  0E00               	movlw	0
  2350  001884  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2351  001886  0E3C               	movlw	60
  2352  001888  6E0C               	movwf	___awdiv@divisor^0,c
  2353  00188A  ECB9  F012         	call	___awdiv	;wreg free
  2354  00188E  0E0C               	movlw	12
  2355  001890  260A               	addwf	?___awdiv^0,f,c
  2356  001892  0E00               	movlw	0
  2357  001894  220B               	addwfc	(?___awdiv+1)^0,f,c
  2358  001896  C02A  FFD9         	movff	SunPleaseFixTheDamnClock@phour,fsr2l
  2359  00189A  C02B  FFDA         	movff	SunPleaseFixTheDamnClock@phour+1,fsr2h
  2360  00189E  C00A  FFDE         	movff	?___awdiv,postinc2
  2361  0018A2  C00B  FFDD         	movff	?___awdiv+1,postdec2
  2362  0018A6                     
  2363                           ;timers.c: 111:         *pdawnhour += timedifference / 60;
  2364  0018A6  C035  F00A         	movff	SunPleaseFixTheDamnClock@timedifference,___awdiv@dividend
  2365  0018AA  C036  F00B         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awdiv@dividend+1
  2366  0018AE  0E00               	movlw	0
  2367  0018B0  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2368  0018B2  0E3C               	movlw	60
  2369  0018B4  6E0C               	movwf	___awdiv@divisor^0,c
  2370  0018B6  ECB9  F012         	call	___awdiv	;wreg free
  2371  0018BA  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  2372  0018BE  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  2373  0018C2  500A               	movf	?___awdiv^0,w,c
  2374  0018C4  26DE               	addwf	postinc2,f,c
  2375  0018C6  500B               	movf	(?___awdiv+1)^0,w,c
  2376  0018C8  22DD               	addwfc	postdec2,f,c
  2377  0018CA                     
  2378                           ;timers.c: 112:         *pduskhour += timedifference / 60;
  2379  0018CA  C035  F00A         	movff	SunPleaseFixTheDamnClock@timedifference,___awdiv@dividend
  2380  0018CE  C036  F00B         	movff	SunPleaseFixTheDamnClock@timedifference+1,___awdiv@dividend+1
  2381  0018D2  0E00               	movlw	0
  2382  0018D4  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2383  0018D6  0E3C               	movlw	60
  2384  0018D8  6E0C               	movwf	___awdiv@divisor^0,c
  2385  0018DA  ECB9  F012         	call	___awdiv	;wreg free
  2386  0018DE  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  2387  0018E2  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  2388  0018E6  500A               	movf	?___awdiv^0,w,c
  2389  0018E8  26DE               	addwf	postinc2,f,c
  2390  0018EA  500B               	movf	(?___awdiv+1)^0,w,c
  2391  0018EC  22DD               	addwfc	postdec2,f,c
  2392                           
  2393                           ;timers.c: 115:     } else if (*pdawnhour > 12 && *pduskhour < 12) {
  2394  0018EE  EFB9  F00C         	goto	l192
  2395  0018F2                     l2873:
  2396  0018F2  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  2397  0018F6  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  2398  0018FA  0E01               	movlw	1
  2399  0018FC  BEDB               	btfsc	plusw2,7,c
  2400  0018FE  EF8B  F00C         	goto	u3001
  2401  001902  0E01               	movlw	1
  2402  001904  50DB               	movf	plusw2,w,c
  2403  001906  E109               	bnz	u3000
  2404  001908  0E0D               	movlw	13
  2405  00190A  5CDE               	subwf	postinc2,w,c
  2406  00190C  A0D8               	btfss	status,0,c
  2407  00190E  EF8B  F00C         	goto	u3001
  2408  001912  EF8D  F00C         	goto	u3000
  2409  001916                     u3001:
  2410  001916  EFB9  F00C         	goto	l192
  2411  00191A                     u3000:
  2412  00191A  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  2413  00191E  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  2414  001922  0E01               	movlw	1
  2415  001924  BEDB               	btfsc	plusw2,7,c
  2416  001926  EFA1  F00C         	goto	u3010
  2417  00192A  0E01               	movlw	1
  2418  00192C  50DB               	movf	plusw2,w,c
  2419  00192E  E107               	bnz	u3011
  2420  001930  0E0C               	movlw	12
  2421  001932  5CDE               	subwf	postinc2,w,c
  2422  001934  B0D8               	btfsc	status,0,c
  2423  001936  EF9F  F00C         	goto	u3011
  2424  00193A  EFA1  F00C         	goto	u3010
  2425  00193E                     u3011:
  2426  00193E  EFB9  F00C         	goto	l192
  2427  001942                     u3010:
  2428  001942                     
  2429                           ;timers.c: 116:         *phour = 0;
  2430  001942  C02A  FFD9         	movff	SunPleaseFixTheDamnClock@phour,fsr2l
  2431  001946  C02B  FFDA         	movff	SunPleaseFixTheDamnClock@phour+1,fsr2h
  2432  00194A  0E00               	movlw	0
  2433  00194C  6EDE               	movwf	postinc2,c
  2434  00194E  0E00               	movlw	0
  2435  001950  6EDD               	movwf	postdec2,c
  2436                           
  2437                           ;timers.c: 117:         *pdawnhour -= 12;
  2438  001952  C022  FFD9         	movff	SunPleaseFixTheDamnClock@pdawnhour,fsr2l
  2439  001956  C023  FFDA         	movff	SunPleaseFixTheDamnClock@pdawnhour+1,fsr2h
  2440  00195A  0EF4               	movlw	244
  2441  00195C  26DE               	addwf	postinc2,f,c
  2442  00195E  0EFF               	movlw	255
  2443  001960  22DD               	addwfc	postdec2,f,c
  2444  001962                     
  2445                           ;timers.c: 118:         *pduskhour += 12;
  2446  001962  0E0C               	movlw	12
  2447  001964  C026  FFD9         	movff	SunPleaseFixTheDamnClock@pduskhour,fsr2l
  2448  001968  C027  FFDA         	movff	SunPleaseFixTheDamnClock@pduskhour+1,fsr2h
  2449  00196C  26DE               	addwf	postinc2,f,c
  2450  00196E  0E00               	movlw	0
  2451  001970  22DD               	addwfc	postdec2,f,c
  2452  001972                     l192:
  2453  001972  0012               	return		;funcret
  2454  001974                     __end_of_SunPleaseFixTheDamnClock:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _TimeAvg *****************
  2458 ;; Defined at:
  2459 ;;		line 145 in file "timers.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  hour1           2   17[COMRAM] int 
  2462 ;;  minute1         2   19[COMRAM] int 
  2463 ;;  hour2           2   21[COMRAM] int 
  2464 ;;  minute2         2   23[COMRAM] int 
  2465 ;;  pavghour        2   25[COMRAM] PTR int 
  2466 ;;		 -> SunPleaseFixTheDamnClock@avghour(2), 
  2467 ;;  pavgminute      2   27[COMRAM] PTR int 
  2468 ;;		 -> SunPleaseFixTheDamnClock@avgminute(2), 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  HalfTimeDiff    2   31[COMRAM] int 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2480 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;Total ram usage:       16 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 2
  2487 ;; This function calls:
  2488 ;;		_TimeDiff
  2489 ;;		___awdiv
  2490 ;;		___awmod
  2491 ;; This function is called by:
  2492 ;;		_SunPleaseFixTheDamnClock
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text7
  2497  0022C8                     __ptext7:
  2498                           	callstack 0
  2499  0022C8                     _TimeAvg:
  2500                           	callstack 27
  2501  0022C8                     
  2502                           ;timers.c: 145: void TimeAvg(int hour1, int minute1, int hour2, int minute2, int *pavgho
      +                          ur, int *pavgminute);timers.c: 146: {;timers.c: 147:     int HalfTimeDiff = TimeDiff(hou
      +                          r1, minute1, hour2, minute2) / 2;
  2503  0022C8  C018  F007         	movff	TimeAvg@minute2,TimeDiff@minute2
  2504  0022CC  C019  F008         	movff	TimeAvg@minute2+1,TimeDiff@minute2+1
  2505  0022D0  C016  F005         	movff	TimeAvg@hour2,TimeDiff@hour2
  2506  0022D4  C017  F006         	movff	TimeAvg@hour2+1,TimeDiff@hour2+1
  2507  0022D8  C014  F003         	movff	TimeAvg@minute1,TimeDiff@minute1
  2508  0022DC  C015  F004         	movff	TimeAvg@minute1+1,TimeDiff@minute1+1
  2509  0022E0  C012  F001         	movff	TimeAvg@hour1,TimeDiff@hour1
  2510  0022E4  C013  F002         	movff	TimeAvg@hour1+1,TimeDiff@hour1+1
  2511  0022E8  EC73  F013         	call	_TimeDiff	;wreg free
  2512  0022EC  C001  F00A         	movff	?_TimeDiff,___awdiv@dividend
  2513  0022F0  C002  F00B         	movff	?_TimeDiff+1,___awdiv@dividend+1
  2514  0022F4  0E00               	movlw	0
  2515  0022F6  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2516  0022F8  0E02               	movlw	2
  2517  0022FA  6E0C               	movwf	___awdiv@divisor^0,c
  2518  0022FC  ECB9  F012         	call	___awdiv	;wreg free
  2519  002300  C00A  F020         	movff	?___awdiv,TimeAvg@HalfTimeDiff
  2520  002304  C00B  F021         	movff	?___awdiv+1,TimeAvg@HalfTimeDiff+1
  2521  002308                     
  2522                           ;timers.c: 149:     *pavghour = hour1 + HalfTimeDiff / 60;
  2523  002308  C020  F00A         	movff	TimeAvg@HalfTimeDiff,___awdiv@dividend
  2524  00230C  C021  F00B         	movff	TimeAvg@HalfTimeDiff+1,___awdiv@dividend+1
  2525  002310  0E00               	movlw	0
  2526  002312  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2527  002314  0E3C               	movlw	60
  2528  002316  6E0C               	movwf	___awdiv@divisor^0,c
  2529  002318  ECB9  F012         	call	___awdiv	;wreg free
  2530  00231C  5012               	movf	TimeAvg@hour1^0,w,c
  2531  00231E  260A               	addwf	?___awdiv^0,f,c
  2532  002320  5013               	movf	(TimeAvg@hour1+1)^0,w,c
  2533  002322  220B               	addwfc	(?___awdiv+1)^0,f,c
  2534  002324  C01A  FFD9         	movff	TimeAvg@pavghour,fsr2l
  2535  002328  C01B  FFDA         	movff	TimeAvg@pavghour+1,fsr2h
  2536  00232C  C00A  FFDE         	movff	?___awdiv,postinc2
  2537  002330  C00B  FFDD         	movff	?___awdiv+1,postdec2
  2538  002334                     
  2539                           ;timers.c: 150:     *pavgminute = minute1 + HalfTimeDiff % 60;
  2540  002334  C020  F001         	movff	TimeAvg@HalfTimeDiff,___awmod@dividend
  2541  002338  C021  F002         	movff	TimeAvg@HalfTimeDiff+1,___awmod@dividend+1
  2542  00233C  0E00               	movlw	0
  2543  00233E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2544  002340  0E3C               	movlw	60
  2545  002342  6E03               	movwf	___awmod@divisor^0,c
  2546  002344  EC1B  F013         	call	___awmod	;wreg free
  2547  002348  5014               	movf	TimeAvg@minute1^0,w,c
  2548  00234A  2601               	addwf	?___awmod^0,f,c
  2549  00234C  5015               	movf	(TimeAvg@minute1+1)^0,w,c
  2550  00234E  2202               	addwfc	(?___awmod+1)^0,f,c
  2551  002350  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2552  002354  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2553  002358  C001  FFDE         	movff	?___awmod,postinc2
  2554  00235C  C002  FFDD         	movff	?___awmod+1,postdec2
  2555  002360                     
  2556                           ;timers.c: 152:     if (*pavgminute >= 60) {++*pavghour; *pavgminute -= 60;}
  2557  002360  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2558  002364  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2559  002368  0E01               	movlw	1
  2560  00236A  BEDB               	btfsc	plusw2,7,c
  2561  00236C  EFC2  F011         	goto	u2441
  2562  002370  0E01               	movlw	1
  2563  002372  50DB               	movf	plusw2,w,c
  2564  002374  E109               	bnz	u2440
  2565  002376  0E3C               	movlw	60
  2566  002378  5CDE               	subwf	postinc2,w,c
  2567  00237A  A0D8               	btfss	status,0,c
  2568  00237C  EFC2  F011         	goto	u2441
  2569  002380  EFC4  F011         	goto	u2440
  2570  002384                     u2441:
  2571  002384  EFD5  F011         	goto	l2611
  2572  002388                     u2440:
  2573  002388  C01A  FFD9         	movff	TimeAvg@pavghour,fsr2l
  2574  00238C  C01B  FFDA         	movff	TimeAvg@pavghour+1,fsr2h
  2575  002390  2ADE               	incf	postinc2,f,c
  2576  002392  0E00               	movlw	0
  2577  002394  22DD               	addwfc	postdec2,f,c
  2578  002396  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2579  00239A  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2580  00239E  0EC4               	movlw	196
  2581  0023A0  26DE               	addwf	postinc2,f,c
  2582  0023A2  0EFF               	movlw	255
  2583  0023A4  22DD               	addwfc	postdec2,f,c
  2584  0023A6  EFF0  F011         	goto	l210
  2585  0023AA                     l2611:
  2586  0023AA  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2587  0023AE  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2588  0023B2  0E01               	movlw	1
  2589  0023B4  BEDB               	btfsc	plusw2,7,c
  2590  0023B6  EFE1  F011         	goto	u2450
  2591  0023BA  EFDF  F011         	goto	u2451
  2592  0023BE                     u2451:
  2593  0023BE  EFF0  F011         	goto	l210
  2594  0023C2                     u2450:
  2595  0023C2  C01A  FFD9         	movff	TimeAvg@pavghour,fsr2l
  2596  0023C6  C01B  FFDA         	movff	TimeAvg@pavghour+1,fsr2h
  2597  0023CA  06DE               	decf	postinc2,f,c
  2598  0023CC  0E00               	movlw	0
  2599  0023CE  5ADD               	subwfb	postdec2,f,c
  2600  0023D0  0E3C               	movlw	60
  2601  0023D2  C01C  FFD9         	movff	TimeAvg@pavgminute,fsr2l
  2602  0023D6  C01D  FFDA         	movff	TimeAvg@pavgminute+1,fsr2h
  2603  0023DA  26DE               	addwf	postinc2,f,c
  2604  0023DC  0E00               	movlw	0
  2605  0023DE  22DD               	addwfc	postdec2,f,c
  2606  0023E0                     l210:
  2607  0023E0  0012               	return		;funcret
  2608  0023E2                     __end_of_TimeAvg:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function ___awmod *****************
  2612 ;; Defined at:
  2613 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  dividend        2    0[COMRAM] int 
  2616 ;;  divisor         2    2[COMRAM] int 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  sign            1    5[COMRAM] unsigned char 
  2619 ;;  counter         1    4[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  2    0[COMRAM] int 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;Total ram usage:        6 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_SunPleaseFixTheDamnClock
  2640 ;;		_TimeAvg
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text8
  2645  002636                     __ptext8:
  2646                           	callstack 0
  2647  002636                     ___awmod:
  2648                           	callstack 28
  2649  002636  0E00               	movlw	0
  2650  002638  6E06               	movwf	___awmod@sign^0,c
  2651  00263A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2652  00263C  EF24  F013         	goto	u2310
  2653  002640  EF22  F013         	goto	u2311
  2654  002644                     u2311:
  2655  002644  EF2A  F013         	goto	l2527
  2656  002648                     u2310:
  2657  002648  6C01               	negf	___awmod@dividend^0,c
  2658  00264A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2659  00264C  B0D8               	btfsc	status,0,c
  2660  00264E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2661  002650  0E01               	movlw	1
  2662  002652  6E06               	movwf	___awmod@sign^0,c
  2663  002654                     l2527:
  2664  002654  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2665  002656  EF31  F013         	goto	u2320
  2666  00265A  EF2F  F013         	goto	u2321
  2667  00265E                     u2321:
  2668  00265E  EF35  F013         	goto	l2531
  2669  002662                     u2320:
  2670  002662  6C03               	negf	___awmod@divisor^0,c
  2671  002664  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2672  002666  B0D8               	btfsc	status,0,c
  2673  002668  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2674  00266A                     l2531:
  2675  00266A  5003               	movf	___awmod@divisor^0,w,c
  2676  00266C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2677  00266E  B4D8               	btfsc	status,2,c
  2678  002670  EF3C  F013         	goto	u2331
  2679  002674  EF3E  F013         	goto	u2330
  2680  002678                     u2331:
  2681  002678  EF62  F013         	goto	l2547
  2682  00267C                     u2330:
  2683  00267C  0E01               	movlw	1
  2684  00267E  6E05               	movwf	___awmod@counter^0,c
  2685  002680  EF46  F013         	goto	l2537
  2686  002684                     l2535:
  2687  002684  90D8               	bcf	status,0,c
  2688  002686  3603               	rlcf	___awmod@divisor^0,f,c
  2689  002688  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2690  00268A  2A05               	incf	___awmod@counter^0,f,c
  2691  00268C                     l2537:
  2692  00268C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2693  00268E  EF4B  F013         	goto	u2341
  2694  002692  EF4D  F013         	goto	u2340
  2695  002696                     u2341:
  2696  002696  EF42  F013         	goto	l2535
  2697  00269A                     u2340:
  2698  00269A                     l2539:
  2699  00269A  5003               	movf	___awmod@divisor^0,w,c
  2700  00269C  5C01               	subwf	___awmod@dividend^0,w,c
  2701  00269E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2702  0026A0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2703  0026A2  A0D8               	btfss	status,0,c
  2704  0026A4  EF56  F013         	goto	u2351
  2705  0026A8  EF58  F013         	goto	u2350
  2706  0026AC                     u2351:
  2707  0026AC  EF5C  F013         	goto	l2543
  2708  0026B0                     u2350:
  2709  0026B0  5003               	movf	___awmod@divisor^0,w,c
  2710  0026B2  5E01               	subwf	___awmod@dividend^0,f,c
  2711  0026B4  5004               	movf	(___awmod@divisor+1)^0,w,c
  2712  0026B6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2713  0026B8                     l2543:
  2714  0026B8  90D8               	bcf	status,0,c
  2715  0026BA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2716  0026BC  3203               	rrcf	___awmod@divisor^0,f,c
  2717  0026BE  2E05               	decfsz	___awmod@counter^0,f,c
  2718  0026C0  EF4D  F013         	goto	l2539
  2719  0026C4                     l2547:
  2720  0026C4  5006               	movf	___awmod@sign^0,w,c
  2721  0026C6  B4D8               	btfsc	status,2,c
  2722  0026C8  EF68  F013         	goto	u2361
  2723  0026CC  EF6A  F013         	goto	u2360
  2724  0026D0                     u2361:
  2725  0026D0  EF6E  F013         	goto	l2551
  2726  0026D4                     u2360:
  2727  0026D4  6C01               	negf	___awmod@dividend^0,c
  2728  0026D6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2729  0026D8  B0D8               	btfsc	status,0,c
  2730  0026DA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2731  0026DC                     l2551:
  2732  0026DC  C001  F001         	movff	___awmod@dividend,?___awmod
  2733  0026E0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2734  0026E4  0012               	return		;funcret
  2735  0026E6                     __end_of___awmod:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function ___awdiv *****************
  2739 ;; Defined at:
  2740 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  dividend        2    9[COMRAM] int 
  2743 ;;  divisor         2   11[COMRAM] int 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  quotient        2   15[COMRAM] int 
  2746 ;;  sign            1   14[COMRAM] unsigned char 
  2747 ;;  counter         1   13[COMRAM] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  2    9[COMRAM] int 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2758 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2760 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;Total ram usage:        8 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 1
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_SunPleaseFixTheDamnClock
  2768 ;;		_TimeAvg
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text9
  2773  002572                     __ptext9:
  2774                           	callstack 0
  2775  002572                     ___awdiv:
  2776                           	callstack 28
  2777  002572  0E00               	movlw	0
  2778  002574  6E0F               	movwf	___awdiv@sign^0,c
  2779  002576  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
  2780  002578  EFC2  F012         	goto	u2250
  2781  00257C  EFC0  F012         	goto	u2251
  2782  002580                     u2251:
  2783  002580  EFC8  F012         	goto	l2483
  2784  002584                     u2250:
  2785  002584  6C0C               	negf	___awdiv@divisor^0,c
  2786  002586  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  2787  002588  B0D8               	btfsc	status,0,c
  2788  00258A  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  2789  00258C  0E01               	movlw	1
  2790  00258E  6E0F               	movwf	___awdiv@sign^0,c
  2791  002590                     l2483:
  2792  002590  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
  2793  002592  EFCF  F012         	goto	u2260
  2794  002596  EFCD  F012         	goto	u2261
  2795  00259A                     u2261:
  2796  00259A  EFD5  F012         	goto	l2489
  2797  00259E                     u2260:
  2798  00259E  6C0A               	negf	___awdiv@dividend^0,c
  2799  0025A0  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  2800  0025A2  B0D8               	btfsc	status,0,c
  2801  0025A4  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  2802  0025A6  0E01               	movlw	1
  2803  0025A8  1A0F               	xorwf	___awdiv@sign^0,f,c
  2804  0025AA                     l2489:
  2805  0025AA  0E00               	movlw	0
  2806  0025AC  6E11               	movwf	(___awdiv@quotient+1)^0,c
  2807  0025AE  0E00               	movlw	0
  2808  0025B0  6E10               	movwf	___awdiv@quotient^0,c
  2809  0025B2  500C               	movf	___awdiv@divisor^0,w,c
  2810  0025B4  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  2811  0025B6  B4D8               	btfsc	status,2,c
  2812  0025B8  EFE0  F012         	goto	u2271
  2813  0025BC  EFE2  F012         	goto	u2270
  2814  0025C0                     u2271:
  2815  0025C0  EF0A  F013         	goto	l2511
  2816  0025C4                     u2270:
  2817  0025C4  0E01               	movlw	1
  2818  0025C6  6E0E               	movwf	___awdiv@counter^0,c
  2819  0025C8  EFEA  F012         	goto	l2497
  2820  0025CC                     l2495:
  2821  0025CC  90D8               	bcf	status,0,c
  2822  0025CE  360C               	rlcf	___awdiv@divisor^0,f,c
  2823  0025D0  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  2824  0025D2  2A0E               	incf	___awdiv@counter^0,f,c
  2825  0025D4                     l2497:
  2826  0025D4  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  2827  0025D6  EFEF  F012         	goto	u2281
  2828  0025DA  EFF1  F012         	goto	u2280
  2829  0025DE                     u2281:
  2830  0025DE  EFE6  F012         	goto	l2495
  2831  0025E2                     u2280:
  2832  0025E2                     l2499:
  2833  0025E2  90D8               	bcf	status,0,c
  2834  0025E4  3610               	rlcf	___awdiv@quotient^0,f,c
  2835  0025E6  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  2836  0025E8  500C               	movf	___awdiv@divisor^0,w,c
  2837  0025EA  5C0A               	subwf	___awdiv@dividend^0,w,c
  2838  0025EC  500D               	movf	(___awdiv@divisor+1)^0,w,c
  2839  0025EE  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  2840  0025F0  A0D8               	btfss	status,0,c
  2841  0025F2  EFFD  F012         	goto	u2291
  2842  0025F6  EFFF  F012         	goto	u2290
  2843  0025FA                     u2291:
  2844  0025FA  EF04  F013         	goto	l2507
  2845  0025FE                     u2290:
  2846  0025FE  500C               	movf	___awdiv@divisor^0,w,c
  2847  002600  5E0A               	subwf	___awdiv@dividend^0,f,c
  2848  002602  500D               	movf	(___awdiv@divisor+1)^0,w,c
  2849  002604  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  2850  002606  8010               	bsf	___awdiv@quotient^0,0,c
  2851  002608                     l2507:
  2852  002608  90D8               	bcf	status,0,c
  2853  00260A  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  2854  00260C  320C               	rrcf	___awdiv@divisor^0,f,c
  2855  00260E  2E0E               	decfsz	___awdiv@counter^0,f,c
  2856  002610  EFF1  F012         	goto	l2499
  2857  002614                     l2511:
  2858  002614  500F               	movf	___awdiv@sign^0,w,c
  2859  002616  B4D8               	btfsc	status,2,c
  2860  002618  EF10  F013         	goto	u2301
  2861  00261C  EF12  F013         	goto	u2300
  2862  002620                     u2301:
  2863  002620  EF16  F013         	goto	l2515
  2864  002624                     u2300:
  2865  002624  6C10               	negf	___awdiv@quotient^0,c
  2866  002626  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  2867  002628  B0D8               	btfsc	status,0,c
  2868  00262A  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  2869  00262C                     l2515:
  2870  00262C  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  2871  002630  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  2872  002634  0012               	return		;funcret
  2873  002636                     __end_of___awdiv:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _TimeDiff *****************
  2877 ;; Defined at:
  2878 ;;		line 125 in file "timers.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  hour1           2    0[COMRAM] int 
  2881 ;;  minute1         2    2[COMRAM] int 
  2882 ;;  hour2           2    4[COMRAM] int 
  2883 ;;  minute2         2    6[COMRAM] int 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2    0[COMRAM] int 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2895 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2898 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;Total ram usage:        9 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_SunPleaseFixTheDamnClock
  2906 ;;		_TimeAvg
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text10
  2911  0026E6                     __ptext10:
  2912                           	callstack 0
  2913  0026E6                     _TimeDiff:
  2914                           	callstack 28
  2915  0026E6                     
  2916                           ;timers.c: 125: int TimeDiff(int hour1, int minute1, int hour2, int minute2);timers.c: 1
      +                          26: {;timers.c: 127:     if (hour2 > hour1) {
  2917  0026E6  5005               	movf	TimeDiff@hour2^0,w,c
  2918  0026E8  5C01               	subwf	TimeDiff@hour1^0,w,c
  2919  0026EA  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2920  0026EC  0A80               	xorlw	128
  2921  0026EE  6E09               	movwf	??_TimeDiff^0,c
  2922  0026F0  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2923  0026F2  0A80               	xorlw	128
  2924  0026F4  5809               	subwfb	??_TimeDiff^0,w,c
  2925  0026F6  B0D8               	btfsc	status,0,c
  2926  0026F8  EF80  F013         	goto	u2201
  2927  0026FC  EF82  F013         	goto	u2200
  2928  002700                     u2201:
  2929  002700  EF9C  F013         	goto	l2453
  2930  002704                     u2200:
  2931  002704  EF8B  F013         	goto	l2451
  2932  002708                     l2447:
  2933                           
  2934                           ;timers.c: 129:             --hour2;
  2935  002708  0605               	decf	TimeDiff@hour2^0,f,c
  2936  00270A  A0D8               	btfss	status,0,c
  2937  00270C  0606               	decf	(TimeDiff@hour2+1)^0,f,c
  2938  00270E                     
  2939                           ;timers.c: 130:             minute2 += 60;
  2940  00270E  0E3C               	movlw	60
  2941  002710  2607               	addwf	TimeDiff@minute2^0,f,c
  2942  002712  0E00               	movlw	0
  2943  002714  2208               	addwfc	(TimeDiff@minute2+1)^0,f,c
  2944  002716                     l2451:
  2945                           
  2946                           ;timers.c: 128:         while (hour2 > hour1) {
  2947  002716  5005               	movf	TimeDiff@hour2^0,w,c
  2948  002718  5C01               	subwf	TimeDiff@hour1^0,w,c
  2949  00271A  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2950  00271C  0A80               	xorlw	128
  2951  00271E  6E09               	movwf	??_TimeDiff^0,c
  2952  002720  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2953  002722  0A80               	xorlw	128
  2954  002724  5809               	subwfb	??_TimeDiff^0,w,c
  2955  002726  A0D8               	btfss	status,0,c
  2956  002728  EF98  F013         	goto	u2211
  2957  00272C  EF9A  F013         	goto	u2210
  2958  002730                     u2211:
  2959  002730  EF84  F013         	goto	l2447
  2960  002734                     u2210:
  2961  002734  EFC3  F013         	goto	l2463
  2962  002738                     l2453:
  2963  002738  5001               	movf	TimeDiff@hour1^0,w,c
  2964  00273A  5C05               	subwf	TimeDiff@hour2^0,w,c
  2965  00273C  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2966  00273E  0A80               	xorlw	128
  2967  002740  6E09               	movwf	??_TimeDiff^0,c
  2968  002742  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2969  002744  0A80               	xorlw	128
  2970  002746  5809               	subwfb	??_TimeDiff^0,w,c
  2971  002748  B0D8               	btfsc	status,0,c
  2972  00274A  EFA9  F013         	goto	u2221
  2973  00274E  EFAB  F013         	goto	u2220
  2974  002752                     u2221:
  2975  002752  EFC3  F013         	goto	l2463
  2976  002756                     u2220:
  2977  002756  EFB4  F013         	goto	l2461
  2978  00275A                     l2457:
  2979                           
  2980                           ;timers.c: 135:             --hour1;
  2981  00275A  0601               	decf	TimeDiff@hour1^0,f,c
  2982  00275C  A0D8               	btfss	status,0,c
  2983  00275E  0602               	decf	(TimeDiff@hour1+1)^0,f,c
  2984  002760                     
  2985                           ;timers.c: 136:             minute1 += 60;
  2986  002760  0E3C               	movlw	60
  2987  002762  2603               	addwf	TimeDiff@minute1^0,f,c
  2988  002764  0E00               	movlw	0
  2989  002766  2204               	addwfc	(TimeDiff@minute1+1)^0,f,c
  2990  002768                     l2461:
  2991                           
  2992                           ;timers.c: 134:         while (hour1 > hour2) {
  2993  002768  5001               	movf	TimeDiff@hour1^0,w,c
  2994  00276A  5C05               	subwf	TimeDiff@hour2^0,w,c
  2995  00276C  5006               	movf	(TimeDiff@hour2+1)^0,w,c
  2996  00276E  0A80               	xorlw	128
  2997  002770  6E09               	movwf	??_TimeDiff^0,c
  2998  002772  5002               	movf	(TimeDiff@hour1+1)^0,w,c
  2999  002774  0A80               	xorlw	128
  3000  002776  5809               	subwfb	??_TimeDiff^0,w,c
  3001  002778  A0D8               	btfss	status,0,c
  3002  00277A  EFC1  F013         	goto	u2231
  3003  00277E  EFC3  F013         	goto	u2230
  3004  002782                     u2231:
  3005  002782  EFAD  F013         	goto	l2457
  3006  002786                     u2230:
  3007  002786                     l2463:
  3008                           
  3009                           ;timers.c: 139:     return minute2 - minute1;
  3010  002786  5003               	movf	TimeDiff@minute1^0,w,c
  3011  002788  5C07               	subwf	TimeDiff@minute2^0,w,c
  3012  00278A  6E01               	movwf	?_TimeDiff^0,c
  3013  00278C  5004               	movf	(TimeDiff@minute1+1)^0,w,c
  3014  00278E  5808               	subwfb	(TimeDiff@minute2+1)^0,w,c
  3015  002790  6E02               	movwf	(?_TimeDiff+1)^0,c
  3016  002792  0012               	return		;funcret
  3017  002794                     __end_of_TimeDiff:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _SmallHours *****************
  3021 ;; Defined at:
  3022 ;;		line 43 in file "lights.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  hour            2    0[COMRAM] int 
  3025 ;;  minute          2    2[COMRAM] int 
  3026 ;;  dawnhour        2    4[COMRAM] int 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3038 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;Total ram usage:        6 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text11
  3053  002A52                     __ptext11:
  3054                           	callstack 0
  3055  002A52                     _SmallHours:
  3056                           	callstack 29
  3057  002A52                     
  3058                           ;lights.c: 43: void SmallHours(int hour, int minute, int dawnhour);lights.c: 44: {;light
      +                          s.c: 45:     if (hour >= 1 && hour < 5) {
  3059  002A52  BE02               	btfsc	(SmallHours@hour+1)^0,7,c
  3060  002A54  EF34  F015         	goto	u2861
  3061  002A58  5002               	movf	(SmallHours@hour+1)^0,w,c
  3062  002A5A  E108               	bnz	u2860
  3063  002A5C  0401               	decf	SmallHours@hour^0,w,c
  3064  002A5E  A0D8               	btfss	status,0,c
  3065  002A60  EF34  F015         	goto	u2861
  3066  002A64  EF36  F015         	goto	u2860
  3067  002A68                     u2861:
  3068  002A68  EF45  F015         	goto	l2819
  3069  002A6C                     u2860:
  3070  002A6C  BE02               	btfsc	(SmallHours@hour+1)^0,7,c
  3071  002A6E  EF44  F015         	goto	u2870
  3072  002A72  5002               	movf	(SmallHours@hour+1)^0,w,c
  3073  002A74  E107               	bnz	u2871
  3074  002A76  0E05               	movlw	5
  3075  002A78  5C01               	subwf	SmallHours@hour^0,w,c
  3076  002A7A  B0D8               	btfsc	status,0,c
  3077  002A7C  EF42  F015         	goto	u2871
  3078  002A80  EF44  F015         	goto	u2870
  3079  002A84                     u2871:
  3080  002A84  EF45  F015         	goto	l2819
  3081  002A88                     u2870:
  3082  002A88                     
  3083                           ;lights.c: 46:         LATHbits.LATH3 = 0;
  3084  002A88  9680               	bcf	128,3,c	;volatile
  3085  002A8A                     l2819:
  3086                           
  3087                           ;lights.c: 49:     if (hour == 5 && minute == 0) {
  3088  002A8A  0E05               	movlw	5
  3089  002A8C  1801               	xorwf	SmallHours@hour^0,w,c
  3090  002A8E  1002               	iorwf	(SmallHours@hour+1)^0,w,c
  3091  002A90  A4D8               	btfss	status,2,c
  3092  002A92  EF4D  F015         	goto	u2881
  3093  002A96  EF4F  F015         	goto	u2880
  3094  002A9A                     u2881:
  3095  002A9A  EF5E  F015         	goto	l132
  3096  002A9E                     u2880:
  3097  002A9E  5003               	movf	SmallHours@minute^0,w,c
  3098  002AA0  1004               	iorwf	(SmallHours@minute+1)^0,w,c
  3099  002AA2  A4D8               	btfss	status,2,c
  3100  002AA4  EF56  F015         	goto	u2891
  3101  002AA8  EF58  F015         	goto	u2890
  3102  002AAC                     u2891:
  3103  002AAC  EF5E  F015         	goto	l132
  3104  002AB0                     u2890:
  3105  002AB0                     
  3106                           ;lights.c: 50:         LATHbits.LATH3 = CM1CON0bits.OUT;
  3107  002AB0  010E               	movlb	14	; () banked
  3108  002AB2  ADD0               	btfss	208,6,b	;volatile
  3109  002AB4  D002               	bra	u2905
  3110  002AB6  8680               	bsf	128,3,c	;volatile
  3111  002AB8  D001               	bra	u2907
  3112  002ABA                     u2905:
  3113  002ABA  9680               	bcf	128,3,c	;volatile
  3114  002ABC                     u2907:
  3115  002ABC                     l132:
  3116  002ABC  0012               	return		;funcret
  3117  002ABE                     __end_of_SmallHours:
  3118                           	callstack 0
  3119                           
  3120 ;; *************** function _Lights_init *****************
  3121 ;; Defined at:
  3122 ;;		line 8 in file "lights.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		None
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text12
  3151  002E9E                     __ptext12:
  3152                           	callstack 0
  3153  002E9E                     _Lights_init:
  3154                           	callstack 29
  3155  002E9E                     
  3156                           ;lights.c: 11:     LATGbits.LATG0 = 0;
  3157  002E9E  907F               	bcf	127,0,c	;volatile
  3158                           
  3159                           ;lights.c: 12:     LATGbits.LATG1 = 0;
  3160  002EA0  927F               	bcf	127,1,c	;volatile
  3161                           
  3162                           ;lights.c: 13:     LATAbits.LATA2 = 0;
  3163  002EA2  9479               	bcf	121,2,c	;volatile
  3164                           
  3165                           ;lights.c: 14:     LATFbits.LATF6 = 0;
  3166  002EA4  9C7E               	bcf	126,6,c	;volatile
  3167                           
  3168                           ;lights.c: 15:     LATAbits.LATA4 = 0;
  3169  002EA6  9879               	bcf	121,4,c	;volatile
  3170                           
  3171                           ;lights.c: 16:     LATHbits.LATH3 = 0;
  3172  002EA8  9680               	bcf	128,3,c	;volatile
  3173                           
  3174                           ;lights.c: 19:     TRISGbits.TRISG0 = 0;
  3175  002EAA  9087               	bcf	135,0,c	;volatile
  3176                           
  3177                           ;lights.c: 20:     TRISGbits.TRISG1 = 0;
  3178  002EAC  9287               	bcf	135,1,c	;volatile
  3179                           
  3180                           ;lights.c: 21:     TRISAbits.TRISA2 = 0;
  3181  002EAE  9481               	bcf	129,2,c	;volatile
  3182                           
  3183                           ;lights.c: 22:     TRISFbits.TRISF6 = 0;
  3184  002EB0  9C86               	bcf	134,6,c	;volatile
  3185                           
  3186                           ;lights.c: 23:     TRISAbits.TRISA4 = 0;
  3187  002EB2  9881               	bcf	129,4,c	;volatile
  3188                           
  3189                           ;lights.c: 24:     TRISHbits.TRISH3 = 0;
  3190  002EB4  9688               	bcf	136,3,c	;volatile
  3191  002EB6  0012               	return		;funcret
  3192  002EB8                     __end_of_Lights_init:
  3193                           	callstack 0
  3194                           
  3195 ;; *************** function _LEDarray_disp_bin *****************
  3196 ;; Defined at:
  3197 ;;		line 30 in file "lights.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  number          2    0[COMRAM] int 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		None
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;Total ram usage:        2 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text13
  3226  0029E2                     __ptext13:
  3227                           	callstack 0
  3228  0029E2                     _LEDarray_disp_bin:
  3229                           	callstack 29
  3230  0029E2                     
  3231                           ;lights.c: 30: void LEDarray_disp_bin(int number);lights.c: 31: {;lights.c: 33:     if (
      +                          number & 0b00001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  3232  0029E2  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  3233  0029E4  EFF6  F014         	goto	u2811
  3234  0029E8  EFF8  F014         	goto	u2810
  3235  0029EC                     u2811:
  3236  0029EC  EFFB  F014         	goto	l117
  3237  0029F0                     u2810:
  3238  0029F0  807F               	bsf	127,0,c	;volatile
  3239  0029F2  EFFC  F014         	goto	l118
  3240  0029F6                     l117:
  3241  0029F6  907F               	bcf	127,0,c	;volatile
  3242  0029F8                     l118:
  3243                           
  3244                           ;lights.c: 34:     if (number & 0b00010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 = 0;
      +                          }
  3245  0029F8  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  3246  0029FA  EF01  F015         	goto	u2821
  3247  0029FE  EF03  F015         	goto	u2820
  3248  002A02                     u2821:
  3249  002A02  EF06  F015         	goto	l119
  3250  002A06                     u2820:
  3251  002A06  827F               	bsf	127,1,c	;volatile
  3252  002A08  EF07  F015         	goto	l120
  3253  002A0C                     l119:
  3254  002A0C  927F               	bcf	127,1,c	;volatile
  3255  002A0E                     l120:
  3256                           
  3257                           ;lights.c: 35:     if (number & 0b00100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 = 0;
      +                          }
  3258  002A0E  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  3259  002A10  EF0C  F015         	goto	u2831
  3260  002A14  EF0E  F015         	goto	u2830
  3261  002A18                     u2831:
  3262  002A18  EF11  F015         	goto	l121
  3263  002A1C                     u2830:
  3264  002A1C  8479               	bsf	121,2,c	;volatile
  3265  002A1E  EF12  F015         	goto	l122
  3266  002A22                     l121:
  3267  002A22  9479               	bcf	121,2,c	;volatile
  3268  002A24                     l122:
  3269                           
  3270                           ;lights.c: 36:     if (number & 0b01000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 = 0;
      +                          }
  3271  002A24  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  3272  002A26  EF17  F015         	goto	u2841
  3273  002A2A  EF19  F015         	goto	u2840
  3274  002A2E                     u2841:
  3275  002A2E  EF1C  F015         	goto	l123
  3276  002A32                     u2840:
  3277  002A32  8C7E               	bsf	126,6,c	;volatile
  3278  002A34  EF1D  F015         	goto	l124
  3279  002A38                     l123:
  3280  002A38  9C7E               	bcf	126,6,c	;volatile
  3281  002A3A                     l124:
  3282                           
  3283                           ;lights.c: 37:     if (number & 0b10000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 = 0;
      +                          }
  3284  002A3A  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  3285  002A3C  EF22  F015         	goto	u2851
  3286  002A40  EF24  F015         	goto	u2850
  3287  002A44                     u2851:
  3288  002A44  EF27  F015         	goto	l125
  3289  002A48                     u2850:
  3290  002A48  8879               	bsf	121,4,c	;volatile
  3291  002A4A  EF28  F015         	goto	l127
  3292  002A4E                     l125:
  3293  002A4E  9879               	bcf	121,4,c	;volatile
  3294  002A50                     l127:
  3295  002A50  0012               	return		;funcret
  3296  002A52                     __end_of_LEDarray_disp_bin:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _LCD_Init *****************
  3300 ;; Defined at:
  3301 ;;		line 48 in file "LCD.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;Total ram usage:        1 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 4
  3322 ;; This function calls:
  3323 ;;		_LCD_sendbyte
  3324 ;;		_LCD_sendnibble
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text14
  3331  0028E4                     __ptext14:
  3332                           	callstack 0
  3333  0028E4                     _LCD_Init:
  3334                           	callstack 26
  3335  0028E4                     
  3336                           ;LCD.c: 52:     TRISCbits.TRISC6 = 0;
  3337  0028E4  9C83               	bcf	131,6,c	;volatile
  3338                           
  3339                           ;LCD.c: 53:     TRISCbits.TRISC2 = 0;
  3340  0028E6  9483               	bcf	131,2,c	;volatile
  3341                           
  3342                           ;LCD.c: 54:     TRISBbits.TRISB3 = 0;
  3343  0028E8  9682               	bcf	130,3,c	;volatile
  3344                           
  3345                           ;LCD.c: 55:     TRISBbits.TRISB2 = 0;
  3346  0028EA  9482               	bcf	130,2,c	;volatile
  3347                           
  3348                           ;LCD.c: 56:     TRISEbits.TRISE3 = 0;
  3349  0028EC  9685               	bcf	133,3,c	;volatile
  3350                           
  3351                           ;LCD.c: 57:     TRISEbits.TRISE1 = 0;
  3352  0028EE  9285               	bcf	133,1,c	;volatile
  3353                           
  3354                           ;LCD.c: 58:     LATCbits.LATC6 = 0;
  3355  0028F0  9C7B               	bcf	123,6,c	;volatile
  3356                           
  3357                           ;LCD.c: 59:     LATCbits.LATC2 = 0;
  3358  0028F2  947B               	bcf	123,2,c	;volatile
  3359                           
  3360                           ;LCD.c: 60:     LATBbits.LATB3 = 0;
  3361  0028F4  967A               	bcf	122,3,c	;volatile
  3362                           
  3363                           ;LCD.c: 61:     LATBbits.LATB2 = 0;
  3364  0028F6  947A               	bcf	122,2,c	;volatile
  3365                           
  3366                           ;LCD.c: 62:     LATEbits.LATE3 = 0;
  3367  0028F8  967D               	bcf	125,3,c	;volatile
  3368                           
  3369                           ;LCD.c: 63:     LATEbits.LATE1 = 0;
  3370  0028FA  927D               	bcf	125,1,c	;volatile
  3371  0028FC                     
  3372                           ;LCD.c: 69:     LCD_sendnibble(0b0011);
  3373  0028FC  0E03               	movlw	3
  3374  0028FE  EC5F  F015         	call	_LCD_sendnibble
  3375  002902                     
  3376                           ;LCD.c: 70:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3377  002902  0EA0               	movlw	160
  3378  002904                     u3097:
  3379  002904  D000               	nop2	
  3380  002906  2EE8               	decfsz	wreg,f,c
  3381  002908  D7FD               	bra	u3097
  3382  00290A                     
  3383                           ;LCD.c: 71:     LCD_sendbyte(0b00101000,0);
  3384  00290A  0E00               	movlw	0
  3385  00290C  6E02               	movwf	LCD_sendbyte@type^0,c
  3386  00290E  0E28               	movlw	40
  3387  002910  ECE0  F016         	call	_LCD_sendbyte
  3388  002914                     
  3389                           ;LCD.c: 72:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3390  002914  0EA0               	movlw	160
  3391  002916                     u3107:
  3392  002916  D000               	nop2	
  3393  002918  2EE8               	decfsz	wreg,f,c
  3394  00291A  D7FD               	bra	u3107
  3395  00291C                     
  3396                           ;LCD.c: 73:     LCD_sendbyte(0b00101000,0);
  3397  00291C  0E00               	movlw	0
  3398  00291E  6E02               	movwf	LCD_sendbyte@type^0,c
  3399  002920  0E28               	movlw	40
  3400  002922  ECE0  F016         	call	_LCD_sendbyte
  3401  002926                     
  3402                           ;LCD.c: 74:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3403  002926  0EA0               	movlw	160
  3404  002928                     u3117:
  3405  002928  D000               	nop2	
  3406  00292A  2EE8               	decfsz	wreg,f,c
  3407  00292C  D7FD               	bra	u3117
  3408  00292E                     
  3409                           ;LCD.c: 75:     LCD_sendbyte(0b00001100,0);
  3410  00292E  0E00               	movlw	0
  3411  002930  6E02               	movwf	LCD_sendbyte@type^0,c
  3412  002932  0E0C               	movlw	12
  3413  002934  ECE0  F016         	call	_LCD_sendbyte
  3414  002938                     
  3415                           ;LCD.c: 76:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3416  002938  0EA0               	movlw	160
  3417  00293A                     u3127:
  3418  00293A  D000               	nop2	
  3419  00293C  2EE8               	decfsz	wreg,f,c
  3420  00293E  D7FD               	bra	u3127
  3421  002940                     
  3422                           ;LCD.c: 77:     LCD_sendbyte(0b00000001,0);
  3423  002940  0E00               	movlw	0
  3424  002942  6E02               	movwf	LCD_sendbyte@type^0,c
  3425  002944  0E01               	movlw	1
  3426  002946  ECE0  F016         	call	_LCD_sendbyte
  3427  00294A                     
  3428                           ;LCD.c: 78:     _delay((unsigned long)((1600)*(64000000/4000000.0)));
  3429  00294A  0E22               	movlw	34
  3430  00294C  6E04               	movwf	??_LCD_Init^0,c
  3431  00294E  0E3E               	movlw	62
  3432  002950                     u3137:
  3433  002950  2EE8               	decfsz	wreg,f,c
  3434  002952  D7FE               	bra	u3137
  3435  002954  2E04               	decfsz	??_LCD_Init^0,f,c
  3436  002956  D7FC               	bra	u3137
  3437  002958                     
  3438                           ;LCD.c: 79:     LCD_sendbyte(0b00000110,0);
  3439  002958  0E00               	movlw	0
  3440  00295A  6E02               	movwf	LCD_sendbyte@type^0,c
  3441  00295C  0E06               	movlw	6
  3442  00295E  ECE0  F016         	call	_LCD_sendbyte
  3443  002962  0012               	return		;funcret
  3444  002964                     __end_of_LCD_Init:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _Interrupts_init *****************
  3448 ;; Defined at:
  3449 ;;		line 8 in file "interrupts.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		None
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 1
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text15
  3478  002EF0                     __ptext15:
  3479                           	callstack 0
  3480  002EF0                     _Interrupts_init:
  3481                           	callstack 29
  3482  002EF0                     
  3483                           ;interrupts.c: 11:     PIE0bits.TMR0IE = 1;
  3484  002EF0  010E               	movlb	14	; () banked
  3485  002EF2  8B29               	bsf	41,5,b	;volatile
  3486                           
  3487                           ;interrupts.c: 12:     PIE2bits.C1IE = 1;
  3488  002EF4  812B               	bsf	43,0,b	;volatile
  3489                           
  3490                           ;interrupts.c: 13:     INTCONbits.PEIE = 1;
  3491  002EF6  8CF2               	bsf	242,6,c	;volatile
  3492                           
  3493                           ;interrupts.c: 14:     INTCONbits.GIE = 1;
  3494  002EF8  8EF2               	bsf	242,7,c	;volatile
  3495  002EFA                     
  3496                           ; BSR set to: 14
  3497  002EFA  0012               	return		;funcret
  3498  002EFC                     __end_of_Interrupts_init:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function _Display *****************
  3502 ;; Defined at:
  3503 ;;		line 106 in file "LCD.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  year            2   24[BANK0 ] unsigned int 
  3506 ;;  month           1   26[BANK0 ] unsigned char 
  3507 ;;  day             1   27[BANK0 ] unsigned char 
  3508 ;;  hour            2   28[BANK0 ] int 
  3509 ;;  minute          2   30[BANK0 ] int 
  3510 ;;  dayofweek       1   32[BANK0 ] unsigned char 
  3511 ;;  DST             1   33[BANK0 ] unsigned char 
  3512 ;;  dawnhour        2   34[BANK0 ] int 
  3513 ;;  dawnminute      2   36[BANK0 ] int 
  3514 ;;  duskhour        2   38[BANK0 ] int 
  3515 ;;  duskminute      2   40[BANK0 ] int 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  string         16   42[BANK0 ] unsigned char [16]
  3518 ;;  string2        15   58[BANK0 ] unsigned char [15]
  3519 ;;  iyear           2   73[BANK0 ] int 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3529 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;Total ram usage:       51 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 9
  3536 ;; This function calls:
  3537 ;;		_LCD_sendstring
  3538 ;;		_LCD_setline
  3539 ;;		_sprintf
  3540 ;; This function is called by:
  3541 ;;		_main
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text16
  3546  002794                     __ptext16:
  3547                           	callstack 0
  3548  002794                     _Display:
  3549                           	callstack 21
  3550  002794                     
  3551                           ;LCD.c: 106: void Display(unsigned int year, char month, char day, int hour, int minute,
      +                           char dayofweek, char DST, int dawnhour, int dawnminute, int duskhour, int duskminute);L
      +                          CD.c: 107: {;LCD.c: 108:     char string[16];;LCD.c: 109:     char string2[15];;LCD.c: 1
      +                          10:     int iyear = year;
  3552  002794  C078  F0A9         	movff	Display@year,Display@iyear
  3553  002798  C079  F0AA         	movff	Display@year+1,Display@iyear+1
  3554  00279C                     
  3555                           ;LCD.c: 111:     sprintf(string,"%02d/%02d/%d %02d:%02d",day,month,iyear,hour,minute);
  3556  00279C  0E8A               	movlw	low Display@string
  3557  00279E  0100               	movlb	0	; () banked
  3558  0027A0  6F60               	movwf	sprintf@s& (0+255),b
  3559  0027A2  0E00               	movlw	high Display@string
  3560  0027A4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3561  0027A6  0E1B               	movlw	low STR_1
  3562  0027A8  6F62               	movwf	sprintf@fmt& (0+255),b
  3563  0027AA  0E0E               	movlw	high STR_1
  3564  0027AC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3565  0027AE  C07B  F064         	movff	Display@day,?_sprintf+4
  3566  0027B2  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3567  0027B4  C07A  F066         	movff	Display@month,?_sprintf+6
  3568  0027B8  6B67               	clrf	(?_sprintf+7)& (0+255),b
  3569  0027BA  C0A9  F068         	movff	Display@iyear,?_sprintf+8
  3570  0027BE  C0AA  F069         	movff	Display@iyear+1,?_sprintf+9
  3571  0027C2  C07C  F06A         	movff	Display@hour,?_sprintf+10
  3572  0027C6  C07D  F06B         	movff	Display@hour+1,?_sprintf+11
  3573  0027CA  C07E  F06C         	movff	Display@minute,?_sprintf+12
  3574  0027CE  C07F  F06D         	movff	Display@minute+1,?_sprintf+13
  3575  0027D2  ECF8  F015         	call	_sprintf	;wreg free
  3576  0027D6                     
  3577                           ;LCD.c: 112:     LCD_setline(1);
  3578  0027D6  0E01               	movlw	1
  3579  0027D8  EC8C  F016         	call	_LCD_setline
  3580  0027DC                     
  3581                           ;LCD.c: 113:     LCD_sendstring(string);
  3582  0027DC  0E8A               	movlw	low Display@string
  3583  0027DE  6E04               	movwf	LCD_sendstring@string^0,c
  3584  0027E0  0E00               	movlw	high Display@string
  3585  0027E2  6E05               	movwf	(LCD_sendstring@string+1)^0,c
  3586  0027E4  ECFB  F016         	call	_LCD_sendstring	;wreg free
  3587  0027E8                     
  3588                           ;LCD.c: 114:     sprintf(string2,"%02d:%02d %02d:%02d %d %d",dawnhour,dawnminute,duskhou
      +                          r,duskminute,dayofweek,DST);
  3589  0027E8  0E9A               	movlw	low Display@string2
  3590  0027EA  0100               	movlb	0	; () banked
  3591  0027EC  6F60               	movwf	sprintf@s& (0+255),b
  3592  0027EE  0E00               	movlw	high Display@string2
  3593  0027F0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3594  0027F2  0E01               	movlw	low STR_2
  3595  0027F4  6F62               	movwf	sprintf@fmt& (0+255),b
  3596  0027F6  0E0E               	movlw	high STR_2
  3597  0027F8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3598  0027FA  C082  F064         	movff	Display@dawnhour,?_sprintf+4
  3599  0027FE  C083  F065         	movff	Display@dawnhour+1,?_sprintf+5
  3600  002802  C084  F066         	movff	Display@dawnminute,?_sprintf+6
  3601  002806  C085  F067         	movff	Display@dawnminute+1,?_sprintf+7
  3602  00280A  C086  F068         	movff	Display@duskhour,?_sprintf+8
  3603  00280E  C087  F069         	movff	Display@duskhour+1,?_sprintf+9
  3604  002812  C088  F06A         	movff	Display@duskminute,?_sprintf+10
  3605  002816  C089  F06B         	movff	Display@duskminute+1,?_sprintf+11
  3606  00281A  C080  F06C         	movff	Display@dayofweek,?_sprintf+12
  3607  00281E  6B6D               	clrf	(?_sprintf+13)& (0+255),b
  3608  002820  C081  F06E         	movff	Display@DST,?_sprintf+14
  3609  002824  6B6F               	clrf	(?_sprintf+15)& (0+255),b
  3610  002826  ECF8  F015         	call	_sprintf	;wreg free
  3611  00282A                     
  3612                           ;LCD.c: 115:     LCD_setline(2);
  3613  00282A  0E02               	movlw	2
  3614  00282C  EC8C  F016         	call	_LCD_setline
  3615                           
  3616                           ;LCD.c: 116:     LCD_sendstring(string2);
  3617  002830  0E9A               	movlw	low Display@string2
  3618  002832  6E04               	movwf	LCD_sendstring@string^0,c
  3619  002834  0E00               	movlw	high Display@string2
  3620  002836  6E05               	movwf	(LCD_sendstring@string+1)^0,c
  3621  002838  ECFB  F016         	call	_LCD_sendstring	;wreg free
  3622  00283C  0012               	return		;funcret
  3623  00283E                     __end_of_Display:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _sprintf *****************
  3627 ;; Defined at:
  3628 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3631 ;;		 -> Display@string2(15), Display@string(16), 
  3632 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3633 ;;		 -> STR_2(26), STR_1(23), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  f               6   18[BANK0 ] struct _IO_FILE
  3636 ;;  ap              2   16[BANK0 ] PTR void [1]
  3637 ;;		 -> ?_sprintf(2), 
  3638 ;;  ret             2    0        int 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  2    0[BANK0 ] int 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3648 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;Total ram usage:       24 bytes
  3653 ;; Hardware stack levels used: 1
  3654 ;; Hardware stack levels required when called: 8
  3655 ;; This function calls:
  3656 ;;		_vfprintf
  3657 ;; This function is called by:
  3658 ;;		_Display
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text17
  3663  002BF0                     __ptext17:
  3664                           	callstack 0
  3665  002BF0                     _sprintf:
  3666                           	callstack 21
  3667  002BF0  0E64               	movlw	low (?_sprintf+4)
  3668  002BF2  0100               	movlb	0	; () banked
  3669  002BF4  6F70               	movwf	sprintf@ap& (0+255),b
  3670  002BF6  0E00               	movlw	high (?_sprintf+4)
  3671  002BF8  6F71               	movwf	(sprintf@ap+1)& (0+255),b
  3672  002BFA  C060  F072         	movff	sprintf@s,sprintf@f
  3673  002BFE  C061  F073         	movff	sprintf@s+1,sprintf@f+1
  3674  002C02                     
  3675                           ; BSR set to: 0
  3676  002C02  0E00               	movlw	0
  3677  002C04  6F75               	movwf	(sprintf@f+3)& (0+255),b
  3678  002C06  0E00               	movlw	0
  3679  002C08  6F74               	movwf	(sprintf@f+2)& (0+255),b
  3680  002C0A                     
  3681                           ; BSR set to: 0
  3682  002C0A  0E00               	movlw	0
  3683  002C0C  6F77               	movwf	(sprintf@f+5)& (0+255),b
  3684  002C0E  0E00               	movlw	0
  3685  002C10  6F76               	movwf	(sprintf@f+4)& (0+255),b
  3686  002C12                     
  3687                           ; BSR set to: 0
  3688  002C12  0E72               	movlw	low sprintf@f
  3689  002C14  6E56               	movwf	vfprintf@fp^0,c
  3690  002C16  0E00               	movlw	high sprintf@f
  3691  002C18  6E57               	movwf	(vfprintf@fp+1)^0,c
  3692  002C1A  C062  F058         	movff	sprintf@fmt,vfprintf@fmt
  3693  002C1E  C063  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3694  002C22  0E70               	movlw	low sprintf@ap
  3695  002C24  6E5A               	movwf	vfprintf@ap^0,c
  3696  002C26  0E00               	movlw	high sprintf@ap
  3697  002C28  6E5B               	movwf	(vfprintf@ap+1)^0,c
  3698  002C2A  EC93  F015         	call	_vfprintf	;wreg free
  3699  002C2E  0100               	movlb	0	; () banked
  3700  002C30  5174               	movf	(sprintf@f+2)& (0+255),w,b
  3701  002C32  2560               	addwf	sprintf@s& (0+255),w,b
  3702  002C34  6ED9               	movwf	fsr2l,c
  3703  002C36  5175               	movf	(sprintf@f+3)& (0+255),w,b
  3704  002C38  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  3705  002C3A  6EDA               	movwf	fsr2h,c
  3706  002C3C  0E00               	movlw	0
  3707  002C3E  6EDF               	movwf	indf2,c
  3708  002C40                     
  3709                           ; BSR set to: 0
  3710  002C40  0012               	return		;funcret
  3711  002C42                     __end_of_sprintf:
  3712                           	callstack 0
  3713                           
  3714 ;; *************** function _vfprintf *****************
  3715 ;; Defined at:
  3716 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  3719 ;;		 -> sprintf@f(6), 
  3720 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  3721 ;;		 -> STR_2(26), STR_1(23), 
  3722 ;;  ap              2   89[COMRAM] PTR PTR void 
  3723 ;;		 -> sprintf@ap(2), 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  3726 ;;		 -> STR_2(26), STR_1(23), 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2   85[COMRAM] int 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3736 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;Total ram usage:        8 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 7
  3743 ;; This function calls:
  3744 ;;		_vfpfcnvrt
  3745 ;; This function is called by:
  3746 ;;		_sprintf
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text18
  3751  002B26                     __ptext18:
  3752                           	callstack 0
  3753  002B26                     _vfprintf:
  3754                           	callstack 21
  3755  002B26                     
  3756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3757  002B26  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  3758  002B2A  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3759  002B2E                     
  3760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3761  002B2E  0E00               	movlw	0
  3762  002B30  0100               	movlb	0	; () banked
  3763  002B32  6FBE               	movwf	(_nout+1)& (0+255),b
  3764  002B34  0E00               	movlw	0
  3765  002B36  6FBD               	movwf	_nout& (0+255),b
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3768  002B38  EFB1  F015         	goto	l2577
  3769  002B3C                     l2575:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3773  002B3C  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3774  002B40  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3775  002B44  0E5C               	movlw	low vfprintf@cfmt
  3776  002B46  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3777  002B48  0E00               	movlw	high vfprintf@cfmt
  3778  002B4A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3779  002B4C  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3780  002B50  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3781  002B54  EC45  F009         	call	_vfpfcnvrt	;wreg free
  3782  002B58  5040               	movf	?_vfpfcnvrt^0,w,c
  3783  002B5A  0100               	movlb	0	; () banked
  3784  002B5C  27BD               	addwf	_nout& (0+255),f,b
  3785  002B5E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3786  002B60  23BE               	addwfc	(_nout+1)& (0+255),f,b
  3787  002B62                     l2577:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3791  002B62  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3792  002B66  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3793  002B6A                     	if	0	;tblptru may be non-zero
  3794  002B6A                     	endif
  3795  002B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3796  002B6A  0E00               	movlw	low (__mediumconst shr (0+16))
  3797  002B6C  6EF8               	movwf	tblptru,c
  3798  002B6E                     	endif
  3799  002B6E  0008               	tblrd		*
  3800  002B70  50F5               	movf	tablat,w,c
  3801  002B72  0900               	iorlw	0
  3802  002B74  A4D8               	btfss	status,2,c
  3803  002B76  EFBF  F015         	goto	u2401
  3804  002B7A  EFC1  F015         	goto	u2400
  3805  002B7E                     u2401:
  3806  002B7E  EF9E  F015         	goto	l2575
  3807  002B82                     u2400:
  3808  002B82                     
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3811  002B82  C0BD  F056         	movff	_nout,?_vfprintf
  3812  002B86  C0BE  F057         	movff	_nout+1,?_vfprintf+1
  3813  002B8A                     
  3814                           ; BSR set to: 0
  3815  002B8A  0012               	return		;funcret
  3816  002B8C                     __end_of_vfprintf:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _vfpfcnvrt *****************
  3820 ;; Defined at:
  3821 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3824 ;;		 -> sprintf@f(6), 
  3825 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3826 ;;		 -> vfprintf@cfmt(2), 
  3827 ;;  ap              2   67[COMRAM] PTR PTR void 
  3828 ;;		 -> sprintf@ap(2), 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  ll              8   73[COMRAM] long long 
  3831 ;;  llu             8    0        unsigned long long 
  3832 ;;  f               4    0        unsigned long long 
  3833 ;;  vp              3    0        PTR void 
  3834 ;;  ct              3    0        unsigned char [3]
  3835 ;;  cp              3    0        PTR unsigned char 
  3836 ;;  done            2   81[COMRAM] int 
  3837 ;;  i               2    0        int 
  3838 ;;  c               1    0        unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2   63[COMRAM] int 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3848 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;Total ram usage:       22 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 6
  3855 ;; This function calls:
  3856 ;;		_atoi
  3857 ;;		_dtoa
  3858 ;;		_fputc
  3859 ;;		_isdigit
  3860 ;; This function is called by:
  3861 ;;		_vfprintf
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text19
  3866  00128A                     __ptext19:
  3867                           	callstack 0
  3868  00128A                     _vfpfcnvrt:
  3869                           	callstack 21
  3870  00128A                     
  3871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3872  00128A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3873  00128E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3874  001292  CFDE FFF6          	movff	postinc2,tblptrl
  3875  001296  CFDD FFF7          	movff	postdec2,tblptrh
  3876  00129A                     	if	0	;tblptru may be non-zero
  3877  00129A                     	endif
  3878  00129A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3879  00129A  0E00               	movlw	low (__mediumconst shr (0+16))
  3880  00129C  6EF8               	movwf	tblptru,c
  3881  00129E                     	endif
  3882  00129E  0008               	tblrd		*
  3883  0012A0  50F5               	movf	tablat,w,c
  3884  0012A2  0A25               	xorlw	37
  3885  0012A4  A4D8               	btfss	status,2,c
  3886  0012A6  EF57  F009         	goto	u2091
  3887  0012AA  EF59  F009         	goto	u2090
  3888  0012AE                     u2091:
  3889  0012AE  EFF2  F00A         	goto	l2429
  3890  0012B2                     u2090:
  3891  0012B2                     
  3892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3893  0012B2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3894  0012B6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3895  0012BA  2ADE               	incf	postinc2,f,c
  3896  0012BC  0E00               	movlw	0
  3897  0012BE  22DD               	addwfc	postdec2,f,c
  3898  0012C0                     
  3899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3900  0012C0  0E00               	movlw	0
  3901  0012C2  0100               	movlb	0	; () banked
  3902  0012C4  6FC0               	movwf	(_width+1)& (0+255),b
  3903  0012C6  0E00               	movlw	0
  3904  0012C8  6FBF               	movwf	_width& (0+255),b
  3905  0012CA  C0BF  F0C3         	movff	_width,_flags
  3906  0012CE  C0C0  F0C4         	movff	_width+1,_flags+1
  3907  0012D2                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3910  0012D2  69C1               	setf	_prec& (0+255),b
  3911  0012D4  69C2               	setf	(_prec+1)& (0+255),b
  3912  0012D6                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3915  0012D6  0E00               	movlw	0
  3916  0012D8  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  3917  0012DA  0E00               	movlw	0
  3918  0012DC  6E52               	movwf	vfpfcnvrt@done^0,c
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3921  0012DE  EFBE  F009         	goto	l2381
  3922  0012E2                     l2355:
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3925  0012E2  0100               	movlb	0	; () banked
  3926  0012E4  81C3               	bsf	_flags& (0+255),0,b
  3927  0012E6                     l2357:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3931  0012E6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3932  0012EA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3933  0012EE  2ADE               	incf	postinc2,f,c
  3934  0012F0  0E00               	movlw	0
  3935  0012F2  22DD               	addwfc	postdec2,f,c
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3938  0012F4  EFBE  F009         	goto	l2381
  3939  0012F8                     l2359:
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3942  0012F8  0100               	movlb	0	; () banked
  3943  0012FA  83C3               	bsf	_flags& (0+255),1,b
  3944  0012FC  EF73  F009         	goto	l2357
  3945  001300                     l2363:
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3948  001300  0100               	movlb	0	; () banked
  3949  001302  85C3               	bsf	_flags& (0+255),2,b
  3950  001304  EF73  F009         	goto	l2357
  3951  001308                     l2367:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3954  001308  0100               	movlb	0	; () banked
  3955  00130A  87C3               	bsf	_flags& (0+255),3,b
  3956  00130C  EF73  F009         	goto	l2357
  3957  001310                     l2371:
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3960  001310  0100               	movlb	0	; () banked
  3961  001312  89C3               	bsf	_flags& (0+255),4,b
  3962  001314  EF73  F009         	goto	l2357
  3963  001318                     l2375:
  3964                           
  3965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3966  001318  0E00               	movlw	0
  3967  00131A  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  3968  00131C  0E01               	movlw	1
  3969  00131E  6E52               	movwf	vfpfcnvrt@done^0,c
  3970                           
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3972  001320  EFBE  F009         	goto	l2381
  3973  001324                     l2379:
  3974  001324  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3975  001328  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3976  00132C  CFDE FFF6          	movff	postinc2,tblptrl
  3977  001330  CFDD FFF7          	movff	postdec2,tblptrh
  3978  001334                     	if	0	;tblptru may be non-zero
  3979  001334                     	endif
  3980  001334                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3981  001334  0E00               	movlw	low (__mediumconst shr (0+16))
  3982  001336  6EF8               	movwf	tblptru,c
  3983  001338                     	endif
  3984  001338  0008               	tblrd		*
  3985  00133A  50F5               	movf	tablat,w,c
  3986  00133C  6E46               	movwf	??_vfpfcnvrt^0,c
  3987  00133E  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  3988                           
  3989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3990                           ; Switch size 1, requested type "simple"
  3991                           ; Number of cases is 1, Range of values is 0 to 0
  3992                           ; switch strategies available:
  3993                           ; Name         Instructions Cycles
  3994                           ; simple_byte            4     3 (average)
  3995                           ;	Chosen strategy is simple_byte
  3996  001340  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3997  001342  0A00               	xorlw	0	; case 0
  3998  001344  B4D8               	btfsc	status,2,c
  3999  001346  EFA7  F009         	goto	l2993
  4000  00134A  EF8C  F009         	goto	l2375
  4001  00134E                     l2993:
  4002                           
  4003                           ; Switch size 1, requested type "simple"
  4004                           ; Number of cases is 5, Range of values is 32 to 48
  4005                           ; switch strategies available:
  4006                           ; Name         Instructions Cycles
  4007                           ; simple_byte           16     9 (average)
  4008                           ;	Chosen strategy is simple_byte
  4009  00134E  5046               	movf	??_vfpfcnvrt^0,w,c
  4010  001350  0A20               	xorlw	32	; case 32
  4011  001352  B4D8               	btfsc	status,2,c
  4012  001354  EF84  F009         	goto	l2367
  4013  001358  0A03               	xorlw	3	; case 35
  4014  00135A  B4D8               	btfsc	status,2,c
  4015  00135C  EF88  F009         	goto	l2371
  4016  001360  0A08               	xorlw	8	; case 43
  4017  001362  B4D8               	btfsc	status,2,c
  4018  001364  EF80  F009         	goto	l2363
  4019  001368  0A06               	xorlw	6	; case 45
  4020  00136A  B4D8               	btfsc	status,2,c
  4021  00136C  EF71  F009         	goto	l2355
  4022  001370  0A1D               	xorlw	29	; case 48
  4023  001372  B4D8               	btfsc	status,2,c
  4024  001374  EF7C  F009         	goto	l2359
  4025  001378  EF8C  F009         	goto	l2375
  4026  00137C                     l2381:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4029  00137C  5052               	movf	vfpfcnvrt@done^0,w,c
  4030  00137E  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  4031  001380  B4D8               	btfsc	status,2,c
  4032  001382  EFC5  F009         	goto	u2101
  4033  001386  EFC7  F009         	goto	u2100
  4034  00138A                     u2101:
  4035  00138A  EF92  F009         	goto	l2379
  4036  00138E                     u2100:
  4037  00138E                     
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4039  00138E  0100               	movlb	0	; () banked
  4040  001390  A1C3               	btfss	_flags& (0+255),0,b
  4041  001392  EFCD  F009         	goto	u2111
  4042  001396  EFCF  F009         	goto	u2110
  4043  00139A                     u2111:
  4044  00139A  EFD0  F009         	goto	l2385
  4045  00139E                     u2110:
  4046  00139E                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4049  00139E  93C3               	bcf	_flags& (0+255),1,b
  4050  0013A0                     l2385:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4054  0013A0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4055  0013A4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4056  0013A8  CFDE FFF6          	movff	postinc2,tblptrl
  4057  0013AC  CFDD FFF7          	movff	postdec2,tblptrh
  4058  0013B0                     	if	0	;tblptru may be non-zero
  4059  0013B0                     	endif
  4060  0013B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4061  0013B0  0E00               	movlw	low (__mediumconst shr (0+16))
  4062  0013B2  6EF8               	movwf	tblptru,c
  4063  0013B4                     	endif
  4064  0013B4  0008               	tblrd		*
  4065  0013B6  50F5               	movf	tablat,w,c
  4066  0013B8  0A2A               	xorlw	42
  4067  0013BA  A4D8               	btfss	status,2,c
  4068  0013BC  EFE2  F009         	goto	u2121
  4069  0013C0  EFE4  F009         	goto	u2120
  4070  0013C4                     u2121:
  4071  0013C4  EF0D  F00A         	goto	l2393
  4072  0013C8                     u2120:
  4073  0013C8                     
  4074                           ; BSR set to: 0
  4075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4076  0013C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4077  0013CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4078  0013D0  2ADE               	incf	postinc2,f,c
  4079  0013D2  0E00               	movlw	0
  4080  0013D4  22DD               	addwfc	postdec2,f,c
  4081                           
  4082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4083  0013D6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4084  0013DA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4085  0013DE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4086  0013E2  0E02               	movlw	2
  4087  0013E4  26DE               	addwf	postinc2,f,c
  4088  0013E6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4089  0013EA  0E00               	movlw	0
  4090  0013EC  22DD               	addwfc	postdec2,f,c
  4091  0013EE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4092  0013F2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4093  0013F6  CFDE F0BF          	movff	postinc2,_width
  4094  0013FA  CFDD F0C0          	movff	postdec2,_width+1
  4095  0013FE                     
  4096                           ; BSR set to: 0
  4097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4098  0013FE  BFC0               	btfsc	(_width+1)& (0+255),7,b
  4099  001400  EF06  F00A         	goto	u2130
  4100  001404  EF04  F00A         	goto	u2131
  4101  001408                     u2131:
  4102  001408  EF52  F00A         	goto	l2403
  4103  00140C                     u2130:
  4104  00140C                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4107  00140C  81C3               	bsf	_flags& (0+255),0,b
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4110  00140E  6DBF               	negf	_width& (0+255),b
  4111  001410  1FC0               	comf	(_width+1)& (0+255),f,b
  4112  001412  B0D8               	btfsc	status,0,c
  4113  001414  2BC0               	incf	(_width+1)& (0+255),f,b
  4114  001416  EF52  F00A         	goto	l2403
  4115  00141A                     l2393:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4119  00141A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4120  00141E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4121  001422  CFDE F008          	movff	postinc2,atoi@s
  4122  001426  CFDD F009          	movff	postdec2,atoi@s+1
  4123  00142A  EC1C  F00F         	call	_atoi	;wreg free
  4124  00142E  C008  F0BF         	movff	?_atoi,_width
  4125  001432  C009  F0C0         	movff	?_atoi+1,_width+1
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4128  001436  EF24  F00A         	goto	l2397
  4129  00143A                     l2395:
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4132  00143A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4133  00143E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4134  001442  2ADE               	incf	postinc2,f,c
  4135  001444  0E00               	movlw	0
  4136  001446  22DD               	addwfc	postdec2,f,c
  4137  001448                     l2397:
  4138  001448  0ED0               	movlw	208
  4139  00144A  6E46               	movwf	??_vfpfcnvrt^0,c
  4140  00144C  0EFF               	movlw	255
  4141  00144E  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4142  001450  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4143  001454  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4144  001458  CFDE FFF6          	movff	postinc2,tblptrl
  4145  00145C  CFDD FFF7          	movff	postdec2,tblptrh
  4146  001460                     	if	0	;tblptru may be non-zero
  4147  001460                     	endif
  4148  001460                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4149  001460  0E00               	movlw	low (__mediumconst shr (0+16))
  4150  001462  6EF8               	movwf	tblptru,c
  4151  001464                     	endif
  4152  001464  0008               	tblrd		*
  4153  001466  50F5               	movf	tablat,w,c
  4154  001468  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4155  00146A  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4156  00146C  5046               	movf	??_vfpfcnvrt^0,w,c
  4157  00146E  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4158  001470  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4159  001472  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4160  001474  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4161  001476  E10A               	bnz	u2140
  4162  001478  0E0A               	movlw	10
  4163  00147A  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4164  00147C  A0D8               	btfss	status,0,c
  4165  00147E  EF43  F00A         	goto	u2141
  4166  001482  EF46  F00A         	goto	u2140
  4167  001486                     u2141:
  4168  001486  0E01               	movlw	1
  4169  001488  EF47  F00A         	goto	u2150
  4170  00148C                     u2140:
  4171  00148C  0E00               	movlw	0
  4172  00148E                     u2150:
  4173  00148E  6E54               	movwf	_vfpfcnvrt$1826^0,c
  4174  001490  6A55               	clrf	(_vfpfcnvrt$1826+1)^0,c
  4175  001492  5054               	movf	_vfpfcnvrt$1826^0,w,c
  4176  001494  1055               	iorwf	(_vfpfcnvrt$1826+1)^0,w,c
  4177  001496  A4D8               	btfss	status,2,c
  4178  001498  EF50  F00A         	goto	u2161
  4179  00149C  EF52  F00A         	goto	u2160
  4180  0014A0                     u2161:
  4181  0014A0  EF1D  F00A         	goto	l2395
  4182  0014A4                     u2160:
  4183  0014A4                     l2403:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4186  0014A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4187  0014A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4188  0014AC  CFDE FFF6          	movff	postinc2,tblptrl
  4189  0014B0  CFDD FFF7          	movff	postdec2,tblptrh
  4190  0014B4                     	if	0	;tblptru may be non-zero
  4191  0014B4                     	endif
  4192  0014B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4193  0014B4  0E00               	movlw	low (__mediumconst shr (0+16))
  4194  0014B6  6EF8               	movwf	tblptru,c
  4195  0014B8                     	endif
  4196  0014B8  0008               	tblrd		*
  4197  0014BA  50F5               	movf	tablat,w,c
  4198  0014BC  0A64               	xorlw	100
  4199  0014BE  B4D8               	btfsc	status,2,c
  4200  0014C0  EF64  F00A         	goto	u2171
  4201  0014C4  EF66  F00A         	goto	u2170
  4202  0014C8                     u2171:
  4203  0014C8  EF7A  F00A         	goto	l2407
  4204  0014CC                     u2170:
  4205  0014CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4206  0014D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4207  0014D4  CFDE FFF6          	movff	postinc2,tblptrl
  4208  0014D8  CFDD FFF7          	movff	postdec2,tblptrh
  4209  0014DC                     	if	0	;tblptru may be non-zero
  4210  0014DC                     	endif
  4211  0014DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4212  0014DC  0E00               	movlw	low (__mediumconst shr (0+16))
  4213  0014DE  6EF8               	movwf	tblptru,c
  4214  0014E0                     	endif
  4215  0014E0  0008               	tblrd		*
  4216  0014E2  50F5               	movf	tablat,w,c
  4217  0014E4  0A69               	xorlw	105
  4218  0014E6  A4D8               	btfss	status,2,c
  4219  0014E8  EF78  F00A         	goto	u2181
  4220  0014EC  EF7A  F00A         	goto	u2180
  4221  0014F0                     u2181:
  4222  0014F0  EFBA  F00A         	goto	l2413
  4223  0014F4                     u2180:
  4224  0014F4                     l2407:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4227  0014F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4228  0014F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4229  0014FC  2ADE               	incf	postinc2,f,c
  4230  0014FE  0E00               	movlw	0
  4231  001500  22DD               	addwfc	postdec2,f,c
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4234  001502  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4235  001506  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4236  00150A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4237  00150E  0E02               	movlw	2
  4238  001510  26DE               	addwf	postinc2,f,c
  4239  001512  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4240  001516  0E00               	movlw	0
  4241  001518  22DD               	addwfc	postdec2,f,c
  4242  00151A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4243  00151E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4244  001522  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  4245  001526  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  4246  00152A  0E00               	movlw	0
  4247  00152C  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4248  00152E  0EFF               	movlw	-1
  4249  001530  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  4250  001532  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  4251  001534  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  4252  001536  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  4253  001538  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  4254  00153A  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  4255  00153C                     
  4256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4257  00153C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4258  001540  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4259  001544  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4260  001548  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4261  00154C  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4262  001550  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4263  001554  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4264  001558  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4265  00155C  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4266  001560  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4267  001564  ECBA  F00C         	call	_dtoa	;wreg free
  4268  001568  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4269  00156C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4270  001570  EF0F  F00B         	goto	l1039
  4271  001574                     l2413:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4274  001574  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4275  001578  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4276  00157C  CFDE FFF6          	movff	postinc2,tblptrl
  4277  001580  CFDD FFF7          	movff	postdec2,tblptrh
  4278  001584                     	if	0	;tblptru may be non-zero
  4279  001584                     	endif
  4280  001584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4281  001584  0E00               	movlw	low (__mediumconst shr (0+16))
  4282  001586  6EF8               	movwf	tblptru,c
  4283  001588                     	endif
  4284  001588  0008               	tblrd		*
  4285  00158A  50F5               	movf	tablat,w,c
  4286  00158C  0A25               	xorlw	37
  4287  00158E  A4D8               	btfss	status,2,c
  4288  001590  EFCC  F00A         	goto	u2191
  4289  001594  EFCE  F00A         	goto	u2190
  4290  001598                     u2191:
  4291  001598  EFE5  F00A         	goto	l2423
  4292  00159C                     u2190:
  4293  00159C                     
  4294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4295  00159C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4296  0015A0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4297  0015A4  2ADE               	incf	postinc2,f,c
  4298  0015A6  0E00               	movlw	0
  4299  0015A8  22DD               	addwfc	postdec2,f,c
  4300  0015AA                     
  4301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4302  0015AA  0E00               	movlw	0
  4303  0015AC  6E02               	movwf	(fputc@c+1)^0,c
  4304  0015AE  0E25               	movlw	37
  4305  0015B0  6E01               	movwf	fputc@c^0,c
  4306  0015B2  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4307  0015B6  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4308  0015BA  ECF1  F011         	call	_fputc	;wreg free
  4309  0015BE                     l2419:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4312  0015BE  0E00               	movlw	0
  4313  0015C0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4314  0015C2  0E01               	movlw	1
  4315  0015C4  6E40               	movwf	?_vfpfcnvrt^0,c
  4316  0015C6  EF0F  F00B         	goto	l1039
  4317  0015CA                     l2423:
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4320  0015CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4321  0015CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4322  0015D2  2ADE               	incf	postinc2,f,c
  4323  0015D4  0E00               	movlw	0
  4324  0015D6  22DD               	addwfc	postdec2,f,c
  4325  0015D8                     
  4326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4327  0015D8  0E00               	movlw	0
  4328  0015DA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4329  0015DC  0E00               	movlw	0
  4330  0015DE  6E40               	movwf	?_vfpfcnvrt^0,c
  4331  0015E0  EF0F  F00B         	goto	l1039
  4332  0015E4                     l2429:
  4333                           
  4334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4335  0015E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4336  0015E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4337  0015EC  CFDE FFF6          	movff	postinc2,tblptrl
  4338  0015F0  CFDD FFF7          	movff	postdec2,tblptrh
  4339  0015F4                     	if	0	;tblptru may be non-zero
  4340  0015F4                     	endif
  4341  0015F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4342  0015F4  0E00               	movlw	low (__mediumconst shr (0+16))
  4343  0015F6  6EF8               	movwf	tblptru,c
  4344  0015F8                     	endif
  4345  0015F8  0008               	tblrd		*
  4346  0015FA  50F5               	movf	tablat,w,c
  4347  0015FC  6E01               	movwf	fputc@c^0,c
  4348  0015FE  6A02               	clrf	(fputc@c+1)^0,c
  4349  001600  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4350  001604  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4351  001608  ECF1  F011         	call	_fputc	;wreg free
  4352  00160C                     
  4353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4354  00160C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4355  001610  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4356  001614  2ADE               	incf	postinc2,f,c
  4357  001616  0E00               	movlw	0
  4358  001618  22DD               	addwfc	postdec2,f,c
  4359  00161A  EFDF  F00A         	goto	l2419
  4360  00161E                     l1039:
  4361  00161E  0012               	return		;funcret
  4362  001620                     __end_of_vfpfcnvrt:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _dtoa *****************
  4366 ;; Defined at:
  4367 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4370 ;;		 -> sprintf@f(6), 
  4371 ;;  d               8   29[COMRAM] long long 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  n               8   53[COMRAM] long long 
  4374 ;;  i               2   61[COMRAM] int 
  4375 ;;  s               2   51[COMRAM] int 
  4376 ;;  w               2   49[COMRAM] int 
  4377 ;;  p               2   47[COMRAM] int 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  2   27[COMRAM] int 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4387 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;Total ram usage:       36 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 5
  4394 ;; This function calls:
  4395 ;;		___aodiv
  4396 ;;		___aomod
  4397 ;;		_abs
  4398 ;;		_pad
  4399 ;; This function is called by:
  4400 ;;		_vfpfcnvrt
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text20
  4405  001974                     __ptext20:
  4406                           	callstack 0
  4407  001974                     _dtoa:
  4408                           	callstack 21
  4409  001974                     
  4410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4411  001974  C01E  F036         	movff	dtoa@d,dtoa@n
  4412  001978  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4413  00197C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4414  001980  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4415  001984  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4416  001988  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4417  00198C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4418  001990  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4419  001994                     
  4420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4421  001994  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4422  001996  EFCF  F00C         	goto	u1831
  4423  00199A  EFD2  F00C         	goto	u1830
  4424  00199E                     u1831:
  4425  00199E  0E01               	movlw	1
  4426  0019A0  EFD3  F00C         	goto	u1840
  4427  0019A4                     u1830:
  4428  0019A4  0E00               	movlw	0
  4429  0019A6                     u1840:
  4430  0019A6  6E34               	movwf	dtoa@s^0,c
  4431  0019A8  6A35               	clrf	(dtoa@s+1)^0,c
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4434  0019AA  5034               	movf	dtoa@s^0,w,c
  4435  0019AC  1035               	iorwf	(dtoa@s+1)^0,w,c
  4436  0019AE  B4D8               	btfsc	status,2,c
  4437  0019B0  EFDC  F00C         	goto	u1851
  4438  0019B4  EFDE  F00C         	goto	u1850
  4439  0019B8                     u1851:
  4440  0019B8  EFEE  F00C         	goto	l2227
  4441  0019BC                     u1850:
  4442  0019BC                     
  4443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4444  0019BC  1E3D               	comf	(dtoa@n+7)^0,f,c
  4445  0019BE  1E3C               	comf	(dtoa@n+6)^0,f,c
  4446  0019C0  1E3B               	comf	(dtoa@n+5)^0,f,c
  4447  0019C2  1E3A               	comf	(dtoa@n+4)^0,f,c
  4448  0019C4  1E39               	comf	(dtoa@n+3)^0,f,c
  4449  0019C6  1E38               	comf	(dtoa@n+2)^0,f,c
  4450  0019C8  1E37               	comf	(dtoa@n+1)^0,f,c
  4451  0019CA  6C36               	negf	dtoa@n^0,c
  4452  0019CC  0E00               	movlw	0
  4453  0019CE  2237               	addwfc	(dtoa@n+1)^0,f,c
  4454  0019D0  2238               	addwfc	(dtoa@n+2)^0,f,c
  4455  0019D2  2239               	addwfc	(dtoa@n+3)^0,f,c
  4456  0019D4  223A               	addwfc	(dtoa@n+4)^0,f,c
  4457  0019D6  223B               	addwfc	(dtoa@n+5)^0,f,c
  4458  0019D8  223C               	addwfc	(dtoa@n+6)^0,f,c
  4459  0019DA  223D               	addwfc	(dtoa@n+7)^0,f,c
  4460  0019DC                     l2227:
  4461                           
  4462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4463  0019DC  0100               	movlb	0	; () banked
  4464  0019DE  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  4465  0019E0  EFF4  F00C         	goto	u1861
  4466  0019E4  EFF6  F00C         	goto	u1860
  4467  0019E8                     u1861:
  4468  0019E8  EFF7  F00C         	goto	l2231
  4469  0019EC                     u1860:
  4470  0019EC                     
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4473  0019EC  93C3               	bcf	_flags& (0+255),1,b
  4474  0019EE                     l2231:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4478  0019EE  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  4479  0019F0  EF04  F00D         	goto	u1870
  4480  0019F4  51C2               	movf	(_prec+1)& (0+255),w,b
  4481  0019F6  E106               	bnz	u1871
  4482  0019F8  05C1               	decf	_prec& (0+255),w,b
  4483  0019FA  B0D8               	btfsc	status,0,c
  4484  0019FC  EF02  F00D         	goto	u1871
  4485  001A00  EF04  F00D         	goto	u1870
  4486  001A04                     u1871:
  4487  001A04  EF0A  F00D         	goto	l990
  4488  001A08                     u1870:
  4489  001A08                     
  4490                           ; BSR set to: 0
  4491  001A08  0E00               	movlw	0
  4492  001A0A  6E31               	movwf	(dtoa@p+1)^0,c
  4493  001A0C  0E01               	movlw	1
  4494  001A0E  6E30               	movwf	dtoa@p^0,c
  4495  001A10  EF0E  F00D         	goto	l992
  4496  001A14                     l990:
  4497                           
  4498                           ; BSR set to: 0
  4499  001A14  C0C1  F030         	movff	_prec,dtoa@p
  4500  001A18  C0C2  F031         	movff	_prec+1,dtoa@p+1
  4501  001A1C                     l992:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4505  001A1C  C0BF  F032         	movff	_width,dtoa@w
  4506  001A20  C0C0  F033         	movff	_width+1,dtoa@w+1
  4507  001A24                     
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4510  001A24  5034               	movf	dtoa@s^0,w,c
  4511  001A26  1035               	iorwf	(dtoa@s+1)^0,w,c
  4512  001A28  A4D8               	btfss	status,2,c
  4513  001A2A  EF19  F00D         	goto	u1881
  4514  001A2E  EF1B  F00D         	goto	u1880
  4515  001A32                     u1881:
  4516  001A32  EF22  F00D         	goto	l2239
  4517  001A36                     u1880:
  4518  001A36                     
  4519                           ; BSR set to: 0
  4520  001A36  A5C3               	btfss	_flags& (0+255),2,b
  4521  001A38  EF20  F00D         	goto	u1891
  4522  001A3C  EF22  F00D         	goto	u1890
  4523  001A40                     u1891:
  4524  001A40  EF25  F00D         	goto	l2241
  4525  001A44                     u1890:
  4526  001A44                     l2239:
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4530  001A44  0632               	decf	dtoa@w^0,f,c
  4531  001A46  A0D8               	btfss	status,0,c
  4532  001A48  0633               	decf	(dtoa@w+1)^0,f,c
  4533  001A4A                     l2241:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4537  001A4A  0E00               	movlw	0
  4538  001A4C  6E3F               	movwf	(dtoa@i+1)^0,c
  4539  001A4E  0E1F               	movlw	31
  4540  001A50  6E3E               	movwf	dtoa@i^0,c
  4541  001A52                     
  4542                           ; BSR set to: 0
  4543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4544  001A52  0E00               	movlw	0
  4545  001A54  6FE6               	movwf	(_dbuf+31)& (0+255),b
  4546                           
  4547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4548  001A56  EFA9  F00D         	goto	l2255
  4549  001A5A                     l2245:
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4552  001A5A  063E               	decf	dtoa@i^0,f,c
  4553  001A5C  A0D8               	btfss	status,0,c
  4554  001A5E  063F               	decf	(dtoa@i+1)^0,f,c
  4555  001A60                     
  4556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4557  001A60  0EC7               	movlw	low _dbuf
  4558  001A62  243E               	addwf	dtoa@i^0,w,c
  4559  001A64  6ED9               	movwf	fsr2l,c
  4560  001A66  0E00               	movlw	high _dbuf
  4561  001A68  203F               	addwfc	(dtoa@i+1)^0,w,c
  4562  001A6A  6EDA               	movwf	fsr2h,c
  4563  001A6C  C036  F001         	movff	dtoa@n,___aomod@dividend
  4564  001A70  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4565  001A74  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4566  001A78  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4567  001A7C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4568  001A80  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4569  001A84  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4570  001A88  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4571  001A8C  0E0A               	movlw	10
  4572  001A8E  6E09               	movwf	___aomod@divisor^0,c
  4573  001A90  0E00               	movlw	0
  4574  001A92  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4575  001A94  0E00               	movlw	0
  4576  001A96  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4577  001A98  0E00               	movlw	0
  4578  001A9A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4579  001A9C  0E00               	movlw	0
  4580  001A9E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4581  001AA0  0E00               	movlw	0
  4582  001AA2  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4583  001AA4  0E00               	movlw	0
  4584  001AA6  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4585  001AA8  0E00               	movlw	0
  4586  001AAA  6E10               	movwf	(___aomod@divisor+7)^0,c
  4587  001AAC  ECB2  F010         	call	___aomod	;wreg free
  4588  001AB0  C001  F026         	movff	?___aomod,??_dtoa
  4589  001AB4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4590  001AB8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4591  001ABC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4592  001AC0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4593  001AC4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4594  001AC8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4595  001ACC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4596  001AD0  C026  F013         	movff	??_dtoa,abs@a
  4597  001AD4  C028  F014         	movff	??_dtoa+2,abs@a+1
  4598  001AD8  EC6C  F016         	call	_abs	;wreg free
  4599  001ADC  5013               	movf	?_abs^0,w,c
  4600  001ADE  0F30               	addlw	48
  4601  001AE0  6EDF               	movwf	indf2,c
  4602  001AE2                     
  4603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4604  001AE2  0630               	decf	dtoa@p^0,f,c
  4605  001AE4  A0D8               	btfss	status,0,c
  4606  001AE6  0631               	decf	(dtoa@p+1)^0,f,c
  4607  001AE8                     
  4608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4609  001AE8  0632               	decf	dtoa@w^0,f,c
  4610  001AEA  A0D8               	btfss	status,0,c
  4611  001AEC  0633               	decf	(dtoa@w+1)^0,f,c
  4612  001AEE                     
  4613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4614  001AEE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4615  001AF2  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4616  001AF6  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4617  001AFA  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4618  001AFE  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4619  001B02  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4620  001B06  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4621  001B0A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4622  001B0E  0E0A               	movlw	10
  4623  001B10  6E09               	movwf	___aodiv@divisor^0,c
  4624  001B12  0E00               	movlw	0
  4625  001B14  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4626  001B16  0E00               	movlw	0
  4627  001B18  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4628  001B1A  0E00               	movlw	0
  4629  001B1C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4630  001B1E  0E00               	movlw	0
  4631  001B20  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4632  001B22  0E00               	movlw	0
  4633  001B24  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4634  001B26  0E00               	movlw	0
  4635  001B28  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4636  001B2A  0E00               	movlw	0
  4637  001B2C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4638  001B2E  ECEE  F00F         	call	___aodiv	;wreg free
  4639  001B32  C001  F036         	movff	?___aodiv,dtoa@n
  4640  001B36  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4641  001B3A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4642  001B3E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4643  001B42  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4644  001B46  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4645  001B4A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4646  001B4E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4647  001B52                     l2255:
  4648                           
  4649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4650  001B52  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4651  001B54  EFB4  F00D         	goto	u1901
  4652  001B58  503F               	movf	(dtoa@i+1)^0,w,c
  4653  001B5A  E108               	bnz	u1900
  4654  001B5C  043E               	decf	dtoa@i^0,w,c
  4655  001B5E  A0D8               	btfss	status,0,c
  4656  001B60  EFB4  F00D         	goto	u1901
  4657  001B64  EFB6  F00D         	goto	u1900
  4658  001B68                     u1901:
  4659  001B68  EFE7  F00D         	goto	l2265
  4660  001B6C                     u1900:
  4661  001B6C  5036               	movf	dtoa@n^0,w,c
  4662  001B6E  1037               	iorwf	(dtoa@n+1)^0,w,c
  4663  001B70  1038               	iorwf	(dtoa@n+2)^0,w,c
  4664  001B72  1039               	iorwf	(dtoa@n+3)^0,w,c
  4665  001B74  103A               	iorwf	(dtoa@n+4)^0,w,c
  4666  001B76  103B               	iorwf	(dtoa@n+5)^0,w,c
  4667  001B78  103C               	iorwf	(dtoa@n+6)^0,w,c
  4668  001B7A  103D               	iorwf	(dtoa@n+7)^0,w,c
  4669  001B7C  A4D8               	btfss	status,2,c
  4670  001B7E  EFC3  F00D         	goto	u1911
  4671  001B82  EFC5  F00D         	goto	u1910
  4672  001B86                     u1911:
  4673  001B86  EF2D  F00D         	goto	l2245
  4674  001B8A                     u1910:
  4675  001B8A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4676  001B8C  EFD2  F00D         	goto	u1920
  4677  001B90  5031               	movf	(dtoa@p+1)^0,w,c
  4678  001B92  E106               	bnz	u1921
  4679  001B94  0430               	decf	dtoa@p^0,w,c
  4680  001B96  B0D8               	btfsc	status,0,c
  4681  001B98  EFD0  F00D         	goto	u1921
  4682  001B9C  EFD2  F00D         	goto	u1920
  4683  001BA0                     u1921:
  4684  001BA0  EF2D  F00D         	goto	l2245
  4685  001BA4                     u1920:
  4686  001BA4  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4687  001BA6  EFDD  F00D         	goto	u1931
  4688  001BAA  5033               	movf	(dtoa@w+1)^0,w,c
  4689  001BAC  E108               	bnz	u1930
  4690  001BAE  0432               	decf	dtoa@w^0,w,c
  4691  001BB0  A0D8               	btfss	status,0,c
  4692  001BB2  EFDD  F00D         	goto	u1931
  4693  001BB6  EFDF  F00D         	goto	u1930
  4694  001BBA                     u1931:
  4695  001BBA  EFE7  F00D         	goto	l2265
  4696  001BBE                     u1930:
  4697  001BBE  0100               	movlb	0	; () banked
  4698  001BC0  B3C3               	btfsc	_flags& (0+255),1,b
  4699  001BC2  EFE5  F00D         	goto	u1941
  4700  001BC6  EFE7  F00D         	goto	u1940
  4701  001BCA                     u1941:
  4702  001BCA  EF2D  F00D         	goto	l2245
  4703  001BCE                     u1940:
  4704  001BCE                     l2265:
  4705                           
  4706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4707  001BCE  5034               	movf	dtoa@s^0,w,c
  4708  001BD0  1035               	iorwf	(dtoa@s+1)^0,w,c
  4709  001BD2  A4D8               	btfss	status,2,c
  4710  001BD4  EFEE  F00D         	goto	u1951
  4711  001BD8  EFF0  F00D         	goto	u1950
  4712  001BDC                     u1951:
  4713  001BDC  EFF8  F00D         	goto	l2269
  4714  001BE0                     u1950:
  4715  001BE0  0100               	movlb	0	; () banked
  4716  001BE2  A5C3               	btfss	_flags& (0+255),2,b
  4717  001BE4  EFF6  F00D         	goto	u1961
  4718  001BE8  EFF8  F00D         	goto	u1960
  4719  001BEC                     u1961:
  4720  001BEC  EF16  F00E         	goto	l2279
  4721  001BF0                     u1960:
  4722  001BF0                     l2269:
  4723                           
  4724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4725  001BF0  063E               	decf	dtoa@i^0,f,c
  4726  001BF2  A0D8               	btfss	status,0,c
  4727  001BF4  063F               	decf	(dtoa@i+1)^0,f,c
  4728  001BF6                     
  4729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4730  001BF6  5034               	movf	dtoa@s^0,w,c
  4731  001BF8  1035               	iorwf	(dtoa@s+1)^0,w,c
  4732  001BFA  A4D8               	btfss	status,2,c
  4733  001BFC  EF02  F00E         	goto	u1971
  4734  001C00  EF04  F00E         	goto	u1970
  4735  001C04                     u1971:
  4736  001C04  EF0A  F00E         	goto	l2275
  4737  001C08                     u1970:
  4738  001C08  0E00               	movlw	0
  4739  001C0A  6E2F               	movwf	(_dtoa$1811+1)^0,c
  4740  001C0C  0E2B               	movlw	43
  4741  001C0E  6E2E               	movwf	_dtoa$1811^0,c
  4742  001C10  EF0E  F00E         	goto	l2277
  4743  001C14                     l2275:
  4744  001C14  0E00               	movlw	0
  4745  001C16  6E2F               	movwf	(_dtoa$1811+1)^0,c
  4746  001C18  0E2D               	movlw	45
  4747  001C1A  6E2E               	movwf	_dtoa$1811^0,c
  4748  001C1C                     l2277:
  4749  001C1C  0EC7               	movlw	low _dbuf
  4750  001C1E  243E               	addwf	dtoa@i^0,w,c
  4751  001C20  6ED9               	movwf	fsr2l,c
  4752  001C22  0E00               	movlw	high _dbuf
  4753  001C24  203F               	addwfc	(dtoa@i+1)^0,w,c
  4754  001C26  6EDA               	movwf	fsr2h,c
  4755  001C28  C02E  FFDF         	movff	_dtoa$1811,indf2
  4756  001C2C                     l2279:
  4757                           
  4758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4759  001C2C  C01C  F011         	movff	dtoa@fp,pad@fp
  4760  001C30  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4761  001C34  0EC7               	movlw	low _dbuf
  4762  001C36  243E               	addwf	dtoa@i^0,w,c
  4763  001C38  6E13               	movwf	pad@buf^0,c
  4764  001C3A  0E00               	movlw	high _dbuf
  4765  001C3C  203F               	addwfc	(dtoa@i+1)^0,w,c
  4766  001C3E  6E14               	movwf	(pad@buf+1)^0,c
  4767  001C40  C032  F015         	movff	dtoa@w,pad@p
  4768  001C44  C033  F016         	movff	dtoa@w+1,pad@p+1
  4769  001C48  EC56  F012         	call	_pad	;wreg free
  4770  001C4C  C011  F01C         	movff	?_pad,?_dtoa
  4771  001C50  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4772  001C54  0012               	return		;funcret
  4773  001C56                     __end_of_dtoa:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _pad *****************
  4777 ;; Defined at:
  4778 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4781 ;;		 -> sprintf@f(6), 
  4782 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4783 ;;		 -> dbuf(32), 
  4784 ;;  p               2   20[COMRAM] int 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  w               2   25[COMRAM] int 
  4787 ;;  i               2   23[COMRAM] int 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2   16[COMRAM] int 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4797 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;Total ram usage:       11 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 4
  4804 ;; This function calls:
  4805 ;;		_fputc
  4806 ;;		_fputs
  4807 ;;		_strlen
  4808 ;; This function is called by:
  4809 ;;		_dtoa
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text21
  4814  0024AC                     __ptext21:
  4815                           	callstack 0
  4816  0024AC                     _pad:
  4817                           	callstack 21
  4818  0024AC                     
  4819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4820  0024AC  0100               	movlb	0	; () banked
  4821  0024AE  A1C3               	btfss	_flags& (0+255),0,b
  4822  0024B0  EF5C  F012         	goto	u1741
  4823  0024B4  EF5E  F012         	goto	u1740
  4824  0024B8                     u1741:
  4825  0024B8  EF68  F012         	goto	l2177
  4826  0024BC                     u1740:
  4827  0024BC                     
  4828                           ; BSR set to: 0
  4829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4830  0024BC  C013  F00A         	movff	pad@buf,fputs@s
  4831  0024C0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4832  0024C4  C011  F00C         	movff	pad@fp,fputs@fp
  4833  0024C8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4834  0024CC  EC4A  F016         	call	_fputs	;wreg free
  4835  0024D0                     l2177:
  4836                           
  4837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4838  0024D0  BE16               	btfsc	(pad@p+1)^0,7,c
  4839  0024D2  EF6D  F012         	goto	u1751
  4840  0024D6  EF6F  F012         	goto	u1750
  4841  0024DA                     u1751:
  4842  0024DA  EF75  F012         	goto	l2181
  4843  0024DE                     u1750:
  4844  0024DE  C015  F01A         	movff	pad@p,pad@w
  4845  0024E2  C016  F01B         	movff	pad@p+1,pad@w+1
  4846  0024E6  EF79  F012         	goto	l979
  4847  0024EA                     l2181:
  4848  0024EA  0E00               	movlw	0
  4849  0024EC  6E1B               	movwf	(pad@w+1)^0,c
  4850  0024EE  0E00               	movlw	0
  4851  0024F0  6E1A               	movwf	pad@w^0,c
  4852  0024F2                     l979:
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4855  0024F2  0E00               	movlw	0
  4856  0024F4  6E19               	movwf	(pad@i+1)^0,c
  4857  0024F6  0E00               	movlw	0
  4858  0024F8  6E18               	movwf	pad@i^0,c
  4859                           
  4860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4861  0024FA  EF8B  F012         	goto	l2187
  4862  0024FE                     l2183:
  4863                           
  4864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4865  0024FE  0E00               	movlw	0
  4866  002500  6E02               	movwf	(fputc@c+1)^0,c
  4867  002502  0E20               	movlw	32
  4868  002504  6E01               	movwf	fputc@c^0,c
  4869  002506  C011  F003         	movff	pad@fp,fputc@fp
  4870  00250A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4871  00250E  ECF1  F011         	call	_fputc	;wreg free
  4872  002512                     
  4873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4874  002512  4A18               	infsnz	pad@i^0,f,c
  4875  002514  2A19               	incf	(pad@i+1)^0,f,c
  4876  002516                     l2187:
  4877                           
  4878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4879  002516  501A               	movf	pad@w^0,w,c
  4880  002518  5C18               	subwf	pad@i^0,w,c
  4881  00251A  5019               	movf	(pad@i+1)^0,w,c
  4882  00251C  0A80               	xorlw	128
  4883  00251E  6E17               	movwf	??_pad^0,c
  4884  002520  501B               	movf	(pad@w+1)^0,w,c
  4885  002522  0A80               	xorlw	128
  4886  002524  5817               	subwfb	??_pad^0,w,c
  4887  002526  A0D8               	btfss	status,0,c
  4888  002528  EF98  F012         	goto	u1761
  4889  00252C  EF9A  F012         	goto	u1760
  4890  002530                     u1761:
  4891  002530  EF7F  F012         	goto	l2183
  4892  002534                     u1760:
  4893  002534                     
  4894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4895  002534  0100               	movlb	0	; () banked
  4896  002536  B1C3               	btfsc	_flags& (0+255),0,b
  4897  002538  EFA0  F012         	goto	u1771
  4898  00253C  EFA2  F012         	goto	u1770
  4899  002540                     u1771:
  4900  002540  EFAC  F012         	goto	l2191
  4901  002544                     u1770:
  4902  002544                     
  4903                           ; BSR set to: 0
  4904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4905  002544  C013  F00A         	movff	pad@buf,fputs@s
  4906  002548  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4907  00254C  C011  F00C         	movff	pad@fp,fputs@fp
  4908  002550  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4909  002554  EC4A  F016         	call	_fputs	;wreg free
  4910  002558                     l2191:
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4913  002558  C013  F001         	movff	pad@buf,strlen@s
  4914  00255C  C014  F002         	movff	pad@buf+1,strlen@s+1
  4915  002560  ECC5  F016         	call	_strlen	;wreg free
  4916  002564  501A               	movf	pad@w^0,w,c
  4917  002566  2401               	addwf	?_strlen^0,w,c
  4918  002568  6E11               	movwf	?_pad^0,c
  4919  00256A  501B               	movf	(pad@w+1)^0,w,c
  4920  00256C  2002               	addwfc	(?_strlen+1)^0,w,c
  4921  00256E  6E12               	movwf	(?_pad+1)^0,c
  4922  002570  0012               	return		;funcret
  4923  002572                     __end_of_pad:
  4924                           	callstack 0
  4925                           
  4926 ;; *************** function _strlen *****************
  4927 ;; Defined at:
  4928 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4931 ;;		 -> dbuf(32), 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4934 ;;		 -> dbuf(32), 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  2    0[COMRAM] unsigned int 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;Total ram usage:        4 bytes
  4949 ;; Hardware stack levels used: 1
  4950 ;; Hardware stack levels required when called: 1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_pad
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text22
  4959  002D8A                     __ptext22:
  4960                           	callstack 0
  4961  002D8A                     _strlen:
  4962                           	callstack 23
  4963  002D8A  C001  F003         	movff	strlen@s,strlen@a
  4964  002D8E  C002  F004         	movff	strlen@s+1,strlen@a+1
  4965  002D92  EFCD  F016         	goto	l2081
  4966  002D96                     l2079:
  4967  002D96  4A01               	infsnz	strlen@s^0,f,c
  4968  002D98  2A02               	incf	(strlen@s+1)^0,f,c
  4969  002D9A                     l2081:
  4970  002D9A  C001  FFD9         	movff	strlen@s,fsr2l
  4971  002D9E  C002  FFDA         	movff	strlen@s+1,fsr2h
  4972  002DA2  50DF               	movf	indf2,w,c
  4973  002DA4  A4D8               	btfss	status,2,c
  4974  002DA6  EFD7  F016         	goto	u1601
  4975  002DAA  EFD9  F016         	goto	u1600
  4976  002DAE                     u1601:
  4977  002DAE  EFCB  F016         	goto	l2079
  4978  002DB2                     u1600:
  4979  002DB2  5003               	movf	strlen@a^0,w,c
  4980  002DB4  5C01               	subwf	strlen@s^0,w,c
  4981  002DB6  6E01               	movwf	?_strlen^0,c
  4982  002DB8  5004               	movf	(strlen@a+1)^0,w,c
  4983  002DBA  5802               	subwfb	(strlen@s+1)^0,w,c
  4984  002DBC  6E02               	movwf	(?_strlen+1)^0,c
  4985  002DBE  0012               	return		;funcret
  4986  002DC0                     __end_of_strlen:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _fputs *****************
  4990 ;; Defined at:
  4991 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4994 ;;		 -> dbuf(32), 
  4995 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4996 ;;		 -> sprintf@f(6), 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  i               2   14[COMRAM] int 
  4999 ;;  c               1   13[COMRAM] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  2    9[COMRAM] int 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;Total ram usage:        7 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 3
  5016 ;; This function calls:
  5017 ;;		_fputc
  5018 ;; This function is called by:
  5019 ;;		_pad
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text23
  5024  002C94                     __ptext23:
  5025                           	callstack 0
  5026  002C94                     _fputs:
  5027                           	callstack 21
  5028  002C94  0E00               	movlw	0
  5029  002C96  6E10               	movwf	(fputs@i+1)^0,c
  5030  002C98  0E00               	movlw	0
  5031  002C9A  6E0F               	movwf	fputs@i^0,c
  5032  002C9C  EF5B  F016         	goto	l2075
  5033  002CA0                     l2071:
  5034  002CA0  C00E  F001         	movff	fputs@c,fputc@c
  5035  002CA4  6A02               	clrf	(fputc@c+1)^0,c
  5036  002CA6  C00C  F003         	movff	fputs@fp,fputc@fp
  5037  002CAA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5038  002CAE  ECF1  F011         	call	_fputc	;wreg free
  5039  002CB2  4A0F               	infsnz	fputs@i^0,f,c
  5040  002CB4  2A10               	incf	(fputs@i+1)^0,f,c
  5041  002CB6                     l2075:
  5042  002CB6  500F               	movf	fputs@i^0,w,c
  5043  002CB8  240A               	addwf	fputs@s^0,w,c
  5044  002CBA  6ED9               	movwf	fsr2l,c
  5045  002CBC  5010               	movf	(fputs@i+1)^0,w,c
  5046  002CBE  200B               	addwfc	(fputs@s+1)^0,w,c
  5047  002CC0  6EDA               	movwf	fsr2h,c
  5048  002CC2  50DF               	movf	indf2,w,c
  5049  002CC4  6E0E               	movwf	fputs@c^0,c
  5050  002CC6  500E               	movf	fputs@c^0,w,c
  5051  002CC8  A4D8               	btfss	status,2,c
  5052  002CCA  EF69  F016         	goto	u1591
  5053  002CCE  EF6B  F016         	goto	u1590
  5054  002CD2                     u1591:
  5055  002CD2  EF50  F016         	goto	l2071
  5056  002CD6                     u1590:
  5057  002CD6  0012               	return		;funcret
  5058  002CD8                     __end_of_fputs:
  5059                           	callstack 0
  5060                           
  5061 ;; *************** function _fputc *****************
  5062 ;; Defined at:
  5063 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  c               2    0[COMRAM] int 
  5066 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5067 ;;		 -> sprintf@f(6), 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  2    0[COMRAM] int 
  5072 ;; Registers used:
  5073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5081 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;Total ram usage:        9 bytes
  5084 ;; Hardware stack levels used: 1
  5085 ;; Hardware stack levels required when called: 2
  5086 ;; This function calls:
  5087 ;;		_putch
  5088 ;; This function is called by:
  5089 ;;		_pad
  5090 ;;		_vfpfcnvrt
  5091 ;;		_fputs
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text24
  5096  0023E2                     __ptext24:
  5097                           	callstack 0
  5098  0023E2                     _fputc:
  5099                           	callstack 24
  5100  0023E2  5003               	movf	fputc@fp^0,w,c
  5101  0023E4  1004               	iorwf	(fputc@fp+1)^0,w,c
  5102  0023E6  B4D8               	btfsc	status,2,c
  5103  0023E8  EFF8  F011         	goto	u1551
  5104  0023EC  EFFA  F011         	goto	u1550
  5105  0023F0                     u1551:
  5106  0023F0  EF03  F012         	goto	l2059
  5107  0023F4                     u1550:
  5108  0023F4  5003               	movf	fputc@fp^0,w,c
  5109  0023F6  1004               	iorwf	(fputc@fp+1)^0,w,c
  5110  0023F8  A4D8               	btfss	status,2,c
  5111  0023FA  EF01  F012         	goto	u1561
  5112  0023FE  EF03  F012         	goto	u1560
  5113  002402                     u1561:
  5114  002402  EF08  F012         	goto	l2061
  5115  002406                     u1560:
  5116  002406                     l2059:
  5117  002406  5001               	movf	fputc@c^0,w,c
  5118  002408  EC7E  F017         	call	_putch
  5119  00240C  EF55  F012         	goto	l1110
  5120  002410                     l2061:
  5121  002410  EE20 F004          	lfsr	2,4
  5122  002414  5003               	movf	fputc@fp^0,w,c
  5123  002416  26D9               	addwf	fsr2l,f,c
  5124  002418  5004               	movf	(fputc@fp+1)^0,w,c
  5125  00241A  22DA               	addwfc	fsr2h,f,c
  5126  00241C  50DE               	movf	postinc2,w,c
  5127  00241E  10DE               	iorwf	postinc2,w,c
  5128  002420  B4D8               	btfsc	status,2,c
  5129  002422  EF15  F012         	goto	u1571
  5130  002426  EF17  F012         	goto	u1570
  5131  00242A                     u1571:
  5132  00242A  EF32  F012         	goto	l2065
  5133  00242E                     u1570:
  5134  00242E  EE20 F004          	lfsr	2,4
  5135  002432  5003               	movf	fputc@fp^0,w,c
  5136  002434  26D9               	addwf	fsr2l,f,c
  5137  002436  5004               	movf	(fputc@fp+1)^0,w,c
  5138  002438  22DA               	addwfc	fsr2h,f,c
  5139  00243A  EE10 F002          	lfsr	1,2
  5140  00243E  5003               	movf	fputc@fp^0,w,c
  5141  002440  26E1               	addwf	fsr1l,f,c
  5142  002442  5004               	movf	(fputc@fp+1)^0,w,c
  5143  002444  22E2               	addwfc	fsr1h,f,c
  5144  002446  50DE               	movf	postinc2,w,c
  5145  002448  5CE6               	subwf	postinc1,w,c
  5146  00244A  50E6               	movf	postinc1,w,c
  5147  00244C  0A80               	xorlw	128
  5148  00244E  6E09               	movwf	(??_fputc+4)^0,c
  5149  002450  50DE               	movf	postinc2,w,c
  5150  002452  0A80               	xorlw	128
  5151  002454  5809               	subwfb	(??_fputc+4)^0,w,c
  5152  002456  B0D8               	btfsc	status,0,c
  5153  002458  EF30  F012         	goto	u1581
  5154  00245C  EF32  F012         	goto	u1580
  5155  002460                     u1581:
  5156  002460  EF55  F012         	goto	l1110
  5157  002464                     u1580:
  5158  002464                     l2065:
  5159  002464  EE20 F002          	lfsr	2,2
  5160  002468  5003               	movf	fputc@fp^0,w,c
  5161  00246A  26D9               	addwf	fsr2l,f,c
  5162  00246C  5004               	movf	(fputc@fp+1)^0,w,c
  5163  00246E  22DA               	addwfc	fsr2h,f,c
  5164  002470  CFDE F005          	movff	postinc2,??_fputc
  5165  002474  CFDD F006          	movff	postdec2,??_fputc+1
  5166  002478  C003  FFD9         	movff	fputc@fp,fsr2l
  5167  00247C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5168  002480  CFDE F007          	movff	postinc2,??_fputc+2
  5169  002484  CFDD F008          	movff	postdec2,??_fputc+3
  5170  002488  5005               	movf	??_fputc^0,w,c
  5171  00248A  2407               	addwf	(??_fputc+2)^0,w,c
  5172  00248C  6ED9               	movwf	fsr2l,c
  5173  00248E  5006               	movf	(??_fputc+1)^0,w,c
  5174  002490  2008               	addwfc	(??_fputc+3)^0,w,c
  5175  002492  6EDA               	movwf	fsr2h,c
  5176  002494  C001  FFDF         	movff	fputc@c,indf2
  5177  002498  EE20 F002          	lfsr	2,2
  5178  00249C  5003               	movf	fputc@fp^0,w,c
  5179  00249E  26D9               	addwf	fsr2l,f,c
  5180  0024A0  5004               	movf	(fputc@fp+1)^0,w,c
  5181  0024A2  22DA               	addwfc	fsr2h,f,c
  5182  0024A4  2ADE               	incf	postinc2,f,c
  5183  0024A6  0E00               	movlw	0
  5184  0024A8  22DD               	addwfc	postdec2,f,c
  5185  0024AA                     l1110:
  5186  0024AA  0012               	return		;funcret
  5187  0024AC                     __end_of_fputc:
  5188                           	callstack 0
  5189                           
  5190 ;; *************** function _putch *****************
  5191 ;; Defined at:
  5192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  c               1    wreg     unsigned char 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  c               1    0[COMRAM] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_fputc
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text25
  5221  002EFC                     __ptext25:
  5222                           	callstack 0
  5223  002EFC                     _putch:
  5224                           	callstack 24
  5225  002EFC  0012               	return		;funcret
  5226  002EFE                     __end_of_putch:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _abs *****************
  5230 ;; Defined at:
  5231 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  a               2   18[COMRAM] int 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  2   18[COMRAM] int 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;Total ram usage:        4 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_dtoa
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text26
  5260  002CD8                     __ptext26:
  5261                           	callstack 0
  5262  002CD8                     _abs:
  5263                           	callstack 24
  5264  002CD8  BE14               	btfsc	(abs@a+1)^0,7,c
  5265  002CDA  EF79  F016         	goto	u1780
  5266  002CDE  5014               	movf	(abs@a+1)^0,w,c
  5267  002CE0  E106               	bnz	u1781
  5268  002CE2  0413               	decf	abs@a^0,w,c
  5269  002CE4  B0D8               	btfsc	status,0,c
  5270  002CE6  EF77  F016         	goto	u1781
  5271  002CEA  EF79  F016         	goto	u1780
  5272  002CEE                     u1781:
  5273  002CEE  EF87  F016         	goto	l1050
  5274  002CF2                     u1780:
  5275  002CF2  C013  F015         	movff	abs@a,??_abs
  5276  002CF6  C014  F016         	movff	abs@a+1,??_abs+1
  5277  002CFA  1E15               	comf	??_abs^0,f,c
  5278  002CFC  1E16               	comf	(??_abs+1)^0,f,c
  5279  002CFE  4A15               	infsnz	??_abs^0,f,c
  5280  002D00  2A16               	incf	(??_abs+1)^0,f,c
  5281  002D02  C015  F013         	movff	??_abs,?_abs
  5282  002D06  C016  F014         	movff	??_abs+1,?_abs+1
  5283  002D0A  EF8B  F016         	goto	l1053
  5284  002D0E                     l1050:
  5285  002D0E  C013  F013         	movff	abs@a,?_abs
  5286  002D12  C014  F014         	movff	abs@a+1,?_abs+1
  5287  002D16                     l1053:
  5288  002D16  0012               	return		;funcret
  5289  002D18                     __end_of_abs:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function ___aomod *****************
  5293 ;; Defined at:
  5294 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  dividend        8    0[COMRAM] long long 
  5297 ;;  divisor         8    8[COMRAM] long long 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  sign            1   17[COMRAM] unsigned char 
  5300 ;;  counter         1   16[COMRAM] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  8    0[COMRAM] long long 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5310 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5313 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;Total ram usage:       18 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_dtoa
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text27
  5325  002164                     __ptext27:
  5326                           	callstack 0
  5327  002164                     ___aomod:
  5328                           	callstack 24
  5329  002164  0E00               	movlw	0
  5330  002166  6E12               	movwf	___aomod@sign^0,c
  5331  002168  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5332  00216A  EFBB  F010         	goto	u1680
  5333  00216E  EFB9  F010         	goto	u1681
  5334  002172                     u1681:
  5335  002172  EFCD  F010         	goto	l2145
  5336  002176                     u1680:
  5337  002176  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5338  002178  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5339  00217A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5340  00217C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5341  00217E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5342  002180  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5343  002182  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5344  002184  6C01               	negf	___aomod@dividend^0,c
  5345  002186  0E00               	movlw	0
  5346  002188  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5347  00218A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5348  00218C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5349  00218E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5350  002190  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5351  002192  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5352  002194  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5353  002196  0E01               	movlw	1
  5354  002198  6E12               	movwf	___aomod@sign^0,c
  5355  00219A                     l2145:
  5356  00219A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5357  00219C  EFD4  F010         	goto	u1690
  5358  0021A0  EFD2  F010         	goto	u1691
  5359  0021A4                     u1691:
  5360  0021A4  EFE4  F010         	goto	l2149
  5361  0021A8                     u1690:
  5362  0021A8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5363  0021AA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5364  0021AC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5365  0021AE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5366  0021B0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5367  0021B2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5368  0021B4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5369  0021B6  6C09               	negf	___aomod@divisor^0,c
  5370  0021B8  0E00               	movlw	0
  5371  0021BA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5372  0021BC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5373  0021BE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5374  0021C0  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5375  0021C2  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5376  0021C4  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5377  0021C6  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5378  0021C8                     l2149:
  5379  0021C8  5009               	movf	___aomod@divisor^0,w,c
  5380  0021CA  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5381  0021CC  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5382  0021CE  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5383  0021D0  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5384  0021D2  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5385  0021D4  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5386  0021D6  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5387  0021D8  B4D8               	btfsc	status,2,c
  5388  0021DA  EFF1  F010         	goto	u1701
  5389  0021DE  EFF3  F010         	goto	u1700
  5390  0021E2                     u1701:
  5391  0021E2  EF3B  F011         	goto	l2165
  5392  0021E6                     u1700:
  5393  0021E6  0E01               	movlw	1
  5394  0021E8  6E11               	movwf	___aomod@counter^0,c
  5395  0021EA  EF01  F011         	goto	l2155
  5396  0021EE                     l2153:
  5397  0021EE  90D8               	bcf	status,0,c
  5398  0021F0  3609               	rlcf	___aomod@divisor^0,f,c
  5399  0021F2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5400  0021F4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5401  0021F6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5402  0021F8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5403  0021FA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5404  0021FC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5405  0021FE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5406  002200  2A11               	incf	___aomod@counter^0,f,c
  5407  002202                     l2155:
  5408  002202  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5409  002204  EF06  F011         	goto	u1711
  5410  002208  EF08  F011         	goto	u1710
  5411  00220C                     u1711:
  5412  00220C  EFF7  F010         	goto	l2153
  5413  002210                     u1710:
  5414  002210                     l2157:
  5415  002210  5009               	movf	___aomod@divisor^0,w,c
  5416  002212  5C01               	subwf	___aomod@dividend^0,w,c
  5417  002214  500A               	movf	(___aomod@divisor+1)^0,w,c
  5418  002216  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5419  002218  500B               	movf	(___aomod@divisor+2)^0,w,c
  5420  00221A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5421  00221C  500C               	movf	(___aomod@divisor+3)^0,w,c
  5422  00221E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5423  002220  500D               	movf	(___aomod@divisor+4)^0,w,c
  5424  002222  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5425  002224  500E               	movf	(___aomod@divisor+5)^0,w,c
  5426  002226  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5427  002228  500F               	movf	(___aomod@divisor+6)^0,w,c
  5428  00222A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5429  00222C  5010               	movf	(___aomod@divisor+7)^0,w,c
  5430  00222E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5431  002230  A0D8               	btfss	status,0,c
  5432  002232  EF1D  F011         	goto	u1721
  5433  002236  EF1F  F011         	goto	u1720
  5434  00223A                     u1721:
  5435  00223A  EF2F  F011         	goto	l2161
  5436  00223E                     u1720:
  5437  00223E  5009               	movf	___aomod@divisor^0,w,c
  5438  002240  5E01               	subwf	___aomod@dividend^0,f,c
  5439  002242  500A               	movf	(___aomod@divisor+1)^0,w,c
  5440  002244  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5441  002246  500B               	movf	(___aomod@divisor+2)^0,w,c
  5442  002248  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5443  00224A  500C               	movf	(___aomod@divisor+3)^0,w,c
  5444  00224C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5445  00224E  500D               	movf	(___aomod@divisor+4)^0,w,c
  5446  002250  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5447  002252  500E               	movf	(___aomod@divisor+5)^0,w,c
  5448  002254  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5449  002256  500F               	movf	(___aomod@divisor+6)^0,w,c
  5450  002258  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5451  00225A  5010               	movf	(___aomod@divisor+7)^0,w,c
  5452  00225C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5453  00225E                     l2161:
  5454  00225E  90D8               	bcf	status,0,c
  5455  002260  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5456  002262  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5457  002264  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5458  002266  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5459  002268  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5460  00226A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5461  00226C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5462  00226E  3209               	rrcf	___aomod@divisor^0,f,c
  5463  002270  2E11               	decfsz	___aomod@counter^0,f,c
  5464  002272  EF08  F011         	goto	l2157
  5465  002276                     l2165:
  5466  002276  5012               	movf	___aomod@sign^0,w,c
  5467  002278  B4D8               	btfsc	status,2,c
  5468  00227A  EF41  F011         	goto	u1731
  5469  00227E  EF43  F011         	goto	u1730
  5470  002282                     u1731:
  5471  002282  EF53  F011         	goto	l2169
  5472  002286                     u1730:
  5473  002286  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5474  002288  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5475  00228A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5476  00228C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5477  00228E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5478  002290  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5479  002292  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5480  002294  6C01               	negf	___aomod@dividend^0,c
  5481  002296  0E00               	movlw	0
  5482  002298  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5483  00229A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5484  00229C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5485  00229E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5486  0022A0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5487  0022A2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5488  0022A4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5489  0022A6                     l2169:
  5490  0022A6  C001  F001         	movff	___aomod@dividend,?___aomod
  5491  0022AA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5492  0022AE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5493  0022B2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5494  0022B6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5495  0022BA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5496  0022BE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5497  0022C2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5498  0022C6  0012               	return		;funcret
  5499  0022C8                     __end_of___aomod:
  5500                           	callstack 0
  5501                           
  5502 ;; *************** function ___aodiv *****************
  5503 ;; Defined at:
  5504 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  dividend        8    0[COMRAM] long long 
  5507 ;;  divisor         8    8[COMRAM] long long 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  quotient        8   18[COMRAM] long long 
  5510 ;;  sign            1   17[COMRAM] unsigned char 
  5511 ;;  counter         1   16[COMRAM] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  8    0[COMRAM] long long 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5521 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5522 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5524 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5525 ;;Total ram usage:       26 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 1
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_dtoa
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text28
  5536  001FDC                     __ptext28:
  5537                           	callstack 0
  5538  001FDC                     ___aodiv:
  5539                           	callstack 24
  5540  001FDC  0E00               	movlw	0
  5541  001FDE  6E12               	movwf	___aodiv@sign^0,c
  5542  001FE0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5543  001FE2  EFF7  F00F         	goto	u1610
  5544  001FE6  EFF5  F00F         	goto	u1611
  5545  001FEA                     u1611:
  5546  001FEA  EF09  F010         	goto	l2101
  5547  001FEE                     u1610:
  5548  001FEE  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5549  001FF0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5550  001FF2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5551  001FF4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5552  001FF6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5553  001FF8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5554  001FFA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5555  001FFC  6C09               	negf	___aodiv@divisor^0,c
  5556  001FFE  0E00               	movlw	0
  5557  002000  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5558  002002  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5559  002004  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5560  002006  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5561  002008  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5562  00200A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5563  00200C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5564  00200E  0E01               	movlw	1
  5565  002010  6E12               	movwf	___aodiv@sign^0,c
  5566  002012                     l2101:
  5567  002012  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5568  002014  EF10  F010         	goto	u1620
  5569  002018  EF0E  F010         	goto	u1621
  5570  00201C                     u1621:
  5571  00201C  EF22  F010         	goto	l2107
  5572  002020                     u1620:
  5573  002020  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5574  002022  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5575  002024  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5576  002026  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5577  002028  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5578  00202A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5579  00202C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5580  00202E  6C01               	negf	___aodiv@dividend^0,c
  5581  002030  0E00               	movlw	0
  5582  002032  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5583  002034  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5584  002036  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5585  002038  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5586  00203A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5587  00203C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5588  00203E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5589  002040  0E01               	movlw	1
  5590  002042  1A12               	xorwf	___aodiv@sign^0,f,c
  5591  002044                     l2107:
  5592  002044  EE20  F013         	lfsr	2,___aodiv@quotient
  5593  002048  0E07               	movlw	7
  5594  00204A                     u1631:
  5595  00204A  6ADE               	clrf	postinc2,c
  5596  00204C  06E8               	decf	wreg,f,c
  5597  00204E  E2FD               	bc	u1631
  5598  002050  5009               	movf	___aodiv@divisor^0,w,c
  5599  002052  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5600  002054  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5601  002056  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5602  002058  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5603  00205A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5604  00205C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5605  00205E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5606  002060  B4D8               	btfsc	status,2,c
  5607  002062  EF35  F010         	goto	u1641
  5608  002066  EF37  F010         	goto	u1640
  5609  00206A                     u1641:
  5610  00206A  EF89  F010         	goto	l2129
  5611  00206E                     u1640:
  5612  00206E  0E01               	movlw	1
  5613  002070  6E11               	movwf	___aodiv@counter^0,c
  5614  002072  EF45  F010         	goto	l2115
  5615  002076                     l2113:
  5616  002076  90D8               	bcf	status,0,c
  5617  002078  3609               	rlcf	___aodiv@divisor^0,f,c
  5618  00207A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5619  00207C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5620  00207E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5621  002080  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5622  002082  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5623  002084  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5624  002086  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5625  002088  2A11               	incf	___aodiv@counter^0,f,c
  5626  00208A                     l2115:
  5627  00208A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5628  00208C  EF4A  F010         	goto	u1651
  5629  002090  EF4C  F010         	goto	u1650
  5630  002094                     u1651:
  5631  002094  EF3B  F010         	goto	l2113
  5632  002098                     u1650:
  5633  002098                     l2117:
  5634  002098  90D8               	bcf	status,0,c
  5635  00209A  3613               	rlcf	___aodiv@quotient^0,f,c
  5636  00209C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5637  00209E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5638  0020A0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5639  0020A2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5640  0020A4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5641  0020A6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5642  0020A8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5643  0020AA  5009               	movf	___aodiv@divisor^0,w,c
  5644  0020AC  5C01               	subwf	___aodiv@dividend^0,w,c
  5645  0020AE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5646  0020B0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5647  0020B2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5648  0020B4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5649  0020B6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5650  0020B8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5651  0020BA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5652  0020BC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5653  0020BE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5654  0020C0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5655  0020C2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5656  0020C4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5657  0020C6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5658  0020C8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5659  0020CA  A0D8               	btfss	status,0,c
  5660  0020CC  EF6A  F010         	goto	u1661
  5661  0020D0  EF6C  F010         	goto	u1660
  5662  0020D4                     u1661:
  5663  0020D4  EF7D  F010         	goto	l2125
  5664  0020D8                     u1660:
  5665  0020D8  5009               	movf	___aodiv@divisor^0,w,c
  5666  0020DA  5E01               	subwf	___aodiv@dividend^0,f,c
  5667  0020DC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5668  0020DE  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5669  0020E0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5670  0020E2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5671  0020E4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5672  0020E6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5673  0020E8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5674  0020EA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5675  0020EC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5676  0020EE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5677  0020F0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5678  0020F2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5679  0020F4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5680  0020F6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5681  0020F8  8013               	bsf	___aodiv@quotient^0,0,c
  5682  0020FA                     l2125:
  5683  0020FA  90D8               	bcf	status,0,c
  5684  0020FC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5685  0020FE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5686  002100  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5687  002102  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5688  002104  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5689  002106  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5690  002108  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5691  00210A  3209               	rrcf	___aodiv@divisor^0,f,c
  5692  00210C  2E11               	decfsz	___aodiv@counter^0,f,c
  5693  00210E  EF4C  F010         	goto	l2117
  5694  002112                     l2129:
  5695  002112  5012               	movf	___aodiv@sign^0,w,c
  5696  002114  B4D8               	btfsc	status,2,c
  5697  002116  EF8F  F010         	goto	u1671
  5698  00211A  EF91  F010         	goto	u1670
  5699  00211E                     u1671:
  5700  00211E  EFA1  F010         	goto	l2133
  5701  002122                     u1670:
  5702  002122  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5703  002124  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5704  002126  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5705  002128  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5706  00212A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5707  00212C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5708  00212E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5709  002130  6C13               	negf	___aodiv@quotient^0,c
  5710  002132  0E00               	movlw	0
  5711  002134  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5712  002136  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5713  002138  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5714  00213A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5715  00213C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5716  00213E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5717  002140  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5718  002142                     l2133:
  5719  002142  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5720  002146  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5721  00214A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5722  00214E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5723  002152  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5724  002156  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5725  00215A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5726  00215E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5727  002162  0012               	return		;funcret
  5728  002164                     __end_of___aodiv:
  5729                           	callstack 0
  5730                           
  5731 ;; *************** function _atoi *****************
  5732 ;; Defined at:
  5733 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5736 ;;		 -> STR_2(26), STR_1(23), 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  n               2   20[COMRAM] int 
  5739 ;;  neg             2   13[COMRAM] int 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  2    7[COMRAM] int 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5750 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;Total ram usage:       15 bytes
  5754 ;; Hardware stack levels used: 1
  5755 ;; Hardware stack levels required when called: 2
  5756 ;; This function calls:
  5757 ;;		___wmul
  5758 ;;		_isdigit
  5759 ;;		_isspace
  5760 ;; This function is called by:
  5761 ;;		_vfpfcnvrt
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text29
  5766  001E38                     __ptext29:
  5767                           	callstack 0
  5768  001E38                     _atoi:
  5769                           	callstack 24
  5770  001E38  0E00               	movlw	0
  5771  001E3A  6E16               	movwf	(atoi@n+1)^0,c
  5772  001E3C  0E00               	movlw	0
  5773  001E3E  6E15               	movwf	atoi@n^0,c
  5774  001E40  0E00               	movlw	0
  5775  001E42  6E0F               	movwf	(atoi@neg+1)^0,c
  5776  001E44  0E00               	movlw	0
  5777  001E46  6E0E               	movwf	atoi@neg^0,c
  5778  001E48  EF28  F00F         	goto	l2287
  5779  001E4C                     l2285:
  5780  001E4C  4A08               	infsnz	atoi@s^0,f,c
  5781  001E4E  2A09               	incf	(atoi@s+1)^0,f,c
  5782  001E50                     l2287:
  5783  001E50  0E01               	movlw	1
  5784  001E52  6E14               	movwf	_atoi$1847^0,c
  5785  001E54  C008  FFF6         	movff	atoi@s,tblptrl
  5786  001E58  C009  FFF7         	movff	atoi@s+1,tblptrh
  5787  001E5C                     	if	0	;tblptru may be non-zero
  5788  001E5C                     	endif
  5789  001E5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5790  001E5C  0E00               	movlw	low (__mediumconst shr (0+16))
  5791  001E5E  6EF8               	movwf	tblptru,c
  5792  001E60                     	endif
  5793  001E60  0008               	tblrd		*
  5794  001E62  50F5               	movf	tablat,w,c
  5795  001E64  0A20               	xorlw	32
  5796  001E66  B4D8               	btfsc	status,2,c
  5797  001E68  EF38  F00F         	goto	u1981
  5798  001E6C  EF3A  F00F         	goto	u1980
  5799  001E70                     u1981:
  5800  001E70  EF59  F00F         	goto	l2295
  5801  001E74                     u1980:
  5802  001E74  0EF7               	movlw	247
  5803  001E76  6E0A               	movwf	??_atoi^0,c
  5804  001E78  0EFF               	movlw	255
  5805  001E7A  6E0B               	movwf	(??_atoi+1)^0,c
  5806  001E7C  C008  FFF6         	movff	atoi@s,tblptrl
  5807  001E80  C009  FFF7         	movff	atoi@s+1,tblptrh
  5808  001E84                     	if	0	;tblptru may be non-zero
  5809  001E84                     	endif
  5810  001E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5811  001E84  0E00               	movlw	low (__mediumconst shr (0+16))
  5812  001E86  6EF8               	movwf	tblptru,c
  5813  001E88                     	endif
  5814  001E88  0008               	tblrd		*
  5815  001E8A  50F5               	movf	tablat,w,c
  5816  001E8C  6E0C               	movwf	(??_atoi+2)^0,c
  5817  001E8E  6A0D               	clrf	(??_atoi+3)^0,c
  5818  001E90  500A               	movf	??_atoi^0,w,c
  5819  001E92  260C               	addwf	(??_atoi+2)^0,f,c
  5820  001E94  500B               	movf	(??_atoi+1)^0,w,c
  5821  001E96  220D               	addwfc	(??_atoi+3)^0,f,c
  5822  001E98  500D               	movf	(??_atoi+3)^0,w,c
  5823  001E9A  E109               	bnz	u1990
  5824  001E9C  0E05               	movlw	5
  5825  001E9E  5C0C               	subwf	(??_atoi+2)^0,w,c
  5826  001EA0  A0D8               	btfss	status,0,c
  5827  001EA2  EF55  F00F         	goto	u1991
  5828  001EA6  EF57  F00F         	goto	u1990
  5829  001EAA                     u1991:
  5830  001EAA  EF59  F00F         	goto	l2295
  5831  001EAE                     u1990:
  5832  001EAE  0E00               	movlw	0
  5833  001EB0  6E14               	movwf	_atoi$1847^0,c
  5834  001EB2                     l2295:
  5835  001EB2  C014  F010         	movff	_atoi$1847,_atoi$1846
  5836  001EB6  6A11               	clrf	(_atoi$1846+1)^0,c
  5837  001EB8  5010               	movf	_atoi$1846^0,w,c
  5838  001EBA  1011               	iorwf	(_atoi$1846+1)^0,w,c
  5839  001EBC  A4D8               	btfss	status,2,c
  5840  001EBE  EF63  F00F         	goto	u2001
  5841  001EC2  EF65  F00F         	goto	u2000
  5842  001EC6                     u2001:
  5843  001EC6  EF26  F00F         	goto	l2285
  5844  001ECA                     u2000:
  5845  001ECA  EF6F  F00F         	goto	l2305
  5846  001ECE                     l2301:
  5847  001ECE  0E00               	movlw	0
  5848  001ED0  6E0F               	movwf	(atoi@neg+1)^0,c
  5849  001ED2  0E01               	movlw	1
  5850  001ED4  6E0E               	movwf	atoi@neg^0,c
  5851  001ED6                     l2303:
  5852  001ED6  4A08               	infsnz	atoi@s^0,f,c
  5853  001ED8  2A09               	incf	(atoi@s+1)^0,f,c
  5854  001EDA  EFA8  F00F         	goto	l2311
  5855  001EDE                     l2305:
  5856  001EDE  C008  FFF6         	movff	atoi@s,tblptrl
  5857  001EE2  C009  FFF7         	movff	atoi@s+1,tblptrh
  5858  001EE6                     	if	0	;tblptru may be non-zero
  5859  001EE6                     	endif
  5860  001EE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5861  001EE6  0E00               	movlw	low (__mediumconst shr (0+16))
  5862  001EE8  6EF8               	movwf	tblptru,c
  5863  001EEA                     	endif
  5864  001EEA  0008               	tblrd		*
  5865  001EEC  50F5               	movf	tablat,w,c
  5866  001EEE  6E0A               	movwf	??_atoi^0,c
  5867  001EF0  6A0B               	clrf	(??_atoi+1)^0,c
  5868                           
  5869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5870                           ; Switch size 1, requested type "simple"
  5871                           ; Number of cases is 1, Range of values is 0 to 0
  5872                           ; switch strategies available:
  5873                           ; Name         Instructions Cycles
  5874                           ; simple_byte            4     3 (average)
  5875                           ;	Chosen strategy is simple_byte
  5876  001EF2  500B               	movf	(??_atoi+1)^0,w,c
  5877  001EF4  0A00               	xorlw	0	; case 0
  5878  001EF6  B4D8               	btfsc	status,2,c
  5879  001EF8  EF80  F00F         	goto	l2995
  5880  001EFC  EFA8  F00F         	goto	l2311
  5881  001F00                     l2995:
  5882                           
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 2, Range of values is 43 to 45
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            7     4 (average)
  5888                           ;	Chosen strategy is simple_byte
  5889  001F00  500A               	movf	??_atoi^0,w,c
  5890  001F02  0A2B               	xorlw	43	; case 43
  5891  001F04  B4D8               	btfsc	status,2,c
  5892  001F06  EF6B  F00F         	goto	l2303
  5893  001F0A  0A06               	xorlw	6	; case 45
  5894  001F0C  B4D8               	btfsc	status,2,c
  5895  001F0E  EF67  F00F         	goto	l2301
  5896  001F12  EFA8  F00F         	goto	l2311
  5897  001F16                     l2307:
  5898  001F16  C015  F001         	movff	atoi@n,___wmul@multiplier
  5899  001F1A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  5900  001F1E  0E00               	movlw	0
  5901  001F20  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5902  001F22  0E0A               	movlw	10
  5903  001F24  6E03               	movwf	___wmul@multiplicand^0,c
  5904  001F26  EC2C  F017         	call	___wmul	;wreg free
  5905  001F2A  C008  FFF6         	movff	atoi@s,tblptrl
  5906  001F2E  C009  FFF7         	movff	atoi@s+1,tblptrh
  5907  001F32                     	if	0	;tblptru may be non-zero
  5908  001F32                     	endif
  5909  001F32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5910  001F32  0E00               	movlw	low (__mediumconst shr (0+16))
  5911  001F34  6EF8               	movwf	tblptru,c
  5912  001F36                     	endif
  5913  001F36  0008               	tblrd		*
  5914  001F38  50F5               	movf	tablat,w,c
  5915  001F3A  5E01               	subwf	?___wmul^0,f,c
  5916  001F3C  0E00               	movlw	0
  5917  001F3E  5A02               	subwfb	(?___wmul+1)^0,f,c
  5918  001F40  0E30               	movlw	48
  5919  001F42  2401               	addwf	?___wmul^0,w,c
  5920  001F44  6E15               	movwf	atoi@n^0,c
  5921  001F46  0E00               	movlw	0
  5922  001F48  2002               	addwfc	(?___wmul+1)^0,w,c
  5923  001F4A  6E16               	movwf	(atoi@n+1)^0,c
  5924  001F4C  EF6B  F00F         	goto	l2303
  5925  001F50                     l2311:
  5926  001F50  0ED0               	movlw	208
  5927  001F52  6E0A               	movwf	??_atoi^0,c
  5928  001F54  0EFF               	movlw	255
  5929  001F56  6E0B               	movwf	(??_atoi+1)^0,c
  5930  001F58  C008  FFF6         	movff	atoi@s,tblptrl
  5931  001F5C  C009  FFF7         	movff	atoi@s+1,tblptrh
  5932  001F60                     	if	0	;tblptru may be non-zero
  5933  001F60                     	endif
  5934  001F60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5935  001F60  0E00               	movlw	low (__mediumconst shr (0+16))
  5936  001F62  6EF8               	movwf	tblptru,c
  5937  001F64                     	endif
  5938  001F64  0008               	tblrd		*
  5939  001F66  50F5               	movf	tablat,w,c
  5940  001F68  6E0C               	movwf	(??_atoi+2)^0,c
  5941  001F6A  6A0D               	clrf	(??_atoi+3)^0,c
  5942  001F6C  500A               	movf	??_atoi^0,w,c
  5943  001F6E  260C               	addwf	(??_atoi+2)^0,f,c
  5944  001F70  500B               	movf	(??_atoi+1)^0,w,c
  5945  001F72  220D               	addwfc	(??_atoi+3)^0,f,c
  5946  001F74  500D               	movf	(??_atoi+3)^0,w,c
  5947  001F76  E10A               	bnz	u2010
  5948  001F78  0E0A               	movlw	10
  5949  001F7A  5C0C               	subwf	(??_atoi+2)^0,w,c
  5950  001F7C  A0D8               	btfss	status,0,c
  5951  001F7E  EFC3  F00F         	goto	u2011
  5952  001F82  EFC6  F00F         	goto	u2010
  5953  001F86                     u2011:
  5954  001F86  0E01               	movlw	1
  5955  001F88  EFC7  F00F         	goto	u2020
  5956  001F8C                     u2010:
  5957  001F8C  0E00               	movlw	0
  5958  001F8E                     u2020:
  5959  001F8E  6E12               	movwf	_atoi$1848^0,c
  5960  001F90  6A13               	clrf	(_atoi$1848+1)^0,c
  5961  001F92  5012               	movf	_atoi$1848^0,w,c
  5962  001F94  1013               	iorwf	(_atoi$1848+1)^0,w,c
  5963  001F96  A4D8               	btfss	status,2,c
  5964  001F98  EFD0  F00F         	goto	u2031
  5965  001F9C  EFD2  F00F         	goto	u2030
  5966  001FA0                     u2031:
  5967  001FA0  EF8B  F00F         	goto	l2307
  5968  001FA4                     u2030:
  5969  001FA4  500E               	movf	atoi@neg^0,w,c
  5970  001FA6  100F               	iorwf	(atoi@neg+1)^0,w,c
  5971  001FA8  A4D8               	btfss	status,2,c
  5972  001FAA  EFD9  F00F         	goto	u2041
  5973  001FAE  EFDB  F00F         	goto	u2040
  5974  001FB2                     u2041:
  5975  001FB2  EFE9  F00F         	goto	l1081
  5976  001FB6                     u2040:
  5977  001FB6  C015  F00A         	movff	atoi@n,??_atoi
  5978  001FBA  C016  F00B         	movff	atoi@n+1,??_atoi+1
  5979  001FBE  1E0A               	comf	??_atoi^0,f,c
  5980  001FC0  1E0B               	comf	(??_atoi+1)^0,f,c
  5981  001FC2  4A0A               	infsnz	??_atoi^0,f,c
  5982  001FC4  2A0B               	incf	(??_atoi+1)^0,f,c
  5983  001FC6  C00A  F008         	movff	??_atoi,?_atoi
  5984  001FCA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  5985  001FCE  EFED  F00F         	goto	l1084
  5986  001FD2                     l1081:
  5987  001FD2  C015  F008         	movff	atoi@n,?_atoi
  5988  001FD6  C016  F009         	movff	atoi@n+1,?_atoi+1
  5989  001FDA                     l1084:
  5990  001FDA  0012               	return		;funcret
  5991  001FDC                     __end_of_atoi:
  5992                           	callstack 0
  5993                           
  5994 ;; *************** function _isspace *****************
  5995 ;; Defined at:
  5996 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  c               2    0[COMRAM] int 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  2    0[COMRAM] int 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;Total ram usage:        7 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 1
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_atoi
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text30
  6025  002C42                     __ptext30:
  6026                           	callstack 0
  6027  002C42                     _isspace:
  6028                           	callstack 24
  6029  002C42  0E01               	movlw	1
  6030  002C44  6E07               	movwf	_isspace$1864^0,c
  6031  002C46  0E20               	movlw	32
  6032  002C48  1801               	xorwf	isspace@c^0,w,c
  6033  002C4A  1002               	iorwf	(isspace@c+1)^0,w,c
  6034  002C4C  B4D8               	btfsc	status,2,c
  6035  002C4E  EF2B  F016         	goto	u1811
  6036  002C52  EF2D  F016         	goto	u1810
  6037  002C56                     u1811:
  6038  002C56  EF46  F016         	goto	l2211
  6039  002C5A                     u1810:
  6040  002C5A  0EF7               	movlw	247
  6041  002C5C  6E03               	movwf	??_isspace^0,c
  6042  002C5E  0EFF               	movlw	255
  6043  002C60  6E04               	movwf	(??_isspace+1)^0,c
  6044  002C62  C001  F005         	movff	isspace@c,??_isspace+2
  6045  002C66  C002  F006         	movff	isspace@c+1,??_isspace+3
  6046  002C6A  5003               	movf	??_isspace^0,w,c
  6047  002C6C  2605               	addwf	(??_isspace+2)^0,f,c
  6048  002C6E  5004               	movf	(??_isspace+1)^0,w,c
  6049  002C70  2206               	addwfc	(??_isspace+3)^0,f,c
  6050  002C72  5006               	movf	(??_isspace+3)^0,w,c
  6051  002C74  E109               	bnz	u1820
  6052  002C76  0E05               	movlw	5
  6053  002C78  5C05               	subwf	(??_isspace+2)^0,w,c
  6054  002C7A  A0D8               	btfss	status,0,c
  6055  002C7C  EF42  F016         	goto	u1821
  6056  002C80  EF44  F016         	goto	u1820
  6057  002C84                     u1821:
  6058  002C84  EF46  F016         	goto	l2211
  6059  002C88                     u1820:
  6060  002C88  0E00               	movlw	0
  6061  002C8A  6E07               	movwf	_isspace$1864^0,c
  6062  002C8C                     l2211:
  6063  002C8C  C007  F001         	movff	_isspace$1864,?_isspace
  6064  002C90  6A02               	clrf	(?_isspace+1)^0,c
  6065  002C92  0012               	return		;funcret
  6066  002C94                     __end_of_isspace:
  6067                           	callstack 0
  6068                           
  6069 ;; *************** function _isdigit *****************
  6070 ;; Defined at:
  6071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  c               2    0[COMRAM] int 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  2    0[COMRAM] int 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;Total ram usage:        6 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_vfpfcnvrt
  6096 ;;		_atoi
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text31
  6101  002D52                     __ptext31:
  6102                           	callstack 0
  6103  002D52                     _isdigit:
  6104                           	callstack 25
  6105  002D52  0ED0               	movlw	208
  6106  002D54  6E03               	movwf	??_isdigit^0,c
  6107  002D56  0EFF               	movlw	255
  6108  002D58  6E04               	movwf	(??_isdigit+1)^0,c
  6109  002D5A  C001  F005         	movff	isdigit@c,??_isdigit+2
  6110  002D5E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6111  002D62  5003               	movf	??_isdigit^0,w,c
  6112  002D64  2605               	addwf	(??_isdigit+2)^0,f,c
  6113  002D66  5004               	movf	(??_isdigit+1)^0,w,c
  6114  002D68  2206               	addwfc	(??_isdigit+3)^0,f,c
  6115  002D6A  5006               	movf	(??_isdigit+3)^0,w,c
  6116  002D6C  E10A               	bnz	u1790
  6117  002D6E  0E0A               	movlw	10
  6118  002D70  5C05               	subwf	(??_isdigit+2)^0,w,c
  6119  002D72  A0D8               	btfss	status,0,c
  6120  002D74  EFBE  F016         	goto	u1791
  6121  002D78  EFC1  F016         	goto	u1790
  6122  002D7C                     u1791:
  6123  002D7C  0E01               	movlw	1
  6124  002D7E  EFC2  F016         	goto	u1800
  6125  002D82                     u1790:
  6126  002D82  0E00               	movlw	0
  6127  002D84                     u1800:
  6128  002D84  6E01               	movwf	?_isdigit^0,c
  6129  002D86  6A02               	clrf	(?_isdigit+1)^0,c
  6130  002D88  0012               	return		;funcret
  6131  002D8A                     __end_of_isdigit:
  6132                           	callstack 0
  6133                           
  6134 ;; *************** function ___wmul *****************
  6135 ;; Defined at:
  6136 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  multiplier      2    0[COMRAM] unsigned int 
  6139 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  product         2    4[COMRAM] unsigned int 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  2    0[COMRAM] unsigned int 
  6144 ;; Registers used:
  6145 ;;		wreg, status,2, status,0, prodl, prodh
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6154 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;Total ram usage:        6 bytes
  6156 ;; Hardware stack levels used: 1
  6157 ;; Hardware stack levels required when called: 1
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_atoi
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text32
  6166  002E58                     __ptext32:
  6167                           	callstack 0
  6168  002E58                     ___wmul:
  6169                           	callstack 24
  6170  002E58  5001               	movf	___wmul@multiplier^0,w,c
  6171  002E5A  0203               	mulwf	___wmul@multiplicand^0,c
  6172  002E5C  CFF3 F005          	movff	prodl,___wmul@product
  6173  002E60  CFF4 F006          	movff	prodh,___wmul@product+1
  6174  002E64  5001               	movf	___wmul@multiplier^0,w,c
  6175  002E66  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6176  002E68  50F3               	movf	243,w,c
  6177  002E6A  2606               	addwf	(___wmul@product+1)^0,f,c
  6178  002E6C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6179  002E6E  0203               	mulwf	___wmul@multiplicand^0,c
  6180  002E70  50F3               	movf	243,w,c
  6181  002E72  2606               	addwf	(___wmul@product+1)^0,f,c
  6182  002E74  C005  F001         	movff	___wmul@product,?___wmul
  6183  002E78  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6184  002E7C  0012               	return		;funcret
  6185  002E7E                     __end_of___wmul:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _LCD_setline *****************
  6189 ;; Defined at:
  6190 ;;		line 86 in file "LCD.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  line            1    wreg     unsigned char 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  line            1    3[COMRAM] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;Total ram usage:        1 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 4
  6211 ;; This function calls:
  6212 ;;		_LCD_sendbyte
  6213 ;; This function is called by:
  6214 ;;		_Display
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text33
  6219  002D18                     __ptext33:
  6220                           	callstack 0
  6221  002D18                     _LCD_setline:
  6222                           	callstack 25
  6223                           
  6224                           ;incstack = 0
  6225                           ;LCD_setline@line stored from wreg
  6226  002D18  6E04               	movwf	LCD_setline@line^0,c
  6227  002D1A                     
  6228                           ;LCD.c: 86: void LCD_setline (char line);LCD.c: 87: {;LCD.c: 88:     if (line == 1) {LCD
      +                          _sendbyte(0x80,0);}
  6229  002D1A  0404               	decf	LCD_setline@line^0,w,c
  6230  002D1C  A4D8               	btfss	status,2,c
  6231  002D1E  EF93  F016         	goto	u2461
  6232  002D22  EF95  F016         	goto	u2460
  6233  002D26                     u2461:
  6234  002D26  EF9A  F016         	goto	l2619
  6235  002D2A                     u2460:
  6236  002D2A  0E00               	movlw	0
  6237  002D2C  6E02               	movwf	LCD_sendbyte@type^0,c
  6238  002D2E  0E80               	movlw	128
  6239  002D30  ECE0  F016         	call	_LCD_sendbyte
  6240  002D34                     l2619:
  6241                           
  6242                           ;LCD.c: 89:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  6243  002D34  0E02               	movlw	2
  6244  002D36  1804               	xorwf	LCD_setline@line^0,w,c
  6245  002D38  A4D8               	btfss	status,2,c
  6246  002D3A  EFA1  F016         	goto	u2471
  6247  002D3E  EFA3  F016         	goto	u2470
  6248  002D42                     u2471:
  6249  002D42  EFA8  F016         	goto	l258
  6250  002D46                     u2470:
  6251  002D46  0E00               	movlw	0
  6252  002D48  6E02               	movwf	LCD_sendbyte@type^0,c
  6253  002D4A  0EC0               	movlw	192
  6254  002D4C  ECE0  F016         	call	_LCD_sendbyte
  6255  002D50                     l258:
  6256  002D50  0012               	return		;funcret
  6257  002D52                     __end_of_LCD_setline:
  6258                           	callstack 0
  6259                           
  6260 ;; *************** function _LCD_sendstring *****************
  6261 ;; Defined at:
  6262 ;;		line 95 in file "LCD.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  string          2    3[COMRAM] PTR unsigned char 
  6265 ;;		 -> Display@string2(15), Display@string(16), 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6281 ;;Total ram usage:        2 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; Hardware stack levels required when called: 4
  6284 ;; This function calls:
  6285 ;;		_LCD_sendbyte
  6286 ;; This function is called by:
  6287 ;;		_Display
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text34
  6292  002DF6                     __ptext34:
  6293                           	callstack 0
  6294  002DF6                     _LCD_sendstring:
  6295                           	callstack 25
  6296  002DF6                     
  6297                           ;LCD.c: 95: void LCD_sendstring(char *string);LCD.c: 96: {;LCD.c: 98:     while(*string 
      +                          != 0){
  6298  002DF6  EF08  F017         	goto	l2629
  6299  002DFA                     l2625:
  6300                           
  6301                           ;LCD.c: 99:   LCD_sendbyte(*string++,1);
  6302  002DFA  0E01               	movlw	1
  6303  002DFC  6E02               	movwf	LCD_sendbyte@type^0,c
  6304  002DFE  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  6305  002E02  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6306  002E06  50DF               	movf	indf2,w,c
  6307  002E08  ECE0  F016         	call	_LCD_sendbyte
  6308  002E0C  4A04               	infsnz	LCD_sendstring@string^0,f,c
  6309  002E0E  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  6310  002E10                     l2629:
  6311                           
  6312                           ;LCD.c: 98:     while(*string != 0){
  6313  002E10  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  6314  002E14  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6315  002E18  50DF               	movf	indf2,w,c
  6316  002E1A  A4D8               	btfss	status,2,c
  6317  002E1C  EF12  F017         	goto	u2481
  6318  002E20  EF14  F017         	goto	u2480
  6319  002E24                     u2481:
  6320  002E24  EFFD  F016         	goto	l2625
  6321  002E28                     u2480:
  6322  002E28  0012               	return		;funcret
  6323  002E2A                     __end_of_LCD_sendstring:
  6324                           	callstack 0
  6325                           
  6326 ;; *************** function _LCD_sendbyte *****************
  6327 ;; Defined at:
  6328 ;;		line 36 in file "LCD.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  Byte            1    wreg     unsigned char 
  6331 ;;  type            1    1[COMRAM] unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  Byte            1    2[COMRAM] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6347 ;;Total ram usage:        2 bytes
  6348 ;; Hardware stack levels used: 1
  6349 ;; Hardware stack levels required when called: 3
  6350 ;; This function calls:
  6351 ;;		_LCD_sendnibble
  6352 ;; This function is called by:
  6353 ;;		_LCD_Init
  6354 ;;		_LCD_setline
  6355 ;;		_LCD_sendstring
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           	psect	text35
  6360  002DC0                     __ptext35:
  6361                           	callstack 0
  6362  002DC0                     _LCD_sendbyte:
  6363                           	callstack 26
  6364                           
  6365                           ;incstack = 0
  6366                           ;LCD_sendbyte@Byte stored from wreg
  6367  002DC0  6E03               	movwf	LCD_sendbyte@Byte^0,c
  6368  002DC2                     
  6369                           ;LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 37: {;LCD.c: 38:    
      +                           if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  6370  002DC2  5002               	movf	LCD_sendbyte@type^0,w,c
  6371  002DC4  B4D8               	btfsc	status,2,c
  6372  002DC6  EFE7  F016         	goto	u2241
  6373  002DCA  EFE9  F016         	goto	u2240
  6374  002DCE                     u2241:
  6375  002DCE  EFEC  F016         	goto	l248
  6376  002DD2                     u2240:
  6377  002DD2  8C7B               	bsf	123,6,c	;volatile
  6378  002DD4  EFED  F016         	goto	l2471
  6379  002DD8                     l248:
  6380  002DD8  9C7B               	bcf	123,6,c	;volatile
  6381  002DDA                     l2471:
  6382                           
  6383                           ;LCD.c: 39:     LCD_sendnibble((Byte >> 4) & 0b1111);
  6384  002DDA  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  6385  002DDC  0B0F               	andlw	15
  6386  002DDE  0B0F               	andlw	15
  6387  002DE0  EC5F  F015         	call	_LCD_sendnibble
  6388                           
  6389                           ;LCD.c: 40:     LCD_sendnibble(Byte & 0b1111);
  6390  002DE4  5003               	movf	LCD_sendbyte@Byte^0,w,c
  6391  002DE6  0B0F               	andlw	15
  6392  002DE8  EC5F  F015         	call	_LCD_sendnibble
  6393  002DEC                     
  6394                           ;LCD.c: 42:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  6395  002DEC  0EA0               	movlw	160
  6396  002DEE                     u3147:
  6397  002DEE  D000               	nop2	
  6398  002DF0  2EE8               	decfsz	wreg,f,c
  6399  002DF2  D7FD               	bra	u3147
  6400  002DF4  0012               	return		;funcret
  6401  002DF6                     __end_of_LCD_sendbyte:
  6402                           	callstack 0
  6403                           
  6404 ;; *************** function _LCD_sendnibble *****************
  6405 ;; Defined at:
  6406 ;;		line 19 in file "LCD.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  number          1    wreg     unsigned char 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  number          1    0[COMRAM] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;Total ram usage:        1 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 2
  6427 ;; This function calls:
  6428 ;;		_LCD_E_TOG
  6429 ;; This function is called by:
  6430 ;;		_LCD_sendbyte
  6431 ;;		_LCD_Init
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text36
  6436  002ABE                     __ptext36:
  6437                           	callstack 0
  6438  002ABE                     _LCD_sendnibble:
  6439                           	callstack 27
  6440                           
  6441                           ;incstack = 0
  6442                           ;LCD_sendnibble@number stored from wreg
  6443  002ABE  6E01               	movwf	LCD_sendnibble@number^0,c
  6444  002AC0                     
  6445                           ;LCD.c: 19: void LCD_sendnibble(unsigned char number);LCD.c: 20: {;LCD.c: 22:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  6446  002AC0  A001               	btfss	LCD_sendnibble@number^0,0,c
  6447  002AC2  EF65  F015         	goto	u2051
  6448  002AC6  EF67  F015         	goto	u2050
  6449  002ACA                     u2051:
  6450  002ACA  EF6A  F015         	goto	l237
  6451  002ACE                     u2050:
  6452  002ACE  867A               	bsf	122,3,c	;volatile
  6453  002AD0  EF6B  F015         	goto	l2329
  6454  002AD4                     l237:
  6455  002AD4  967A               	bcf	122,3,c	;volatile
  6456  002AD6                     l2329:
  6457                           
  6458                           ;LCD.c: 23:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  6459  002AD6  A201               	btfss	LCD_sendnibble@number^0,1,c
  6460  002AD8  EF70  F015         	goto	u2061
  6461  002ADC  EF72  F015         	goto	u2060
  6462  002AE0                     u2061:
  6463  002AE0  EF75  F015         	goto	l239
  6464  002AE4                     u2060:
  6465  002AE4  847A               	bsf	122,2,c	;volatile
  6466  002AE6  EF76  F015         	goto	l2333
  6467  002AEA                     l239:
  6468  002AEA  947A               	bcf	122,2,c	;volatile
  6469  002AEC                     l2333:
  6470                           
  6471                           ;LCD.c: 24:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  6472  002AEC  A401               	btfss	LCD_sendnibble@number^0,2,c
  6473  002AEE  EF7B  F015         	goto	u2071
  6474  002AF2  EF7D  F015         	goto	u2070
  6475  002AF6                     u2071:
  6476  002AF6  EF80  F015         	goto	l241
  6477  002AFA                     u2070:
  6478  002AFA  867D               	bsf	125,3,c	;volatile
  6479  002AFC  EF81  F015         	goto	l2337
  6480  002B00                     l241:
  6481  002B00  967D               	bcf	125,3,c	;volatile
  6482  002B02                     l2337:
  6483                           
  6484                           ;LCD.c: 25:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  6485  002B02  A601               	btfss	LCD_sendnibble@number^0,3,c
  6486  002B04  EF86  F015         	goto	u2081
  6487  002B08  EF88  F015         	goto	u2080
  6488  002B0C                     u2081:
  6489  002B0C  EF8B  F015         	goto	l243
  6490  002B10                     u2080:
  6491  002B10  827D               	bsf	125,1,c	;volatile
  6492  002B12  EF8C  F015         	goto	l2341
  6493  002B16                     l243:
  6494  002B16  927D               	bcf	125,1,c	;volatile
  6495  002B18                     l2341:
  6496                           
  6497                           ;LCD.c: 27:     LCD_E_TOG();
  6498  002B18  EC71  F017         	call	_LCD_E_TOG	;wreg free
  6499  002B1C                     
  6500                           ;LCD.c: 28:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  6501  002B1C  0E1A               	movlw	26
  6502  002B1E                     u3157:
  6503  002B1E  2EE8               	decfsz	wreg,f,c
  6504  002B20  D7FE               	bra	u3157
  6505  002B22  D000               	nop2	
  6506  002B24  0012               	return		;funcret
  6507  002B26                     __end_of_LCD_sendnibble:
  6508                           	callstack 0
  6509                           
  6510 ;; *************** function _LCD_E_TOG *****************
  6511 ;; Defined at:
  6512 ;;		line 9 in file "LCD.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      void 
  6519 ;; Registers used:
  6520 ;;		wreg
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6530 ;;Total ram usage:        0 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_LCD_sendnibble
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text37
  6541  002EE2                     __ptext37:
  6542                           	callstack 0
  6543  002EE2                     _LCD_E_TOG:
  6544                           	callstack 27
  6545  002EE2                     
  6546                           ;LCD.c: 11:  LATCbits.LATC2 = 1;
  6547  002EE2  847B               	bsf	123,2,c	;volatile
  6548  002EE4                     
  6549                           ;LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  6550  002EE4  0E0A               	movlw	10
  6551  002EE6                     u3167:
  6552  002EE6  2EE8               	decfsz	wreg,f,c
  6553  002EE8  D7FE               	bra	u3167
  6554  002EEA  D000               	nop2	
  6555  002EEC                     
  6556                           ;LCD.c: 13:  LATCbits.LATC2 = 0;
  6557  002EEC  947B               	bcf	123,2,c	;volatile
  6558  002EEE  0012               	return		;funcret
  6559  002EF0                     __end_of_LCD_E_TOG:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function _Comp1_init *****************
  6563 ;; Defined at:
  6564 ;;		line 21 in file "comparator.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used: 1
  6584 ;; Hardware stack levels required when called: 2
  6585 ;; This function calls:
  6586 ;;		_DAC_init
  6587 ;; This function is called by:
  6588 ;;		_main
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text38
  6593  002E2A                     __ptext38:
  6594                           	callstack 0
  6595  002E2A                     _Comp1_init:
  6596                           	callstack 28
  6597  002E2A                     
  6598                           ;comparator.c: 23:     TRISFbits.TRISF7 = 1;
  6599  002E2A  8E86               	bsf	134,7,c	;volatile
  6600  002E2C                     
  6601                           ;comparator.c: 24:     CM1NCHbits.NCH = 0b011;
  6602  002E2C  010E               	movlb	14	; () banked
  6603  002E2E  51D2               	movf	210,w,b	;volatile
  6604  002E30  0BF8               	andlw	-8
  6605  002E32  0903               	iorlw	3
  6606  002E34  6FD2               	movwf	210,b	;volatile
  6607                           
  6608                           ;comparator.c: 25:     CM1PCHbits.PCH = 0b101;
  6609  002E36  51D3               	movf	211,w,b	;volatile
  6610  002E38  0BF8               	andlw	-8
  6611  002E3A  0905               	iorlw	5
  6612  002E3C  6FD3               	movwf	211,b	;volatile
  6613  002E3E                     
  6614                           ; BSR set to: 14
  6615                           ;comparator.c: 26:     CM1CON0bits.HYS = 1;
  6616  002E3E  83D0               	bsf	208,1,b	;volatile
  6617  002E40                     
  6618                           ; BSR set to: 14
  6619                           ;comparator.c: 27:     CM1CON0bits.POL = 1;
  6620  002E40  89D0               	bsf	208,4,b	;volatile
  6621  002E42                     
  6622                           ; BSR set to: 14
  6623                           ;comparator.c: 28:     CM1CON1bits.INTP = 1;
  6624  002E42  83D1               	bsf	209,1,b	;volatile
  6625  002E44                     
  6626                           ; BSR set to: 14
  6627                           ;comparator.c: 29:     CM1CON1bits.INTN = 1;
  6628  002E44  81D1               	bsf	209,0,b	;volatile
  6629  002E46                     
  6630                           ; BSR set to: 14
  6631                           ;comparator.c: 30:     DAC_init();
  6632  002E46  EC67  F017         	call	_DAC_init	;wreg free
  6633  002E4A                     
  6634                           ;comparator.c: 31:     CM1CON0bits.EN = 1;
  6635  002E4A  010E               	movlb	14	; () banked
  6636  002E4C  8FD0               	bsf	208,7,b	;volatile
  6637  002E4E                     
  6638                           ; BSR set to: 14
  6639                           ;comparator.c: 32:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  6640  002E4E  0E35               	movlw	53
  6641  002E50                     u3177:
  6642  002E50  2EE8               	decfsz	wreg,f,c
  6643  002E52  D7FE               	bra	u3177
  6644  002E54  F000               	nop	
  6645  002E56  0012               	return		;funcret
  6646  002E58                     __end_of_Comp1_init:
  6647                           	callstack 0
  6648                           
  6649 ;; *************** function _DAC_init *****************
  6650 ;; Defined at:
  6651 ;;		line 7 in file "comparator.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6669 ;;Total ram usage:        0 bytes
  6670 ;; Hardware stack levels used: 1
  6671 ;; Hardware stack levels required when called: 1
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_Comp1_init
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text39
  6680  002ECE                     __ptext39:
  6681                           	callstack 0
  6682  002ECE                     _DAC_init:
  6683                           	callstack 28
  6684  002ECE                     
  6685                           ;comparator.c: 9:     DAC1CON0bits.PSS = 0b00;
  6686  002ECE  0EF3               	movlw	-13
  6687  002ED0  010E               	movlb	14	; () banked
  6688  002ED2  17C6               	andwf	198,f,b	;volatile
  6689  002ED4                     
  6690                           ; BSR set to: 14
  6691                           ;comparator.c: 10:     DAC1CON0bits.NSS = 0b0;
  6692  002ED4  91C6               	bcf	198,0,b	;volatile
  6693                           
  6694                           ;comparator.c: 14:     DAC1CON1bits.DAC1R = 0b1111;
  6695  002ED6  51C7               	movf	199,w,b	;volatile
  6696  002ED8  0BE0               	andlw	-32
  6697  002EDA  090F               	iorlw	15
  6698  002EDC  6FC7               	movwf	199,b	;volatile
  6699  002EDE                     
  6700                           ; BSR set to: 14
  6701                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN = 1;
  6702  002EDE  8FC6               	bsf	198,7,b	;volatile
  6703  002EE0                     
  6704                           ; BSR set to: 14
  6705  002EE0  0012               	return		;funcret
  6706  002EE2                     __end_of_DAC_init:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function _ISR *****************
  6710 ;; Defined at:
  6711 ;;		line 20 in file "interrupts.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;Total ram usage:        0 bytes
  6730 ;; Hardware stack levels used: 1
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		Interrupt level 2
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           	psect	intcode
  6739  000008                     __pintcode:
  6740                           	callstack 0
  6741  000008                     _ISR:
  6742                           	callstack 21
  6743                           
  6744                           ; BSR set to: 14
  6745                           ;incstack = 0
  6746  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6747  00000A                     
  6748                           ;interrupts.c: 22:     if (PIR0bits.TMR0IF == 1) {
  6749  00000A  010E               	movlb	14	; () banked
  6750  00000C  AB33               	btfss	51,5,b	;volatile
  6751  00000E  EF0B  F000         	goto	i2u302_41
  6752  000012  EF0D  F000         	goto	i2u302_40
  6753  000016                     i2u302_41:
  6754  000016  EF16  F000         	goto	i2l2899
  6755  00001A                     i2u302_40:
  6756  00001A                     
  6757                           ; BSR set to: 14
  6758                           ;interrupts.c: 23:         minutehand = 1;
  6759  00001A  0E01               	movlw	1
  6760  00001C  0100               	movlb	0	; () banked
  6761  00001E  6FC6               	movwf	_minutehand& (0+255),b
  6762                           
  6763                           ;interrupts.c: 24:         TMR0H=0b00011011;
  6764  000020  0E1B               	movlw	27
  6765  000022  6ED4               	movwf	212,c	;volatile
  6766                           
  6767                           ;interrupts.c: 25:         TMR0L=0b00011101;
  6768  000024  0E1D               	movlw	29
  6769  000026  6ED3               	movwf	211,c	;volatile
  6770  000028                     
  6771                           ; BSR set to: 0
  6772                           ;interrupts.c: 26:         PIR0bits.TMR0IF = 0;
  6773  000028  010E               	movlb	14	; () banked
  6774  00002A  9B33               	bcf	51,5,b	;volatile
  6775  00002C                     i2l2899:
  6776                           
  6777                           ; BSR set to: 14
  6778                           ;interrupts.c: 29:     if (PIR2bits.C1IF == 1) {
  6779  00002C  A135               	btfss	53,0,b	;volatile
  6780  00002E  EF1B  F000         	goto	i2u303_41
  6781  000032  EF1D  F000         	goto	i2u303_40
  6782  000036                     i2u303_41:
  6783  000036  EF30  F000         	goto	i2l56
  6784  00003A                     i2u303_40:
  6785  00003A                     
  6786                           ; BSR set to: 14
  6787                           ;interrupts.c: 30:         if (CM1CON0bits.OUT) {LATHbits.LATH3 = 1; dawndusk = 2;}
  6788  00003A  ADD0               	btfss	208,6,b	;volatile
  6789  00003C  EF22  F000         	goto	i2u304_41
  6790  000040  EF24  F000         	goto	i2u304_40
  6791  000044                     i2u304_41:
  6792  000044  EF2A  F000         	goto	i2l54
  6793  000048                     i2u304_40:
  6794  000048                     
  6795                           ; BSR set to: 14
  6796  000048  8680               	bsf	128,3,c	;volatile
  6797  00004A                     
  6798                           ; BSR set to: 14
  6799  00004A  0E02               	movlw	2
  6800  00004C  0100               	movlb	0	; () banked
  6801  00004E  6FC5               	movwf	_dawndusk& (0+255),b
  6802  000050  EF2E  F000         	goto	i2l2909
  6803  000054                     i2l54:
  6804                           
  6805                           ; BSR set to: 14
  6806  000054  9680               	bcf	128,3,c	;volatile
  6807  000056                     
  6808                           ; BSR set to: 14
  6809  000056  0E01               	movlw	1
  6810  000058  0100               	movlb	0	; () banked
  6811  00005A  6FC5               	movwf	_dawndusk& (0+255),b
  6812  00005C                     i2l2909:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;interrupts.c: 32:         PIR2bits.C1IF = 0;
  6816  00005C  010E               	movlb	14	; () banked
  6817  00005E  9135               	bcf	53,0,b	;volatile
  6818  000060                     i2l56:
  6819                           
  6820                           ; BSR set to: 14
  6821  000060  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6822  000062  0011               	retfie		f
  6823  000064                     __end_of_ISR:
  6824                           	callstack 0
  6825                           
  6826                           	psect	rparam
  6827  0000                     
  6828                           	psect	temp
  6829  00005E                     btemp:
  6830                           	callstack 0
  6831  00005E                     	ds	1
  6832  0000                     int$flags	set	btemp
  6833  0000                     wtemp8	set	btemp+1
  6834  0000                     ttemp5	set	btemp+1
  6835  0000                     ttemp6	set	btemp+4
  6836  0000                     ttemp7	set	btemp+8
  6837                           
  6838                           	psect	idloc
  6839                           
  6840                           ;Config register IDLOC0 @ 0x200000
  6841                           ;	unspecified, using default values
  6842  200000                     	org	2097152
  6843  200000  0FFF               	dw	4095
  6844                           
  6845                           ;Config register IDLOC1 @ 0x200002
  6846                           ;	unspecified, using default values
  6847  200002                     	org	2097154
  6848  200002  0FFF               	dw	4095
  6849                           
  6850                           ;Config register IDLOC2 @ 0x200004
  6851                           ;	unspecified, using default values
  6852  200004                     	org	2097156
  6853  200004  0FFF               	dw	4095
  6854                           
  6855                           ;Config register IDLOC3 @ 0x200006
  6856                           ;	unspecified, using default values
  6857  200006                     	org	2097158
  6858  200006  0FFF               	dw	4095
  6859                           
  6860                           ;Config register IDLOC4 @ 0x200008
  6861                           ;	unspecified, using default values
  6862  200008                     	org	2097160
  6863  200008  0FFF               	dw	4095
  6864                           
  6865                           ;Config register IDLOC5 @ 0x20000A
  6866                           ;	unspecified, using default values
  6867  20000A                     	org	2097162
  6868  20000A  0FFF               	dw	4095
  6869                           
  6870                           ;Config register IDLOC6 @ 0x20000C
  6871                           ;	unspecified, using default values
  6872  20000C                     	org	2097164
  6873  20000C  0FFF               	dw	4095
  6874                           
  6875                           ;Config register IDLOC7 @ 0x20000E
  6876                           ;	unspecified, using default values
  6877  20000E                     	org	2097166
  6878  20000E  0FFF               	dw	4095
  6879                           
  6880                           	psect	config
  6881                           
  6882                           ;Config register CONFIG1L @ 0x300000
  6883                           ;	External Oscillator mode Selection bits
  6884                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6885                           ;	Power-up default value for COSC bits
  6886                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6887  300000                     	org	3145728
  6888  300000  AA                 	db	170
  6889                           
  6890                           ;Config register CONFIG1H @ 0x300001
  6891                           ;	unspecified, using default values
  6892                           ;	Clock Out Enable bit
  6893                           ;	CLKOUTEN = 0x1, unprogrammed default
  6894                           ;	Clock Switch Enable bit
  6895                           ;	CSWEN = 0x1, unprogrammed default
  6896                           ;	Fail-Safe Clock Monitor Enable bit
  6897                           ;	FCMEN = 0x1, unprogrammed default
  6898  300001                     	org	3145729
  6899  300001  FF                 	db	255
  6900                           
  6901                           ;Config register CONFIG2L @ 0x300002
  6902                           ;	unspecified, using default values
  6903                           ;	Master Clear Enable bit
  6904                           ;	MCLRE = 0x1, unprogrammed default
  6905                           ;	Power-up Timer Enable bit
  6906                           ;	PWRTE = 0x1, unprogrammed default
  6907                           ;	Low-power BOR enable bit
  6908                           ;	LPBOREN = 0x1, unprogrammed default
  6909                           ;	Brown-out Reset Enable bits
  6910                           ;	BOREN = 0x3, unprogrammed default
  6911  300002                     	org	3145730
  6912  300002  FF                 	db	255
  6913                           
  6914                           ;Config register CONFIG2H @ 0x300003
  6915                           ;	unspecified, using default values
  6916                           ;	Brown Out Reset Voltage selection bits
  6917                           ;	BORV = 0x3, unprogrammed default
  6918                           ;	ZCD Disable bit
  6919                           ;	ZCD = 0x1, unprogrammed default
  6920                           ;	PPSLOCK bit One-Way Set Enable bit
  6921                           ;	PPS1WAY = 0x1, unprogrammed default
  6922                           ;	Stack Full/Underflow Reset Enable bit
  6923                           ;	STVREN = 0x1, unprogrammed default
  6924                           ;	Debugger Enable bit
  6925                           ;	DEBUG = 0x1, unprogrammed default
  6926                           ;	Extended Instruction Set Enable bit
  6927                           ;	XINST = 0x1, unprogrammed default
  6928  300003                     	org	3145731
  6929  300003  FF                 	db	255
  6930                           
  6931                           ;Config register CONFIG3L @ 0x300004
  6932                           ;	WDT Period Select bits
  6933                           ;	WDTCPS = 0x1F, unprogrammed default
  6934                           ;	WDT operating mode
  6935                           ;	WDTE = OFF, WDT Disabled
  6936  300004                     	org	3145732
  6937  300004  9F                 	db	159
  6938                           
  6939                           ;Config register CONFIG3H @ 0x300005
  6940                           ;	unspecified, using default values
  6941                           ;	WDT Window Select bits
  6942                           ;	WDTCWS = 0x7, unprogrammed default
  6943                           ;	WDT input clock selector
  6944                           ;	WDTCCS = 0x7, unprogrammed default
  6945  300005                     	org	3145733
  6946  300005  FF                 	db	255
  6947                           
  6948                           ;Config register CONFIG4L @ 0x300006
  6949                           ;	unspecified, using default values
  6950                           ;	Write Protection Block 0
  6951                           ;	WRT0 = 0x1, unprogrammed default
  6952                           ;	Write Protection Block 1
  6953                           ;	WRT1 = 0x1, unprogrammed default
  6954                           ;	Write Protection Block 2
  6955                           ;	WRT2 = 0x1, unprogrammed default
  6956                           ;	Write Protection Block 3
  6957                           ;	WRT3 = 0x1, unprogrammed default
  6958                           ;	Write Protection Block 3
  6959                           ;	WRT4 = 0x1, unprogrammed default
  6960                           ;	Write Protection Block 3
  6961                           ;	WRT5 = 0x1, unprogrammed default
  6962                           ;	Write Protection Block 3
  6963                           ;	WRT6 = 0x1, unprogrammed default
  6964                           ;	Write Protection Block 3
  6965                           ;	WRT7 = 0x1, unprogrammed default
  6966  300006                     	org	3145734
  6967  300006  FF                 	db	255
  6968                           
  6969                           ;Config register CONFIG4H @ 0x300007
  6970                           ;	unspecified, using default values
  6971                           ;	Configuration Register Write Protection bit
  6972                           ;	WRTC = 0x1, unprogrammed default
  6973                           ;	Boot Block Write Protection bit
  6974                           ;	WRTB = 0x1, unprogrammed default
  6975                           ;	Data EEPROM Write Protection bit
  6976                           ;	WRTD = 0x1, unprogrammed default
  6977                           ;	Scanner Enable bit
  6978                           ;	SCANE = 0x1, unprogrammed default
  6979                           ;	Low Voltage Programming Enable bit
  6980                           ;	LVP = 0x1, unprogrammed default
  6981  300007                     	org	3145735
  6982  300007  FF                 	db	255
  6983                           
  6984                           ;Config register CONFIG5L @ 0x300008
  6985                           ;	unspecified, using default values
  6986                           ;	UserNVM Program Memory Code Protection bit
  6987                           ;	CP = 0x1, unprogrammed default
  6988                           ;	DataNVM Memory Code Protection bit
  6989                           ;	CPD = 0x1, unprogrammed default
  6990  300008                     	org	3145736
  6991  300008  FF                 	db	255
  6992                           
  6993                           ;Config register CONFIG5H @ 0x300009
  6994                           ;	unspecified, using default values
  6995  300009                     	org	3145737
  6996  300009  FF                 	db	255
  6997                           
  6998                           ;Config register CONFIG6L @ 0x30000A
  6999                           ;	unspecified, using default values
  7000                           ;	Table Read Protection Block 0
  7001                           ;	EBTR0 = 0x1, unprogrammed default
  7002                           ;	Table Read Protection Block 1
  7003                           ;	EBTR1 = 0x1, unprogrammed default
  7004                           ;	Table Read Protection Block 2
  7005                           ;	EBTR2 = 0x1, unprogrammed default
  7006                           ;	Table Read Protection Block 3
  7007                           ;	EBTR3 = 0x1, unprogrammed default
  7008                           ;	Table Read Protection Block 4
  7009                           ;	EBTR4 = 0x1, unprogrammed default
  7010                           ;	Table Read Protection Block 5
  7011                           ;	EBTR5 = 0x1, unprogrammed default
  7012                           ;	Table Read Protection Block 6
  7013                           ;	EBTR6 = 0x1, unprogrammed default
  7014                           ;	Table Read Protection Block 7
  7015                           ;	EBTR7 = 0x1, unprogrammed default
  7016  30000A                     	org	3145738
  7017  30000A  FF                 	db	255
  7018                           
  7019                           ;Config register CONFIG6H @ 0x30000B
  7020                           ;	unspecified, using default values
  7021                           ;	Boot Block Table Read Protection bit
  7022                           ;	EBTRB = 0x1, unprogrammed default
  7023  30000B                     	org	3145739
  7024  30000B  FF                 	db	255
  7025                           tosu	equ	0xFFF
  7026                           tosh	equ	0xFFE
  7027                           tosl	equ	0xFFD
  7028                           stkptr	equ	0xFFC
  7029                           pclatu	equ	0xFFB
  7030                           pclath	equ	0xFFA
  7031                           pcl	equ	0xFF9
  7032                           tblptru	equ	0xFF8
  7033                           tblptrh	equ	0xFF7
  7034                           tblptrl	equ	0xFF6
  7035                           tablat	equ	0xFF5
  7036                           prodh	equ	0xFF4
  7037                           prodl	equ	0xFF3
  7038                           indf0	equ	0xFEF
  7039                           postinc0	equ	0xFEE
  7040                           postdec0	equ	0xFED
  7041                           preinc0	equ	0xFEC
  7042                           plusw0	equ	0xFEB
  7043                           fsr0h	equ	0xFEA
  7044                           fsr0l	equ	0xFE9
  7045                           wreg	equ	0xFE8
  7046                           indf1	equ	0xFE7
  7047                           postinc1	equ	0xFE6
  7048                           postdec1	equ	0xFE5
  7049                           preinc1	equ	0xFE4
  7050                           plusw1	equ	0xFE3
  7051                           fsr1h	equ	0xFE2
  7052                           fsr1l	equ	0xFE1
  7053                           bsr	equ	0xFE0
  7054                           indf2	equ	0xFDF
  7055                           postinc2	equ	0xFDE
  7056                           postdec2	equ	0xFDD
  7057                           preinc2	equ	0xFDC
  7058                           plusw2	equ	0xFDB
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     93     135
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Display@string2(BANK0[15]), Display@string(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Display@string2(BANK0[15]), Display@string(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1728_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Display@string2(BANK0[15]), Display@string(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Display@string2(BANK0[15]), Display@string(BANK0[16]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 16
		 -> Display@string2(BANK0[15]), Display@string(BANK0[16]), 

    UpdateDawnDusk@pduskminute	PTR int  size(2) Largest target is 2
		 -> main@duskminute(BANK0[2]), 

    UpdateDawnDusk@pduskhour	PTR int  size(2) Largest target is 2
		 -> main@duskhour(BANK0[2]), 

    UpdateDawnDusk@pminute	PTR int  size(2) Largest target is 2
		 -> main@minute(BANK0[2]), 

    UpdateDawnDusk@pdawnminute	PTR int  size(2) Largest target is 2
		 -> main@dawnminute(BANK0[2]), 

    UpdateDawnDusk@phour	PTR int  size(2) Largest target is 2
		 -> main@hour(BANK0[2]), 

    UpdateDawnDusk@pdawnhour	PTR int  size(2) Largest target is 2
		 -> main@dawnhour(BANK0[2]), 

    TimeAvg@pavgminute	PTR int  size(2) Largest target is 2
		 -> SunPleaseFixTheDamnClock@avgminute(COMRAM[2]), 

    TimeAvg@pavghour	PTR int  size(2) Largest target is 2
		 -> SunPleaseFixTheDamnClock@avghour(COMRAM[2]), 

    SunPleaseFixTheDamnClock@phour	PTR int  size(2) Largest target is 2
		 -> main@hour(BANK0[2]), 

    SunPleaseFixTheDamnClock@pminute	PTR int  size(2) Largest target is 2
		 -> main@minute(BANK0[2]), 

    SunPleaseFixTheDamnClock@pduskminute	PTR int  size(2) Largest target is 2
		 -> main@duskminute(BANK0[2]), 

    SunPleaseFixTheDamnClock@pduskhour	PTR int  size(2) Largest target is 2
		 -> main@duskhour(BANK0[2]), 

    SunPleaseFixTheDamnClock@pdawnminute	PTR int  size(2) Largest target is 2
		 -> main@dawnminute(BANK0[2]), 

    SunPleaseFixTheDamnClock@pdawnhour	PTR int  size(2) Largest target is 2
		 -> main@dawnhour(BANK0[2]), 

    Timekeeper@pDST	PTR unsigned char  size(2) Largest target is 1
		 -> main@DST(BANK0[1]), 

    Timekeeper@pyear	PTR unsigned int  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    Timekeeper@pmonth	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(BANK0[1]), 

    Timekeeper@pdayofweek	PTR unsigned char  size(2) Largest target is 1
		 -> main@dayofweek(BANK0[1]), 

    Timekeeper@pday	PTR unsigned char  size(2) Largest target is 1
		 -> main@day(BANK0[1]), 

    Timekeeper@phour	PTR int  size(2) Largest target is 2
		 -> main@hour(BANK0[2]), 

    Timekeeper@pminute	PTR int  size(2) Largest target is 2
		 -> main@minute(BANK0[2]), 


Critical Paths under _main in COMRAM

    _Timekeeper->_LeapYear
    _LeapYear->___lwmod
    _SunPleaseFixTheDamnClock->_TimeAvg
    _TimeAvg->___awdiv
    ___awdiv->_TimeDiff
    _LCD_Init->_LCD_sendbyte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Display
    _Display->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   24772
                                             75 BANK0     18    18      0
                         _Comp1_init
                            _Display
                    _Interrupts_init
                           _LCD_Init
                  _LEDarray_disp_bin
                        _Lights_init
                         _SmallHours
           _SunPleaseFixTheDamnClock
                         _Timekeeper
                        _Timer0_init
                     _UpdateDawnDusk
 ---------------------------------------------------------------------------------
 (1) _UpdateDawnDusk                                      15     2     13     752
                                              0 COMRAM    15     2     13
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timekeeper                                          16     2     14    2404
                                             10 COMRAM    16     2     14
                           _LeapYear
 ---------------------------------------------------------------------------------
 (2) _LeapYear                                             5     3      2     706
                                              5 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _SunPleaseFixTheDamnClock                            21     8     13    7872
                                             33 COMRAM    21     8     13
                            _TimeAvg
                           _TimeDiff
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _TimeAvg                                             16     4     12    3605
                                             17 COMRAM    16     4     12
                           _TimeDiff
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              9 COMRAM     8     4      4
                           _TimeDiff (ARG)
 ---------------------------------------------------------------------------------
 (2) _TimeDiff                                             9     1      8     832
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _SmallHours                                           6     0      6     316
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _Lights_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     186
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     850
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display                                             51    33     18   11410
                                             24 BANK0     51    33     18
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    10     16    8444
                                              0 BANK0     24     8     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7939
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    7566
                                             63 COMRAM    22    16      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0     806
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2     959
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     762
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (3) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Display
     _LCD_sendstring
       _LCD_sendbyte
         _LCD_sendnibble
           _LCD_E_TOG
     _LCD_setline
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
     _LCD_sendnibble
   _LEDarray_disp_bin
   _Lights_init
   _SmallHours
   _SunPleaseFixTheDamnClock
     _TimeAvg
       _TimeDiff
       ___awdiv
         _TimeDiff (ARG)
       ___awmod
     _TimeDiff
     ___awdiv
     ___awmod
   _Timekeeper
     _LeapYear
       ___lwmod
   _Timer0_init
   _UpdateDawnDusk

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5D      87       5       84.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E4       8        0.0%
DATA                 0      0      E4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 11 09:17:01 2021

                  Timekeeper@pdayofweek 0015                                      l22 2E56  
                                    l19 2EE0                                      l47 2EFA  
                          ___awdiv@sign 000F                     ___wmul@multiplicand 0003  
                     ??_Interrupts_init 0001                                     l120 2A0E  
                                   l121 2A22                                     l122 2A24  
                                   l114 2EB6                                     l210 23E0  
                                   l123 2A38                                     l124 2A3A  
                                   l132 2ABC                                     l204 2792  
                                   l125 2A4E                                     l117 29F6  
                                   l118 29F8                                     l127 2A50  
                                   l119 2A0C                                     l215 28E2  
                                   l241 2B00                                     l153 2E9C  
                                   l234 2EEE                                     l250 2DF4  
                                   l170 1288                                     l243 2B16  
                                   l245 2B24                                     l237 2AD4  
                                   l253 2962                                     l501 2634  
                                   l270 2E7C                                     l174 29DE  
                                   l239 2AEA                                     l183 177A  
                                   l248 2DD8                                     l264 2E28  
                                   l192 1972                                     l185 17FA  
                                   l177 29E0                                     l258 2D50  
                                   l514 26E4                                     l267 283C  
                                   l384 2162                                     l397 22C6  
                                   l771 2BE6                                     l778 2BEE  
                                   l948 2C40                                     l982 2534  
                                   l990 1A14                                     l984 2570  
                                   l992 1A1C                                     l979 24F2  
                                   _ISR 0008                                     _abs 2CD8  
                                   _pad 24AC                            ___awmod@sign 0006  
                                   wreg 000FE8                                    ?_ISR 0001  
                                  l1010 1C54                                    l1110 24AA  
                                  l1024 138E                                    l1121 2EFC  
                                  l1050 2D0E                                    ?_abs 0013  
                                  l2101 2012                                    l1053 2D16  
                                  l1045 2B82                                    l1118 2CD6  
                                  l1046 2B8A                                    l2111 206E  
                                  l2103 2020                                    l1127 2DBE  
                                  l1039 161E                                    l1081 1FD2  
                                  l2121 20D8                                    l2113 2076  
                                  l2105 2040                                    l2211 2C8C  
                                  l2203 2C42                                    l2131 2122  
                                  l2123 20F8                                    l2115 208A  
                                  l2107 2044                                    l1084 1FDA  
                                  l2205 2C46                                    l2301 1ECE  
                                  l2133 2142                                    l2125 20FA  
                                  l2117 2098                                    l2109 2050  
                                  l2141 2176                                    l2061 2410  
                                  l2221 1974                                    l2215 2EE2  
                                  l1087 2D88                                    l1095 2C92  
                                  l2207 2C5A                                    l2311 1F50  
                                  l2303 1ED6                                    l2127 210C  
                                  l2119 20AA                                    l2151 21E6  
                                  l2143 2196                                    l2063 242E  
                                  l2055 23E2                                    l2071 2CA0  
                                  l2231 19EE                                    l2223 1994  
                                  l2217 2EE4                                    l2209 2C88  
                                  l2305 1EDE                                    l2129 2112  
                                  l2161 225E                                    l2153 21EE  
                                  l2145 219A                                    l2137 2164  
                                  l2065 2464                                    l2057 23F4  
                                  l2073 2CB2                                    l2081 2D9A  
                                  l2241 1A4A                                    l2233 1A08  
                                  l2225 19BC                                    l2401 1492  
                                  l2219 2EEC                                    l2331 2AE4  
                                  l2315 1F92                                    l2307 1F16  
                                  l2163 2270                                    l2155 2202  
                                  l2147 21A8                                    l2139 2168  
                                  l2059 2406                                    l2075 2CB6  
                                  l2083 2DB2                                    l2251 1AE8  
                                  l2243 1A52                                    l2235 1A24  
                                  l2227 19DC                                    l2403 14A4  
                                  l2341 2B18                                    l2333 2AEC  
                                  l2325 2AC0                                    l2317 1FA4  
                                  l2093 1FDC                                    l2157 2210  
                                  l2165 2276                                    l2149 21C8  
                                  l2069 2C94                                    l2077 2D8A  
                                  l2181 24EA                                    l2173 24AC  
                                  l2261 1BA4                                    l2253 1AEE  
                                  l2245 1A5A                                    l2237 1A36  
                                  l2229 19EC                                    l2413 1574  
                                  l2405 14CC                                    l2501 25E8  
                                  l2343 2B1C                                    l2335 2AFA  
                                  l2327 2ACE                                    l2087 2E58  
                                  l2319 1FB6                                    l2095 1FE0  
                                  l2167 2286                                    l2159 223E  
                                  l2079 2D96                                    l2191 2558  
                                  l2183 24FE                                    l2175 24BC  
                                  l2271 1BF6                                    l2263 1BBE  
                                  l2247 1A60                                    l2255 1B52  
                                  l2239 1A44                                    l2431 160C  
                                  l2415 159C                                    l2423 15CA  
                                  l2407 14F4                                    l2351 12D2  
                                  l2503 25FE                                    l2511 2614  
                                  l2337 2B02                                    l2329 2AD6  
                                  l2089 2E74                                    l2097 1FEE  
                                  l2169 22A6                                    l2185 2512  
                                  l2177 24D0                                    l2273 1C08  
                                  l2257 1B6C                                    l2265 1BCE  
                                  l2249 1AE2                                    l2425 15D8  
                                  l2417 15AA                                    l2409 153C  
                                  l2353 12D6                                    l2345 128A  
                                  l2513 2624                                    l2505 2606  
                                  l2521 263A                                    l2601 2308  
                                  l2339 2B10                                    l2291 1E74  
                                  l2283 1E38                                    l2099 200E  
                                  l2195 2CD8                                    l2187 2516  
                                  l2179 24DE                                    l2275 1C14  
                                  l2267 1BE0                                    l2259 1B8A  
                                  l2419 15BE                                    l2371 1310  
                                  l2363 1300                                    l2355 12E2  
                                  l2347 12B2                                    l2451 2716  
                                  l2443 26E6                                    l2515 262C  
                                  l2507 2608                                    l2531 266A  
                                  l2523 2648                                    l2611 23AA  
                                  l2603 2334                                    l2621 2D46  
                                  l2293 1EAE                                    l2285 1E4C  
                                  l2197 2CF2                                    l2189 2544  
                                  l2277 1C1C                                    l2269 1BF0  
                                  l2357 12E6                                    l2381 137C  
                                  l2349 12C0                                    l2429 15E4  
                                  l2461 2768                                    l2453 2738  
                                  l2509 260E                                    l2541 26B0  
                                  l2533 267C                                    l2525 2650  
                                  l2613 23C2                                    l2605 2360  
                                  l2701 0E6E                                    l2471 2DDA  
                                  l2623 2DF6                                    l2615 2D1A  
                                  l2199 2D52                                    l2295 1EB2  
                                  l2287 1E50                                    l2279 1C2C  
                                  l2391 140C                                    l2383 139E  
                                  l2375 1318                                    l2367 1308  
                                  l2359 12F8                                    l2631 2BF0  
                                  l2463 2786                                    l2447 2708  
                                  l2551 26DC                                    l2543 26B8  
                                  l2535 2684                                    l2527 2654  
                                  l2519 2636                                    l2607 2388  
                                  l2711 0EBC                                    l2703 0E7C  
                                  l2473 2DEC                                    l2625 2DFA  
                                  l2617 2D2A                                    l2289 1E54  
                                  l2393 141A                                    l2385 13A0  
                                  l2633 2C02                                    l2801 29E2  
                                  l2457 275A                                    l2449 270E  
                                  l2481 258C                                    l2545 26BE  
                                  l2537 268C                                    l2529 2662  
                                  l2609 2396                                    l2561 2BAE  
                                  l2721 0F3A                                    l2713 0ED6  
                                  l2705 0E98                                    l2651 2E42  
                                  l2643 2E2A                                    l2467 2DC2  
                                  l2627 2E0C                                    l2619 2D34  
                                  l2299 1EB8                                    l2395 143A  
                                  l2387 13C8                                    l2379 1324  
                                  l2571 2B26                                    l2635 2C0A  
                                  l2811 2A48                                    l2803 29F0  
                                  l2459 2760                                    l2491 25B2  
                                  l2483 2590                                    l2475 2572  
                                  l2539 269A                                    l2547 26C4  
                                  l2563 2BBC                                    l2555 2B8C  
                                  l2731 0FA8                                    l2723 0F46  
                                  l2715 0EE2                                    l2707 0EA8  
                                  l2581 2ED4                                    l2653 2E44  
                                  l2645 2E2C                                    l2469 2DD2  
                                  l2629 2E10                                    l2397 1448  
                                  l2389 13FE                                    l2573 2B2E  
                                  l2637 2C12                                    l2661 2EF0  
                                  l2805 2A06                                    l2821 2A9E  
                                  l2813 2A52                                    l2493 25C4  
                                  l2485 259E                                    l2477 2576  
                                  l2549 26D4                                    l2565 2BD2  
                                  l2557 2B9E                                    l2741 100C  
                                  l2733 0FB4                                    l2717 0EFC  
                                  l2725 0F50                                    l2709 0EB2  
                                  l2583 2EDE                                    l2655 2E46  
                                  l2647 2E3E                                    l2575 2B3C  
                                  l2639 2C2E                                    l2807 2A1C  
                                  l2663 2E9E                                    l2823 2AB0  
                                  l2815 2A6C                                    l2495 25CC  
                                  l2487 25A6                                    l2479 2584  
                                  l2567 2BDA                                    l2559 2BA6  
                                  l2591 29B0                                    l2751 1070  
                                  l2743 1026                                    l2727 0F6A  
                                  l2735 0FBE                                    l2719 0F16  
                                  l2671 2E9A                                    l2831 2890  
                                  l2911 1C56                                    l2657 2E4A  
                                  l2649 2E40                                    l2577 2B62  
                                  l2681 2914                                    l2673 28E4  
                                  l2809 2A32                                    l2817 2A88  
                                  l2497 25D4                                    l2489 25AA  
                                  l2841 16A0                                    l2569 2BE0  
                                  l2585 2964                                    l2761 10F0  
                                  l2753 1088                                    l2745 1040  
                                  l2737 0FD8                                    l2729 0F84  
                                  l2665 2E7E                                    l2833 28A2  
                                  l2825 283E                                    l2921 1CCC  
                                  l2913 1CA0                                    l2579 2ECE  
                                  l2659 2E4E                                    l2691 2940  
                                  l2683 291C                                    l2675 28FC  
                                  l2819 2A8A                                    l2499 25E2  
                                  l2851 17A2                                    l2843 16BC  
                                  l2595 29DA                                    l2587 2982  
                                  l2771 1154                                    l2763 110A  
                                  l2755 10A2                                    l2747 104C  
                                  l2739 0FF2                                    l2667 2E86  
                                  l2835 28CA                                    l2827 2850  
                                  l2931 1D48                                    l2923 1D08  
                                  l2915 1CAC                                    l2693 294A  
                                  l2685 2926                                    l2677 2902  
                                  l2861 1830                                    l2853 17B0  
                                  l2845 16D8                                    l2837 1620  
                                  l2589 29A8                                    l2781 11BA  
                                  l2773 1160                                    l2757 10BC  
                                  l2765 1124                                    l2749 1056  
                                  l2669 2E90                                    l2829 2878  
                                  l2941 1DE4                                    l2933 1D80  
                                  l2925 1D0E                                    l2917 1CB6  
                                  ?_pad 0011                                    l2695 2958  
                                  l2687 292E                                    l2679 290A  
                                  l2599 22C8                                    l2871 18CA  
                                  l2863 1844                                    l2855 17C4  
                                  l2847 1744                                    l2839 1674  
                                  l2791 1220                                    l2783 11D4  
                                  l2775 116E                                    l2767 1130  
                                  l2759 10D6                                    l2935 1D86  
                                  l2927 1D1A                                    l2919 1CBA  
                                  l2881 2794                                    l2689 2938  
                                  l2865 185C                                    l2857 17DC  
                                  l2849 175C                                    l2873 18F2  
                                  l2793 123C                                    l2785 11E2  
                                  l2777 1188                                    l2769 113A  
                                  l2697 0E34                                    l2937 1D9A  
                                  l2929 1D36                                    l2891 282A  
                                  l2883 279C                                    l2875 191A  
                                  l2867 187A                                    l2859 1822  
                                  l2795 1256                                    l2779 11A0  
                                  l2787 11EE                                    l2699 0E5E  
                                  l2939 1DAC                                    l2885 27D6  
                                  l2877 1942                                    l2869 18A6  
                                  l2797 126E                                    l2789 1208  
                                  l2887 27DC                                    l2879 1962  
                                  l2799 127C                                    l2993 134E  
                                  l2889 27E8                                    l2995 1F00  
                                  STR_1 0E1B                                    STR_2 0E01  
                                  u2000 1ECA                                    u2001 1EC6  
                                  u2010 1F8C                                    u2011 1F86  
                                  u2020 1F8E                                    u2100 138E  
                                  u2101 138A                                    u2030 1FA4  
                                  u2110 139E                                    u2031 1FA0  
                                  u2111 139A                                    u2040 1FB6  
                                  u2120 13C8                                    u2200 2704  
                                  u3000 191A                                    u2041 1FB2  
                                  u2121 13C4                                    u2201 2700  
                                  u3001 1916                                    u2050 2ACE  
                                  u2130 140C                                    u2210 2734  
                                  u3010 1942                                    u2051 2ACA  
                                  u2131 1408                                    u2211 2730  
                                  u3011 193E                                    u2060 2AE4  
                                  u2140 148C                                    u2220 2756  
                                  u2300 2624                                    u2061 2AE0  
                                  u2141 1486                                    u2221 2752  
                                  u2301 2620                                    u2070 2AFA  
                                  u2150 148E                                    u2230 2786  
                                  u2310 2648                                    u2071 2AF6  
                                  u2231 2782                                    u2311 2644  
                                  u2080 2B10                                    u2240 2DD2  
                                  u1600 2DB2                                    u2160 14A4  
                                  u2400 2B82                                    u2320 2662  
                                  u2081 2B0C                                    u2241 2DCE  
                                  u1601 2DAE                                    u2161 14A0  
                                  u2401 2B7E                                    u2321 265E  
                                  u1610 1FEE                                    u2170 14CC  
                                  u2090 12B2                                    u2250 2584  
                                  u2330 267C                                    u2410 2982  
                                  u3050 1CCC                                    u1611 1FEA  
                                  u2171 14C8                                    u2091 12AE  
                                  u3107 2916                                    u2251 2580  
                                  u2331 2678                                    u2411 297E  
                                  u3051 1CC8                                    u1620 2020  
                                  u1700 21E6                                    u2180 14F4  
                                  u2260 259E                                    u2340 269A  
                                  u2420 29A8                                    u2500 0E98  
                                  u3060 1D48                                    u1621 201C  
                                  u1701 21E2                                    u2181 14F0  
                                  u3117 2928                                    u2261 259A  
                                  u2341 2696                                    u2421 29A4  
                                  u2501 0E94                                    u3061 1D44  
                                  u1710 2210                                    u1550 23F4  
                                  u2190 159C                                    u2270 25C4  
                                  u2350 26B0                                    u2430 29D6  
                                  u2510 0ED6                                    u3070 1D9A  
                                  u1631 204A                                    u1711 220C  
                                  u1551 23F0                                    u2191 1598  
                                  u3127 293A                                    u2271 25C0  
                                  u2351 26AC                                    u2431 29D2  
                                  u2511 0ED2                                    u3071 1D96  
                                  u1800 2D84                                    u1640 206E  
                                  u1720 223E                                    u1560 2406  
                                  u2280 25E2                                    u2360 26D4  
                                  u2440 2388                                    u2600 100C  
                                  u2520 0EFC                                    u3080 1DAC  
                                  u1641 206A                                    u1721 223A  
                                  u1561 2402                                    u3137 2950  
                                  u2281 25DE                                    u2361 26D0  
                                  u2441 2384                                    u2601 1008  
                                  u2521 0EF8                                    u3081 1DA8  
                                  u1810 2C5A                                    u1650 2098  
                                  u1730 2286                                    u1570 242E  
                                  u2290 25FE                                    u2450 23C2  
                                  u2370 2B9E                                    u2610 1026  
                                  u2530 0F16                                    u3147 2DEE  
                                  u1811 2C56                                    u1651 2094  
                                  u1731 2282                                    u1571 242A  
                                  u2291 25FA                                    u2451 23BE  
                                  u2371 2B9A                                    u2611 1022  
                                  u2531 0F12                                    u2460 2D2A  
                                  u1820 2C88                                    u1660 20D8  
                                  u1580 2464                                    u1740 24BC  
                                  u1900 1B6C                                    u2380 2BBC  
                                  u2700 1124                                    u2620 1040  
                                  u2540 0F3A                                    u3157 2B1E  
                                  u2461 2D26                                    u1821 2C84  
                                  u1661 20D4                                    u1581 2460  
                                  u1741 24B8                                    u1901 1B68  
                                  u2381 2BB8                                    u2701 1120  
                                  u2621 103C                                    u2541 0F36  
                                  u2470 2D46                                    u1670 2122  
                                  u1590 2CD6                                    u1750 24DE  
                                  u1910 1B8A                                    u1830 19A4  
                                  u2390 2BD2                                    u2710 1154  
                                  u2630 1070                                    u2550 0F6A  
                                  u3167 2EE6                                    u2471 2D42  
                                  u1671 211E                                    u1591 2CD2  
                                  u1751 24DA                                    u1911 1B86  
                                  u1831 199E                                    u2391 2BCE  
                                  u2711 1150                                    u2631 106C  
                                  u2551 0F66                                    u2480 2E28  
                                  u1680 2176                                    u1760 2534  
                                  u1920 1BA4                                    u1840 19A6  
                                  u2800 126E                                    u2720 1188  
                                  u2640 1088                                    u2560 0F84  
                                  u3177 2E50                                    u2481 2E24  
                                  u1681 2172                                    u1761 2530  
                                  u1921 1BA0                                    u3097 2904  
                                  u2801 126A                                    u2721 1184  
                                  u2641 1084                                    u2561 0F80  
                                  u1690 21A8                                    u1770 2544  
                                  u1930 1BBE                                    u1850 19BC  
                                  u2810 29F0                                    u2730 11A0  
                                  u2650 10A2                                    u2570 0FA8  
                                  u2490 0E5E                                    u1691 21A4  
                                  u1771 2540                                    u1931 1BBA  
                                  u1851 19B8                                    u2811 29EC  
                                  u2731 119C                                    u2651 109E  
                                  u2571 0FA4                                    u2491 0E5A  
                                  u1780 2CF2                                    u1940 1BCE  
                                  u1860 19EC                                    u2820 2A06  
                                  u2740 11BA                                    u2660 10BC  
                                  u2580 0FD8                                    u1781 2CEE  
                                  u1941 1BCA                                    u1861 19E8  
                                  u2821 2A02                                    u2741 11B6  
                                  u2661 10B8                                    u2581 0FD4  
                                  u1790 2D82                                    u1950 1BE0  
                                  u1870 1A08                                    u2830 2A1C  
                                  u2750 11D4                                    u2670 10D6  
                                  u2590 0FF2                                    u2910 2850  
                                  u1791 2D7C                                    u1951 1BDC  
                                  u1871 1A04                                    u2831 2A18  
                                  u2751 11D0                                    u2671 10D2  
                                  u2591 0FEE                                    u2911 284C  
                                  u1960 1BF0                                    u1880 1A36  
                                  u2840 2A32                                    u2760 1208  
                                  u2680 10F0                                    u2920 28A2  
                                  u1961 1BEC                                    u1881 1A32  
                                  u2841 2A2E                                    u2905 2ABA  
                                  u2761 1204                                    u2681 10EC  
                                  u2921 289E                                    u1970 1C08  
                                  u1890 1A44                                    u2850 2A48  
                                  u2930 16BC                                    u2770 1220  
                                  u2690 110A                                    u1971 1C04  
                                  u1891 1A40                                    u2851 2A44  
                                  u2907 2ABC                                    u2931 16B8  
                                  u2771 121C                                    u2691 1106  
                                  u1980 1E74                                    u2860 2A6C  
                                  u2940 16D8                                    u2780 123C  
                                  u1981 1E70                                    u2861 2A68  
                                  u2941 16D4                                    u2781 1238  
                                  u1990 1EAE                                    u2870 2A88  
                                  u2950 175C                                    u2790 1256  
                                  u1991 1EAA                                    u2871 2A84  
                                  u2951 1758                                    u2791 1252  
                                  u2880 2A9E                                    u2960 17A2  
                                  u2881 2A9A                                    u2961 179E  
                                  u2890 2AB0                                    u2970 17DC  
                                  u2891 2AAC                                    u2971 17D8  
                                  u2980 1822                                    u2981 181E  
                                  u2990 185C                                    u2991 1858  
                                  i2l54 0054                                    i2l56 0060  
                    __size_of_LCD_E_TOG 000E                                    abs@a 0013  
                                  _dbuf 00C7                                    _atoi 1E38  
                                  _main 1C56                                    _dtoa 1974  
                                  _prec 00C1                                    _nout 00BD  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  btemp 005E                            ?_LCD_setline 0001  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0064                        __end_of_DAC_init 2EE2  
                       __end_of_Display 283E                            ___param_bank 000000  
                                 ??_ISR 0001                              _Comp1_init 2E2A  
                                 ??_abs 0015                                   ??_pad 0017  
                          main@dawnhour 00B6                        __end_of_LCD_Init 2964  
                       __end_of_TimeAvg 23E2                           ??_Lights_init 0001  
                       __end_of___aodiv 2164                                   ?_atoi 0008  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 22C8                         __end_of___awdiv 2636  
                       __end_of___awmod 26E6                         ___awdiv@divisor 000C  
                       __end_of___lwmod 2BF0                         ___awdiv@counter 000E  
                          vfpfcnvrt@fmt 0042                                   _TMR0H 000FD4  
                                 _TMR0L 000FD3                            main@duskhour 00B3  
                                 _flags 00C3                                   _fputc 23E2  
                                 _fputs 2C94                         __end_of_isdigit 2D8A  
                                 atoi@n 0015                                   pad@fp 0011  
                                 atoi@s 0008                                   _width 00BF  
                                 _putch 2EFC                                   dtoa@d 001E  
                                 dtoa@i 003E                                   dtoa@n 0036  
                                 dtoa@p 0030                                   dtoa@s 0034  
                                 dtoa@w 0032                         __end_of_isspace 2C94  
                         ?_LCD_sendbyte 0002                                   tablat 000FF5  
                                 plusw2 000FDB                                   ttemp5 005F  
                                 ttemp6 0062                                   ttemp7 0066  
                                 status 000FD8                                   wtemp8 005F  
                       __end_of_sprintf 2C42                 __size_of_LCD_sendnibble 0068  
               __size_of_LCD_sendstring 0034                         __initialization 2EB8  
                      __end_of_LeapYear 29E2                            __end_of_atoi 1FDC  
                          __end_of_main 1E38                            __end_of_dtoa 1C56  
              _SunPleaseFixTheDamnClock 1620                       __end_of_LCD_E_TOG 2EF0  
                                ??_atoi 000A                                  ??_main 005E  
                                ??_dtoa 0026                           __activetblptr 000003  
                      __end_of_TimeDiff 2794                           main@dayofweek 00AD  
                   __end_of_Lights_init 2EB8                     UpdateDawnDusk@phour 0009  
                                ?_fputc 0001                                  ?_fputs 000A  
                        ??_LCD_sendbyte 0003                        ___awdiv@dividend 000A  
                                ?_putch 0001                                  i2l2901 003A  
                                i2l2903 0048                                  i2l2905 004A  
                                i2l2907 0056                                  i2l2909 005C  
                                i2l2893 000A                                  i2l2895 001A  
                                i2l2897 0028                                  i2l2899 002C  
                         vfpfcnvrt@done 0052                               ??_Display 005E  
                     _LEDarray_disp_bin 29E2                              _SmallHours 2A52  
                    ?_LEDarray_disp_bin 0001                           ??_Timer0_init 0001  
                             ??_TimeAvg 001E                            vfprintf@cfmt 005C  
                             ??___aodiv 0011                               ??___aomod 0011  
                                ___wmul 2E58                             ?_Comp1_init 0001  
                             ??___awdiv 000E                               ??___awmod 0005  
                             ??___lwmod 0005                              _Timekeeper 0E34  
                   ??_LEDarray_disp_bin 0003                                  clear_0 2EBE  
                      ___awdiv@quotient 0010                         ___awmod@divisor 0003  
   SunPleaseFixTheDamnClock@pdawnminute 0024                                  isa$std 000001  
                       ___awmod@counter 0005                                  pad@buf 0013  
                                dtoa@fp 001C                                  _strlen 2D8A  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                                  fputs@s 000A  
                             ??_isdigit 0003                            __mediumconst 0000  
                             ??_isspace 0003                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                                putch@c 0001                               ?_DAC_init 0001  
                      __end_of_vfprintf 2B8C                               ??_sprintf 005E  
             __end_of_LEDarray_disp_bin 2A52                              __accesstop 0060  
               __end_of__initialization 2EC4                               ?_LCD_Init 0001  
                      LeapYear@leapyear 000A                        Timekeeper@pmonth 000D  
                         ___rparam_used 000001                         _Interrupts_init 2EF0  
                  __size_of_LCD_setline 003A                          __pcstackCOMRAM 0001  
                         __end_of_fputc 24AC                           __end_of_fputs 2CD8  
                       TimeDiff@minute1 0003                         TimeDiff@minute2 0007  
     SunPleaseFixTheDamnClock@avgminute 0033                           __end_of_putch 2EFE  
                   __end_of_Timer0_init 2E9E                             _Lights_init 2E9E  
                     UpdateDawnDusk@DST 000D     SunPleaseFixTheDamnClock@pduskminute 0028  
                            ??_DAC_init 0001       SunPleaseFixTheDamnClock@pdawnhour 0022  
                               ??_fputc 0005                                 ??_fputs 000E  
                             ?_LeapYear 0006                          Timekeeper@pDST 0017  
                               ??_putch 0001                     __size_of_Comp1_init 002E  
                            __pbssBANK0 00BD                          Timekeeper@pday 000F  
                        main@dawnminute 00AF                              ??_LCD_Init 0004  
                         TimeDiff@hour1 0001                           TimeDiff@hour2 0005  
                        _LCD_sendnibble 2ABE       SunPleaseFixTheDamnClock@pduskhour 0026  
                        _LCD_sendstring 2DF6                             ?_SmallHours 0001  
                             ?_TimeDiff 0001                         TimeAvg@pavghour 001A  
                               ?___wmul 0001                             ?_Timekeeper 000B  
                  __end_of_LCD_sendbyte 2DF6                       TimeAvg@pavgminute 001C  
                               ?_strlen 0001  SunPleaseFixTheDamnClock@timedifference 0035  
                    __size_of_vfpfcnvrt 0396                              ??_LeapYear 0008  
                __end_of_LCD_sendnibble 2B26              __size_of_LEDarray_disp_bin 0070  
               __end_of_Interrupts_init 2EFC                  __end_of_LCD_sendstring 2E2A  
                        main@duskminute 00B1                        SmallHours@minute 0003  
                               _Display 2794              ??_SunPleaseFixTheDamnClock 002F  
                               __Hparam 0000                              ??_TimeDiff 0009  
                               __Lparam 0000                                 _TimeAvg 22C8  
                           _Timer0_init 2E7E                                 ___aodiv 1FDC  
                               ___aomod 2164                                 ___awdiv 2572  
                               ___awmod 2636                         __size_of___wmul 0026  
                               ___lwmod 2B8C                               ?_vfprintf 0056  
                          __psmallconst 0E00                                 __pcinit 2EB8  
                               __ramtop 0E00                                 __ptext0 1C56  
                               __ptext1 283E                                 __ptext2 2E7E  
                               __ptext3 0E34                                 __ptext4 2964  
                               __ptext5 2B8C                                 __ptext6 1620  
                               __ptext7 22C8                                 __ptext8 2636  
                               __ptext9 2572                         __size_of_strlen 0036  
                          __size_of_ISR 005C                            __size_of_abs 0040  
               __size_of_UpdateDawnDusk 00A6                            __size_of_pad 00C6  
                               _isdigit 2D52                        ___awmod@dividend 0001  
                               _isspace 2C42                               _LCD_E_TOG 2EE2  
                       LCD_setline@line 0004                     __size_of_SmallHours 006C  
                               main@DST 00AE                                 atoi@neg 000E  
                               main@day 00B5                                 _sprintf 2BF0  
                  end_of_initialization 2EC4                         ?_LCD_sendnibble 0001  
                            _minutehand 00C6                     __size_of_Timekeeper 0456  
                               fputc@fp 0003                                 fputs@fp 000C  
                       ?_LCD_sendstring 0004                         Display@dawnhour 0082  
                     __end_of_vfpfcnvrt 1620                                 postdec1 000FE5  
                               postdec2 000FDD                            ??_Comp1_init 0001  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                         Display@duskhour 0086  
                            ??_vfprintf 005C                                 strlen@a 0003  
                               strlen@s 0001                              ?_LCD_E_TOG 0001  
                             _TRISAbits 000F81                               _TRISBbits 000F82  
                             _TRISCbits 000F83               UpdateDawnDusk@pdawnminute 0003  
                             _TRISEbits 000F85                               _TRISFbits 000F86  
                             _TRISGbits 000F87                               _TRISHbits 000F88  
                     Timekeeper@pminute 0013                       __size_of_DAC_init 0014  
                    __end_of_Comp1_init 2E58                             _CM1CON0bits 000ED0  
                           _CM1CON1bits 000ED1                        ?_Interrupts_init 0001  
                    SmallHours@dawnhour 0005                              main@minute 00B9  
                     __size_of_LCD_Init 0080                   __size_of_LCD_sendbyte 0036  
                           vfpfcnvrt@ap 0044                             vfpfcnvrt@fp 0040  
                           vfpfcnvrt@ll 004A                          __end_of___wmul 2E7E  
                  LCD_sendnibble@number 0001                            ?_Lights_init 0001  
                        __end_of_strlen 2DC0                     start_initialization 2EB8  
                           __end_of_ISR 0064                             __end_of_abs 2D18  
                           __end_of_pad 2572         SunPleaseFixTheDamnClock@avghour 0031  
             UpdateDawnDusk@pduskminute 0007                            _LCD_sendbyte 2DC0  
       SunPleaseFixTheDamnClock@pminute 002C                       __size_of_LeapYear 007E  
                         ??_LCD_setline 0004                            ??_SmallHours 0007  
                           vfprintf@fmt 0058                    LCD_sendstring@string 0004  
                              ??___wmul 0005                       __size_of_TimeDiff 00AE  
                          ??_Timekeeper 0019                                ??_strlen 0003  
                        _UpdateDawnDusk 283E                         Timekeeper@phour 0011  
                       Timekeeper@pyear 000B                             ??_LCD_E_TOG 0001  
                         __pcstackBANK0 0060                        ___aodiv@dividend 0001  
                    __end_of_SmallHours 2ABE           SunPleaseFixTheDamnClock@phour 002A  
                    __end_of_Timekeeper 128A                                ?_Display 0078  
                             _atoi$1846 0010                               _atoi$1847 0014  
                             _atoi$1848 0012                               _dtoa$1811 002E  
                              ?_TimeAvg 0012                            TimeAvg@hour1 0012  
                          TimeAvg@hour2 0016                            ?_Timer0_init 0001  
                        TimeAvg@minute1 0014                          TimeAvg@minute2 0018  
                             __pintcode 0008                                ?___aodiv 0001  
                              ?___aomod 0001                                ?___awdiv 000A  
                      ___aodiv@quotient 0013                                ?___awmod 0001  
                   __end_of_LCD_setline 2D52                                ?___lwmod 0001  
                __end_of_UpdateDawnDusk 28E4                       __size_of_vfprintf 0066  
                 UpdateDawnDusk@pminute 000B                             __smallconst 0E00  
                              ?_isdigit 0001                                ?_isspace 0001  
                      ??_LCD_sendnibble 0001                                _DAC_init 2ECE  
                      ??_LCD_sendstring 0006                                ?_sprintf 0060  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                        __size_of_putch 0002                        LCD_sendbyte@Byte 0003  
                              _LCD_Init 28E4                        LCD_sendbyte@type 0002  
                        ___wmul@product 0005                                _LATAbits 000F79  
                              _LATBbits 000F7A                                _LATCbits 000F7B  
                              _LATEbits 000F7D                                _LATFbits 000F7E  
                              _LATGbits 000F7F                                _LATHbits 000F80  
                              _PIE0bits 000E29                                _PIE2bits 000E2B  
               UpdateDawnDusk@pdawnhour 0001                                i2u302_40 001A  
                              i2u302_41 0016                                i2u303_40 003A  
                              i2u303_41 0036                                i2u304_40 0048  
                              i2u304_41 0044                                _PIR0bits 000E33  
                              _PIR2bits 000E35                 UpdateDawnDusk@pduskhour 0005  
                             _vfpfcnvrt 128A                         ?_UpdateDawnDusk 0001  
                        Display@string2 009A                       ___wmul@multiplier 0001  
     __size_of_SunPleaseFixTheDamnClock 0354                    __size_of_Lights_init 001A  
             ?_SunPleaseFixTheDamnClock 0022                               main@month 00B8  
                          _isspace$1864 0007                              _CM1NCHbits 000ED2  
                            _CM1PCHbits 000ED3                                _LeapYear 2964  
                      __size_of_Display 00AA                             _LCD_setline 2D18  
                              __Hrparam 0000                                _TimeDiff 26E6  
                            vfprintf@ap 005A                                __Lrparam 0000  
                            vfprintf@fp 0056                        __size_of_TimeAvg 011A  
                      __size_of___aodiv 0188                        __size_of___aomod 0164  
                      __size_of___awdiv 00C4                        __size_of___awmod 00B0  
                            ?_vfpfcnvrt 0040                        __size_of___lwmod 0064  
                       ___aodiv@divisor 0009                         ___aodiv@counter 0011  
                            sprintf@fmt 0062                              _T0CON0bits 000FD5  
                            _T0CON1bits 000FD6                       Display@dawnminute 0084  
                      __size_of_isdigit 0038                        __size_of_isspace 0052  
                              _dawndusk 00C5                                __ptext10 26E6  
                              __ptext11 2A52                                __ptext20 1974  
                              __ptext12 2E9E                                __ptext21 24AC  
                              __ptext13 29E2                                __ptext30 2C42  
                              __ptext22 2D8A                                __ptext14 28E4  
                              __ptext31 2D52                                __ptext23 2C94  
                              __ptext15 2EF0                                __ptext32 2E58  
                              __ptext24 23E2                                __ptext16 2794  
                              __ptext33 2D18                                __ptext25 2EFC  
                              __ptext17 2BF0                                __ptext34 2DF6  
                              __ptext26 2CD8                                __ptext18 2B26  
                              __ptext35 2DC0                                __ptext27 2164  
                              __ptext19 128A                                __ptext36 2ABE  
                              __ptext28 1FDC                                __ptext37 2EE2  
                              __ptext29 1E38                                __ptext38 2E2A  
                              __ptext39 2ECE                 LEDarray_disp_bin@number 0001  
                      __size_of_sprintf 0052                          SmallHours@hour 0001  
                         __size_of_atoi 01A4                           __size_of_main 01E2  
                         __size_of_dtoa 02E2                                isa$xinst 000000  
              __size_of_Interrupts_init 000C                           Display@minute 007E  
                              int$flags 005E                           Display@string 008A  
                  __size_of_Timer0_init 0020                                _vfprintf 2B26  
                              main@hour 00BB                                main@year 00AB  
                      ___aomod@dividend 0001                          _vfpfcnvrt$1826 0054  
                            _INTCONbits 000FF2                     TimeAvg@HalfTimeDiff 0020  
                              isdigit@c 0001                       Display@duskminute 0088  
           SunPleaseFixTheDamnClock@DST 002E                                intlevel2 0000  
                             sprintf@ap 0070                            _DAC1CON0bits 000EC6  
                          _DAC1CON1bits 000EC7                        Display@dayofweek 0080  
                      ___lwmod@dividend 0001                                isspace@c 0001  
                          Display@iyear 00A9                            Display@month 007A  
                       ___aomod@divisor 0009                             ??_vfpfcnvrt 0046  
                       ___aomod@counter 0011                            LeapYear@year 0006  
                              sprintf@f 0072                                sprintf@s 0060  
                       ___lwmod@divisor 0003                         ___lwmod@counter 0005  
                           Display@hour 007C                             Display@year 0078  
                          ___aodiv@sign 0012                              Display@DST 0081  
                            Display@day 007B                            ___aomod@sign 0012  
      __end_of_SunPleaseFixTheDamnClock 1974                        ??_UpdateDawnDusk 000E  
