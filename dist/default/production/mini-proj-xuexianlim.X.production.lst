

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 01 20:04:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.35
    26                           ; Generated 05/05/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F67K40 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _PIR2bits	set	3637
    61  0000                     _PIR0bits	set	3635
    62  0000                     _PIE2bits	set	3627
    63  0000                     _PIE0bits	set	3625
    64  0000                     _CM1CON1bits	set	3793
    65  0000                     _CM1CON0bits	set	3792
    66  0000                     _CM1PCHbits	set	3795
    67  0000                     _CM1NCHbits	set	3794
    68  0000                     _DAC1CON1bits	set	3783
    69  0000                     _DAC1CON0bits	set	3782
    70  0000                     _T0CON0bits	set	4053
    71  0000                     _T0CON1bits	set	4054
    72  0000                     _TRISHbits	set	3976
    73  0000                     _TRISAbits	set	3969
    74  0000                     _TRISGbits	set	3975
    75  0000                     _LATFbits	set	3966
    76  0000                     _LATGbits	set	3967
    77  0000                     _LATHbits	set	3968
    78  0000                     _TMR0L	set	4051
    79  0000                     _TMR0H	set	4052
    80  0000                     _LATAbits	set	3961
    81  0000                     _INTCONbits	set	4082
    82  0000                     _TRISFbits	set	3974
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87  000746                     __pcinit:
    88                           	callstack 0
    89  000746                     start_initialization:
    90                           	callstack 0
    91  000746                     __initialization:
    92                           	callstack 0
    93  000746                     end_of_initialization:
    94                           	callstack 0
    95  000746                     __end_of__initialization:
    96                           	callstack 0
    97  000746  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  000748  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  00074A  0100               	movlb	0
   100  00074C  EF4D  F002         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	callstack 0
   105  000001                     ?___lwmod:
   106                           	callstack 0
   107  000001                     LEDarray_disp_bin@number:
   108                           	callstack 0
   109  000001                     SmallHours@minute:
   110                           	callstack 0
   111  000001                     ___lwmod@dividend:
   112                           	callstack 0
   113                           
   114                           ; 2 bytes @ 0x0
   115  000001                     	ds	1
   116  000002                     SmallHours@hour:
   117                           	callstack 0
   118                           
   119                           ; 1 bytes @ 0x1
   120  000002                     	ds	1
   121  000003                     ___lwmod@divisor:
   122                           	callstack 0
   123                           
   124                           ; 2 bytes @ 0x2
   125  000003                     	ds	2
   126  000005                     ___lwmod@counter:
   127                           	callstack 0
   128                           
   129                           ; 1 bytes @ 0x4
   130  000005                     	ds	1
   131  000006                     LeapYear@year:
   132                           	callstack 0
   133                           
   134                           ; 2 bytes @ 0x5
   135  000006                     	ds	2
   136  000008                     ??_LeapYear:
   137                           
   138                           ; 1 bytes @ 0x7
   139  000008                     	ds	2
   140  00000A                     LeapYear@leapyear:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x9
   144  00000A                     	ds	1
   145  00000B                     Timekeeper@pyear:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0xA
   149  00000B                     	ds	2
   150  00000D                     Timekeeper@pmonth:
   151                           	callstack 0
   152                           
   153                           ; 2 bytes @ 0xC
   154  00000D                     	ds	2
   155  00000F                     Timekeeper@pday:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0xE
   159  00000F                     	ds	2
   160  000011                     Timekeeper@phour:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0x10
   164  000011                     	ds	2
   165  000013                     Timekeeper@pminute:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0x12
   169  000013                     	ds	2
   170  000015                     Timekeeper@pdayofweek:
   171                           	callstack 0
   172                           
   173                           ; 2 bytes @ 0x14
   174  000015                     	ds	2
   175  000017                     Timekeeper@DST:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x16
   179  000017                     	ds	2
   180  000019                     
   181                           ; 1 bytes @ 0x18
   182  000019                     	ds	1
   183  00001A                     main@year:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x19
   187  00001A                     	ds	2
   188  00001C                     main@DST:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x1B
   192  00001C                     	ds	1
   193  00001D                     main@dayofweek:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x1C
   197  00001D                     	ds	1
   198  00001E                     main@minute:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x1D
   202  00001E                     	ds	1
   203  00001F                     main@day:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x1E
   207  00001F                     	ds	1
   208  000020                     main@hour:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x1F
   212  000020                     	ds	1
   213  000021                     main@month:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x20
   217  000021                     	ds	1
   218                           
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 16 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  year            2   25[COMRAM] unsigned int 
   229 ;;  month           1   32[COMRAM] unsigned char 
   230 ;;  hour            1   31[COMRAM] unsigned char 
   231 ;;  day             1   30[COMRAM] unsigned char 
   232 ;;  minute          1   29[COMRAM] unsigned char 
   233 ;;  dayofweek       1   28[COMRAM] unsigned char 
   234 ;;  DST             1   27[COMRAM] unsigned char 
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   245 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   247 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   248 ;;Total ram usage:        8 bytes
   249 ;; Hardware stack levels required when called: 4
   250 ;; This function calls:
   251 ;;		_Comp1_init
   252 ;;		_Interrupts_init
   253 ;;		_LEDarray_disp_bin
   254 ;;		_Lights_init
   255 ;;		_SmallHours
   256 ;;		_Timekeeper
   257 ;;		_Timer0_init
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	text0
   264  00049A                     __ptext0:
   265                           	callstack 0
   266  00049A                     _main:
   267                           	callstack 27
   268  00049A                     
   269                           ;main.c: 18:     unsigned int year = 2021;
   270  00049A  0E07               	movlw	7
   271  00049C  6E1B               	movwf	(main@year+1)^0,c
   272  00049E  0EE5               	movlw	229
   273  0004A0  6E1A               	movwf	main@year^0,c
   274                           
   275                           ;main.c: 19:     char month = 11;
   276  0004A2  0E0B               	movlw	11
   277  0004A4  6E21               	movwf	main@month^0,c
   278                           
   279                           ;main.c: 20:     char day = 1;
   280  0004A6  0E01               	movlw	1
   281  0004A8  6E1F               	movwf	main@day^0,c
   282                           
   283                           ;main.c: 21:     char hour = 20;
   284  0004AA  0E14               	movlw	20
   285  0004AC  6E20               	movwf	main@hour^0,c
   286                           
   287                           ;main.c: 22:     char minute = 00;
   288  0004AE  0E00               	movlw	0
   289  0004B0  6E1E               	movwf	main@minute^0,c
   290                           
   291                           ;main.c: 23:     char dayofweek = 1;
   292  0004B2  0E01               	movlw	1
   293  0004B4  6E1D               	movwf	main@dayofweek^0,c
   294                           
   295                           ;main.c: 24:     char DST = 0;
   296  0004B6  0E00               	movlw	0
   297  0004B8  6E1C               	movwf	main@DST^0,c
   298  0004BA                     
   299                           ;main.c: 27:     Lights_init();
   300  0004BA  EC86  F003         	call	_Lights_init	;wreg free
   301                           
   302                           ;main.c: 28:     Timer0_init();
   303  0004BE  EC74  F003         	call	_Timer0_init	;wreg free
   304                           
   305                           ;main.c: 29:     Comp1_init();
   306  0004C2  EC61  F003         	call	_Comp1_init	;wreg free
   307  0004C6                     
   308                           ;main.c: 30:     Interrupts_init();
   309  0004C6  EC9D  F003         	call	_Interrupts_init	;wreg free
   310  0004CA                     l1225:
   311                           
   312                           ;main.c: 33:         Timekeeper(&year, &month, &day, &hour, &minute, &dayofweek, &DST);
   313  0004CA  0E1A               	movlw	low main@year
   314  0004CC  6E0B               	movwf	Timekeeper@pyear^0,c
   315  0004CE  0E00               	movlw	high main@year
   316  0004D0  6E0C               	movwf	(Timekeeper@pyear+1)^0,c
   317  0004D2  0E21               	movlw	low main@month
   318  0004D4  6E0D               	movwf	Timekeeper@pmonth^0,c
   319  0004D6  0E00               	movlw	high main@month
   320  0004D8  6E0E               	movwf	(Timekeeper@pmonth+1)^0,c
   321  0004DA  0E1F               	movlw	low main@day
   322  0004DC  6E0F               	movwf	Timekeeper@pday^0,c
   323  0004DE  0E00               	movlw	high main@day
   324  0004E0  6E10               	movwf	(Timekeeper@pday+1)^0,c
   325  0004E2  0E20               	movlw	low main@hour
   326  0004E4  6E11               	movwf	Timekeeper@phour^0,c
   327  0004E6  0E00               	movlw	high main@hour
   328  0004E8  6E12               	movwf	(Timekeeper@phour+1)^0,c
   329  0004EA  0E1E               	movlw	low main@minute
   330  0004EC  6E13               	movwf	Timekeeper@pminute^0,c
   331  0004EE  0E00               	movlw	high main@minute
   332  0004F0  6E14               	movwf	(Timekeeper@pminute+1)^0,c
   333  0004F2  0E1D               	movlw	low main@dayofweek
   334  0004F4  6E15               	movwf	Timekeeper@pdayofweek^0,c
   335  0004F6  0E00               	movlw	high main@dayofweek
   336  0004F8  6E16               	movwf	(Timekeeper@pdayofweek+1)^0,c
   337  0004FA  0E1C               	movlw	low main@DST
   338  0004FC  6E17               	movwf	Timekeeper@DST^0,c
   339  0004FE  0E00               	movlw	high main@DST
   340  000500  6E18               	movwf	(Timekeeper@DST+1)^0,c
   341  000502  EC2A  F000         	call	_Timekeeper	;wreg free
   342  000506                     
   343                           ;main.c: 34:         LEDarray_disp_bin(hour);
   344  000506  5020               	movf	main@hour^0,w,c
   345  000508  ECCE  F002         	call	_LEDarray_disp_bin
   346  00050C                     
   347                           ;main.c: 35:         SmallHours(hour, minute);
   348  00050C  C01E  F001         	movff	main@minute,SmallHours@minute
   349  000510  5020               	movf	main@hour^0,w,c
   350  000512  EC39  F003         	call	_SmallHours
   351  000516  EF65  F002         	goto	l1225
   352  00051A  EF28  F000         	goto	start
   353  00051E                     __end_of_main:
   354                           	callstack 0
   355                           
   356 ;; *************** function _Timer0_init *****************
   357 ;; Defined at:
   358 ;;		line 7 in file "timers.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used: 1
   378 ;; Hardware stack levels required when called: 1
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text1
   387  0006E8                     __ptext1:
   388                           	callstack 0
   389  0006E8                     _Timer0_init:
   390                           	callstack 29
   391  0006E8                     
   392                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   393  0006E8  50D6               	movf	214,w,c	;volatile
   394  0006EA  0B1F               	andlw	-225
   395  0006EC  0940               	iorlw	64
   396  0006EE  6ED6               	movwf	214,c	;volatile
   397  0006F0                     
   398                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   399  0006F0  88D6               	bsf	214,4,c	;volatile
   400                           
   401                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1110;
   402  0006F2  50D6               	movf	214,w,c	;volatile
   403  0006F4  0BF0               	andlw	-16
   404  0006F6  090E               	iorlw	14
   405  0006F8  6ED6               	movwf	214,c	;volatile
   406  0006FA                     
   407                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
   408  0006FA  88D5               	bsf	213,4,c	;volatile
   409                           
   410                           ;timers.c: 16:     TMR0H=0b00011011;
   411  0006FC  0E1B               	movlw	27
   412  0006FE  6ED4               	movwf	212,c	;volatile
   413                           
   414                           ;timers.c: 17:     TMR0L=0b00011110;
   415  000700  0E1E               	movlw	30
   416  000702  6ED3               	movwf	211,c	;volatile
   417  000704                     
   418                           ;timers.c: 18:     T0CON0bits.T0EN=1;
   419  000704  8ED5               	bsf	213,7,c	;volatile
   420  000706                     
   421                           ;timers.c: 19:     LATAbits.LATA3 = 0;
   422  000706  9679               	bcf	121,3,c	;volatile
   423  000708                     
   424                           ;timers.c: 20:     TRISAbits.TRISA3 = 0;
   425  000708  9681               	bcf	129,3,c	;volatile
   426  00070A  0012               	return		;funcret
   427  00070C                     __end_of_Timer0_init:
   428                           	callstack 0
   429                           
   430 ;; *************** function _Timekeeper *****************
   431 ;; Defined at:
   432 ;;		line 26 in file "timers.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;  pyear           2   10[COMRAM] PTR unsigned int 
   435 ;;		 -> main@year(2), 
   436 ;;  pmonth          2   12[COMRAM] PTR unsigned char 
   437 ;;		 -> main@month(1), 
   438 ;;  pday            2   14[COMRAM] PTR unsigned char 
   439 ;;		 -> main@day(1), 
   440 ;;  phour           2   16[COMRAM] PTR unsigned char 
   441 ;;		 -> main@hour(1), 
   442 ;;  pminute         2   18[COMRAM] PTR unsigned char 
   443 ;;		 -> main@minute(1), 
   444 ;;  pdayofweek      2   20[COMRAM] PTR unsigned char 
   445 ;;		 -> main@dayofweek(1), 
   446 ;;  DST             2   22[COMRAM] PTR unsigned char 
   447 ;;		 -> main@DST(1), 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   459 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   462 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   463 ;;Total ram usage:       15 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; Hardware stack levels required when called: 3
   466 ;; This function calls:
   467 ;;		_LeapYear
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text2
   474  000054                     __ptext2:
   475                           	callstack 0
   476  000054                     _Timekeeper:
   477                           	callstack 27
   478  000054                     
   479                           ;timers.c: 28:     if (LATAbits.LATA3) {++*pminute; LATAbits.LATA3 = 0;}
   480  000054  A679               	btfss	121,3,c	;volatile
   481  000056  EF2F  F000         	goto	u581
   482  00005A  EF31  F000         	goto	u580
   483  00005E                     u581:
   484  00005E  EF37  F000         	goto	l1103
   485  000062                     u580:
   486  000062  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
   487  000066  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   488  00006A  2ADF               	incf	indf2,f,c
   489  00006C  9679               	bcf	121,3,c	;volatile
   490  00006E                     l1103:
   491                           
   492                           ;timers.c: 30:     if (*pminute == 60) {*pminute = 0; ++*phour;}
   493  00006E  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
   494  000072  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   495  000076  0E3C               	movlw	60
   496  000078  18DE               	xorwf	postinc2,w,c
   497  00007A  A4D8               	btfss	status,2,c
   498  00007C  EF42  F000         	goto	u591
   499  000080  EF44  F000         	goto	u590
   500  000084                     u591:
   501  000084  EF4F  F000         	goto	l1109
   502  000088                     u590:
   503  000088  C013  FFD9         	movff	Timekeeper@pminute,fsr2l
   504  00008C  C014  FFDA         	movff	Timekeeper@pminute+1,fsr2h
   505  000090  0E00               	movlw	0
   506  000092  6EDF               	movwf	indf2,c
   507  000094  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   508  000098  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   509  00009C  2ADF               	incf	indf2,f,c
   510  00009E                     l1109:
   511                           
   512                           ;timers.c: 32:     if (*phour == 24) {*phour = 0; ++*pday; ++*pdayofweek;}
   513  00009E  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   514  0000A2  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   515  0000A6  0E18               	movlw	24
   516  0000A8  18DE               	xorwf	postinc2,w,c
   517  0000AA  A4D8               	btfss	status,2,c
   518  0000AC  EF5A  F000         	goto	u601
   519  0000B0  EF5C  F000         	goto	u600
   520  0000B4                     u601:
   521  0000B4  EF6C  F000         	goto	l1117
   522  0000B8                     u600:
   523  0000B8  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   524  0000BC  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   525  0000C0  0E00               	movlw	0
   526  0000C2  6EDF               	movwf	indf2,c
   527  0000C4  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   528  0000C8  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   529  0000CC  2ADF               	incf	indf2,f,c
   530  0000CE  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   531  0000D2  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
   532  0000D6  2ADF               	incf	indf2,f,c
   533  0000D8                     l1117:
   534                           
   535                           ;timers.c: 34:     if (*pdayofweek == 8) {*pdayofweek = 1;}
   536  0000D8  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   537  0000DC  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
   538  0000E0  0E08               	movlw	8
   539  0000E2  18DE               	xorwf	postinc2,w,c
   540  0000E4  A4D8               	btfss	status,2,c
   541  0000E6  EF77  F000         	goto	u611
   542  0000EA  EF79  F000         	goto	u610
   543  0000EE                     u611:
   544  0000EE  EF7F  F000         	goto	l1121
   545  0000F2                     u610:
   546  0000F2  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   547  0000F6  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
   548  0000FA  0E01               	movlw	1
   549  0000FC  6EDF               	movwf	indf2,c
   550  0000FE                     l1121:
   551                           
   552                           ;timers.c: 36:     if (*pday == 29 && *pmonth == 2 && !LeapYear(*pyear)) {
   553  0000FE  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   554  000102  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   555  000106  0E1D               	movlw	29
   556  000108  18DE               	xorwf	postinc2,w,c
   557  00010A  A4D8               	btfss	status,2,c
   558  00010C  EF8A  F000         	goto	u621
   559  000110  EF8C  F000         	goto	u620
   560  000114                     u621:
   561  000114  EFB6  F000         	goto	l1131
   562  000118                     u620:
   563  000118  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   564  00011C  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   565  000120  0E02               	movlw	2
   566  000122  18DE               	xorwf	postinc2,w,c
   567  000124  A4D8               	btfss	status,2,c
   568  000126  EF97  F000         	goto	u631
   569  00012A  EF99  F000         	goto	u630
   570  00012E                     u631:
   571  00012E  EFB6  F000         	goto	l1131
   572  000132                     u630:
   573  000132  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
   574  000136  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
   575  00013A  CFDE F006          	movff	postinc2,LeapYear@year
   576  00013E  CFDD F007          	movff	postdec2,LeapYear@year+1
   577  000142  EC8F  F002         	call	_LeapYear	;wreg free
   578  000146  0900               	iorlw	0
   579  000148  A4D8               	btfss	status,2,c
   580  00014A  EFA9  F000         	goto	u641
   581  00014E  EFAB  F000         	goto	u640
   582  000152                     u641:
   583  000152  EFB6  F000         	goto	l1131
   584  000156                     u640:
   585  000156                     
   586                           ;timers.c: 37:         *pday = 1;
   587  000156  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   588  00015A  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   589  00015E  0E01               	movlw	1
   590  000160  6EDF               	movwf	indf2,c
   591  000162                     
   592                           ;timers.c: 38:         ++*pmonth;
   593  000162  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   594  000166  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   595  00016A  2ADF               	incf	indf2,f,c
   596  00016C                     l1131:
   597                           
   598                           ;timers.c: 41:     if (*pday == 30 && *pmonth == 2 && LeapYear(*pyear)) {
   599  00016C  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   600  000170  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   601  000174  0E1E               	movlw	30
   602  000176  18DE               	xorwf	postinc2,w,c
   603  000178  A4D8               	btfss	status,2,c
   604  00017A  EFC1  F000         	goto	u651
   605  00017E  EFC3  F000         	goto	u650
   606  000182                     u651:
   607  000182  EFED  F000         	goto	l1141
   608  000186                     u650:
   609  000186  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   610  00018A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   611  00018E  0E02               	movlw	2
   612  000190  18DE               	xorwf	postinc2,w,c
   613  000192  A4D8               	btfss	status,2,c
   614  000194  EFCE  F000         	goto	u661
   615  000198  EFD0  F000         	goto	u660
   616  00019C                     u661:
   617  00019C  EFED  F000         	goto	l1141
   618  0001A0                     u660:
   619  0001A0  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
   620  0001A4  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
   621  0001A8  CFDE F006          	movff	postinc2,LeapYear@year
   622  0001AC  CFDD F007          	movff	postdec2,LeapYear@year+1
   623  0001B0  EC8F  F002         	call	_LeapYear	;wreg free
   624  0001B4  0900               	iorlw	0
   625  0001B6  B4D8               	btfsc	status,2,c
   626  0001B8  EFE0  F000         	goto	u671
   627  0001BC  EFE2  F000         	goto	u670
   628  0001C0                     u671:
   629  0001C0  EFED  F000         	goto	l1141
   630  0001C4                     u670:
   631  0001C4                     
   632                           ;timers.c: 42:         *pday = 1;
   633  0001C4  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   634  0001C8  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   635  0001CC  0E01               	movlw	1
   636  0001CE  6EDF               	movwf	indf2,c
   637  0001D0                     
   638                           ;timers.c: 43:         ++*pmonth;
   639  0001D0  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   640  0001D4  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   641  0001D8  2ADF               	incf	indf2,f,c
   642  0001DA                     l1141:
   643                           
   644                           ;timers.c: 46:     if (*pday == 31 && (*pmonth == 4 || *pmonth == 6 || *pmonth == 9 || *
      +                          pmonth == 11)) {
   645  0001DA  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   646  0001DE  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   647  0001E2  0E1F               	movlw	31
   648  0001E4  18DE               	xorwf	postinc2,w,c
   649  0001E6  A4D8               	btfss	status,2,c
   650  0001E8  EFF8  F000         	goto	u681
   651  0001EC  EFFA  F000         	goto	u680
   652  0001F0                     u681:
   653  0001F0  EF39  F001         	goto	l1155
   654  0001F4                     u680:
   655  0001F4  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   656  0001F8  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   657  0001FC  0E04               	movlw	4
   658  0001FE  18DE               	xorwf	postinc2,w,c
   659  000200  B4D8               	btfsc	status,2,c
   660  000202  EF05  F001         	goto	u691
   661  000206  EF07  F001         	goto	u690
   662  00020A                     u691:
   663  00020A  EF2E  F001         	goto	l1151
   664  00020E                     u690:
   665  00020E  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   666  000212  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   667  000216  0E06               	movlw	6
   668  000218  18DE               	xorwf	postinc2,w,c
   669  00021A  B4D8               	btfsc	status,2,c
   670  00021C  EF12  F001         	goto	u701
   671  000220  EF14  F001         	goto	u700
   672  000224                     u701:
   673  000224  EF2E  F001         	goto	l1151
   674  000228                     u700:
   675  000228  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   676  00022C  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   677  000230  0E09               	movlw	9
   678  000232  18DE               	xorwf	postinc2,w,c
   679  000234  B4D8               	btfsc	status,2,c
   680  000236  EF1F  F001         	goto	u711
   681  00023A  EF21  F001         	goto	u710
   682  00023E                     u711:
   683  00023E  EF2E  F001         	goto	l1151
   684  000242                     u710:
   685  000242  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   686  000246  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   687  00024A  0E0B               	movlw	11
   688  00024C  18DE               	xorwf	postinc2,w,c
   689  00024E  A4D8               	btfss	status,2,c
   690  000250  EF2C  F001         	goto	u721
   691  000254  EF2E  F001         	goto	u720
   692  000258                     u721:
   693  000258  EF39  F001         	goto	l1155
   694  00025C                     u720:
   695  00025C                     l1151:
   696                           
   697                           ;timers.c: 47:         *pday = 1;
   698  00025C  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   699  000260  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   700  000264  0E01               	movlw	1
   701  000266  6EDF               	movwf	indf2,c
   702  000268                     
   703                           ;timers.c: 48:         ++*pmonth;
   704  000268  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   705  00026C  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   706  000270  2ADF               	incf	indf2,f,c
   707  000272                     l1155:
   708                           
   709                           ;timers.c: 51:     if (*pday == 32 && (*pmonth == 1 || *pmonth == 3 || *pmonth == 5 || *
      +                          pmonth == 7 || *pmonth == 8 || *pmonth == 10 || *pmonth == 12)) {
   710  000272  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   711  000276  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   712  00027A  0E20               	movlw	32
   713  00027C  18DE               	xorwf	postinc2,w,c
   714  00027E  A4D8               	btfss	status,2,c
   715  000280  EF44  F001         	goto	u731
   716  000284  EF46  F001         	goto	u730
   717  000288                     u731:
   718  000288  EFAB  F001         	goto	l1175
   719  00028C                     u730:
   720  00028C  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   721  000290  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   722  000294  04DE               	decf	postinc2,w,c
   723  000296  B4D8               	btfsc	status,2,c
   724  000298  EF50  F001         	goto	u741
   725  00029C  EF52  F001         	goto	u740
   726  0002A0                     u741:
   727  0002A0  EFA0  F001         	goto	l1171
   728  0002A4                     u740:
   729  0002A4  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   730  0002A8  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   731  0002AC  0E03               	movlw	3
   732  0002AE  18DE               	xorwf	postinc2,w,c
   733  0002B0  B4D8               	btfsc	status,2,c
   734  0002B2  EF5D  F001         	goto	u751
   735  0002B6  EF5F  F001         	goto	u750
   736  0002BA                     u751:
   737  0002BA  EFA0  F001         	goto	l1171
   738  0002BE                     u750:
   739  0002BE  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   740  0002C2  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   741  0002C6  0E05               	movlw	5
   742  0002C8  18DE               	xorwf	postinc2,w,c
   743  0002CA  B4D8               	btfsc	status,2,c
   744  0002CC  EF6A  F001         	goto	u761
   745  0002D0  EF6C  F001         	goto	u760
   746  0002D4                     u761:
   747  0002D4  EFA0  F001         	goto	l1171
   748  0002D8                     u760:
   749  0002D8  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   750  0002DC  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   751  0002E0  0E07               	movlw	7
   752  0002E2  18DE               	xorwf	postinc2,w,c
   753  0002E4  B4D8               	btfsc	status,2,c
   754  0002E6  EF77  F001         	goto	u771
   755  0002EA  EF79  F001         	goto	u770
   756  0002EE                     u771:
   757  0002EE  EFA0  F001         	goto	l1171
   758  0002F2                     u770:
   759  0002F2  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   760  0002F6  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   761  0002FA  0E08               	movlw	8
   762  0002FC  18DE               	xorwf	postinc2,w,c
   763  0002FE  B4D8               	btfsc	status,2,c
   764  000300  EF84  F001         	goto	u781
   765  000304  EF86  F001         	goto	u780
   766  000308                     u781:
   767  000308  EFA0  F001         	goto	l1171
   768  00030C                     u780:
   769  00030C  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   770  000310  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   771  000314  0E0A               	movlw	10
   772  000316  18DE               	xorwf	postinc2,w,c
   773  000318  B4D8               	btfsc	status,2,c
   774  00031A  EF91  F001         	goto	u791
   775  00031E  EF93  F001         	goto	u790
   776  000322                     u791:
   777  000322  EFA0  F001         	goto	l1171
   778  000326                     u790:
   779  000326  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   780  00032A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   781  00032E  0E0C               	movlw	12
   782  000330  18DE               	xorwf	postinc2,w,c
   783  000332  A4D8               	btfss	status,2,c
   784  000334  EF9E  F001         	goto	u801
   785  000338  EFA0  F001         	goto	u800
   786  00033C                     u801:
   787  00033C  EFAB  F001         	goto	l1175
   788  000340                     u800:
   789  000340                     l1171:
   790                           
   791                           ;timers.c: 52:         *pday = 1;
   792  000340  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   793  000344  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   794  000348  0E01               	movlw	1
   795  00034A  6EDF               	movwf	indf2,c
   796  00034C                     
   797                           ;timers.c: 53:         ++*pmonth;
   798  00034C  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   799  000350  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   800  000354  2ADF               	incf	indf2,f,c
   801  000356                     l1175:
   802                           
   803                           ;timers.c: 56:     if (*pmonth == 13) {*pmonth = 1; ++*pyear;}
   804  000356  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   805  00035A  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   806  00035E  0E0D               	movlw	13
   807  000360  18DE               	xorwf	postinc2,w,c
   808  000362  A4D8               	btfss	status,2,c
   809  000364  EFB6  F001         	goto	u811
   810  000368  EFB8  F001         	goto	u810
   811  00036C                     u811:
   812  00036C  EFC5  F001         	goto	l1181
   813  000370                     u810:
   814  000370  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   815  000374  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   816  000378  0E01               	movlw	1
   817  00037A  6EDF               	movwf	indf2,c
   818  00037C  C00B  FFD9         	movff	Timekeeper@pyear,fsr2l
   819  000380  C00C  FFDA         	movff	Timekeeper@pyear+1,fsr2h
   820  000384  2ADE               	incf	postinc2,f,c
   821  000386  0E00               	movlw	0
   822  000388  22DD               	addwfc	postdec2,f,c
   823  00038A                     l1181:
   824                           
   825                           ;timers.c: 59:     if (*pmonth == 3 && *pday >= 25 && *phour == 1 && *pdayofweek == 7) {
   826  00038A  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   827  00038E  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   828  000392  0E03               	movlw	3
   829  000394  18DE               	xorwf	postinc2,w,c
   830  000396  A4D8               	btfss	status,2,c
   831  000398  EFD0  F001         	goto	u821
   832  00039C  EFD2  F001         	goto	u820
   833  0003A0                     u821:
   834  0003A0  EF02  F002         	goto	l1193
   835  0003A4                     u820:
   836  0003A4  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   837  0003A8  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   838  0003AC  0E18               	movlw	24
   839  0003AE  64DF               	cpfsgt	indf2,c
   840  0003B0  EFDC  F001         	goto	u831
   841  0003B4  EFDE  F001         	goto	u830
   842  0003B8                     u831:
   843  0003B8  EF02  F002         	goto	l1193
   844  0003BC                     u830:
   845  0003BC  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   846  0003C0  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   847  0003C4  04DE               	decf	postinc2,w,c
   848  0003C6  A4D8               	btfss	status,2,c
   849  0003C8  EFE8  F001         	goto	u841
   850  0003CC  EFEA  F001         	goto	u840
   851  0003D0                     u841:
   852  0003D0  EF02  F002         	goto	l1193
   853  0003D4                     u840:
   854  0003D4  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   855  0003D8  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
   856  0003DC  0E07               	movlw	7
   857  0003DE  18DE               	xorwf	postinc2,w,c
   858  0003E0  A4D8               	btfss	status,2,c
   859  0003E2  EFF5  F001         	goto	u851
   860  0003E6  EFF7  F001         	goto	u850
   861  0003EA                     u851:
   862  0003EA  EF02  F002         	goto	l1193
   863  0003EE                     u850:
   864  0003EE                     
   865                           ;timers.c: 60:         ++*phour;
   866  0003EE  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   867  0003F2  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   868  0003F6  2ADF               	incf	indf2,f,c
   869  0003F8                     
   870                           ;timers.c: 61:         *DST = 1;
   871  0003F8  C017  FFD9         	movff	Timekeeper@DST,fsr2l
   872  0003FC  C018  FFDA         	movff	Timekeeper@DST+1,fsr2h
   873  000400  0E01               	movlw	1
   874  000402  6EDF               	movwf	indf2,c
   875  000404                     l1193:
   876                           
   877                           ;timers.c: 64:     if (*pmonth == 10 && *pday >=25 && *phour == 2 && *pdayofweek == 7 &&
      +                           *DST) {
   878  000404  C00D  FFD9         	movff	Timekeeper@pmonth,fsr2l
   879  000408  C00E  FFDA         	movff	Timekeeper@pmonth+1,fsr2h
   880  00040C  0E0A               	movlw	10
   881  00040E  18DE               	xorwf	postinc2,w,c
   882  000410  A4D8               	btfss	status,2,c
   883  000412  EF0D  F002         	goto	u861
   884  000416  EF0F  F002         	goto	u860
   885  00041A                     u861:
   886  00041A  EF4C  F002         	goto	l148
   887  00041E                     u860:
   888  00041E  C00F  FFD9         	movff	Timekeeper@pday,fsr2l
   889  000422  C010  FFDA         	movff	Timekeeper@pday+1,fsr2h
   890  000426  0E18               	movlw	24
   891  000428  64DF               	cpfsgt	indf2,c
   892  00042A  EF19  F002         	goto	u871
   893  00042E  EF1B  F002         	goto	u870
   894  000432                     u871:
   895  000432  EF4C  F002         	goto	l148
   896  000436                     u870:
   897  000436  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   898  00043A  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   899  00043E  0E02               	movlw	2
   900  000440  18DE               	xorwf	postinc2,w,c
   901  000442  A4D8               	btfss	status,2,c
   902  000444  EF26  F002         	goto	u881
   903  000448  EF28  F002         	goto	u880
   904  00044C                     u881:
   905  00044C  EF4C  F002         	goto	l148
   906  000450                     u880:
   907  000450  C015  FFD9         	movff	Timekeeper@pdayofweek,fsr2l
   908  000454  C016  FFDA         	movff	Timekeeper@pdayofweek+1,fsr2h
   909  000458  0E07               	movlw	7
   910  00045A  18DE               	xorwf	postinc2,w,c
   911  00045C  A4D8               	btfss	status,2,c
   912  00045E  EF33  F002         	goto	u891
   913  000462  EF35  F002         	goto	u890
   914  000466                     u891:
   915  000466  EF4C  F002         	goto	l148
   916  00046A                     u890:
   917  00046A  C017  FFD9         	movff	Timekeeper@DST,fsr2l
   918  00046E  C018  FFDA         	movff	Timekeeper@DST+1,fsr2h
   919  000472  50DF               	movf	indf2,w,c
   920  000474  B4D8               	btfsc	status,2,c
   921  000476  EF3F  F002         	goto	u901
   922  00047A  EF41  F002         	goto	u900
   923  00047E                     u901:
   924  00047E  EF4C  F002         	goto	l148
   925  000482                     u900:
   926  000482                     
   927                           ;timers.c: 65:         --*phour;
   928  000482  C011  FFD9         	movff	Timekeeper@phour,fsr2l
   929  000486  C012  FFDA         	movff	Timekeeper@phour+1,fsr2h
   930  00048A  06DF               	decf	indf2,f,c
   931  00048C                     
   932                           ;timers.c: 66:         *DST = 0;
   933  00048C  C017  FFD9         	movff	Timekeeper@DST,fsr2l
   934  000490  C018  FFDA         	movff	Timekeeper@DST+1,fsr2h
   935  000494  0E00               	movlw	0
   936  000496  6EDF               	movwf	indf2,c
   937  000498                     l148:
   938  000498  0012               	return		;funcret
   939  00049A                     __end_of_Timekeeper:
   940                           	callstack 0
   941                           
   942 ;; *************** function _LeapYear *****************
   943 ;; Defined at:
   944 ;;		line 73 in file "timers.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  year            2    5[COMRAM] unsigned int 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  leapyear        1    9[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      unsigned char 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   961 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   962 ;;Total ram usage:        5 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 2
   965 ;; This function calls:
   966 ;;		___lwmod
   967 ;; This function is called by:
   968 ;;		_Timekeeper
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text3
   973  00051E                     __ptext3:
   974                           	callstack 0
   975  00051E                     _LeapYear:
   976                           	callstack 27
   977  00051E                     
   978                           ;timers.c: 73: char LeapYear(unsigned int year);timers.c: 74: {;timers.c: 75:     char l
      +                          eapyear;;timers.c: 76:     if (year % 4 == 0 && year % 100 != 0) {
   979  00051E  0E03               	movlw	3
   980  000520  1406               	andwf	LeapYear@year^0,w,c
   981  000522  6E08               	movwf	??_LeapYear^0,c
   982  000524  0E00               	movlw	0
   983  000526  1407               	andwf	(LeapYear@year+1)^0,w,c
   984  000528  6E09               	movwf	(??_LeapYear+1)^0,c
   985  00052A  5008               	movf	??_LeapYear^0,w,c
   986  00052C  1009               	iorwf	(??_LeapYear+1)^0,w,c
   987  00052E  A4D8               	btfss	status,2,c
   988  000530  EF9C  F002         	goto	u551
   989  000534  EF9E  F002         	goto	u550
   990  000538                     u551:
   991  000538  EFB5  F002         	goto	l1089
   992  00053C                     u550:
   993  00053C  C006  F001         	movff	LeapYear@year,___lwmod@dividend
   994  000540  C007  F002         	movff	LeapYear@year+1,___lwmod@dividend+1
   995  000544  0E00               	movlw	0
   996  000546  6E04               	movwf	(___lwmod@divisor+1)^0,c
   997  000548  0E64               	movlw	100
   998  00054A  6E03               	movwf	___lwmod@divisor^0,c
   999  00054C  EC07  F003         	call	___lwmod	;wreg free
  1000  000550  5001               	movf	?___lwmod^0,w,c
  1001  000552  1002               	iorwf	(?___lwmod+1)^0,w,c
  1002  000554  B4D8               	btfsc	status,2,c
  1003  000556  EFAF  F002         	goto	u561
  1004  00055A  EFB1  F002         	goto	u560
  1005  00055E                     u561:
  1006  00055E  EFB5  F002         	goto	l1089
  1007  000562                     u560:
  1008  000562                     l1087:
  1009                           
  1010                           ;timers.c: 77:         leapyear = 1;
  1011  000562  0E01               	movlw	1
  1012  000564  6E0A               	movwf	LeapYear@leapyear^0,c
  1013                           
  1014                           ;timers.c: 78:     } else if (year % 400 == 0) {
  1015  000566  EFCC  F002         	goto	l152
  1016  00056A                     l1089:
  1017  00056A  C006  F001         	movff	LeapYear@year,___lwmod@dividend
  1018  00056E  C007  F002         	movff	LeapYear@year+1,___lwmod@dividend+1
  1019  000572  0E01               	movlw	1
  1020  000574  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1021  000576  0E90               	movlw	144
  1022  000578  6E03               	movwf	___lwmod@divisor^0,c
  1023  00057A  EC07  F003         	call	___lwmod	;wreg free
  1024  00057E  5001               	movf	?___lwmod^0,w,c
  1025  000580  1002               	iorwf	(?___lwmod+1)^0,w,c
  1026  000582  A4D8               	btfss	status,2,c
  1027  000584  EFC6  F002         	goto	u571
  1028  000588  EFC8  F002         	goto	u570
  1029  00058C                     u571:
  1030  00058C  EFCA  F002         	goto	l1093
  1031  000590                     u570:
  1032  000590  EFB1  F002         	goto	l1087
  1033  000594                     l1093:
  1034                           
  1035                           ;timers.c: 81:         leapyear = 0;
  1036  000594  0E00               	movlw	0
  1037  000596  6E0A               	movwf	LeapYear@leapyear^0,c
  1038  000598                     l152:
  1039                           
  1040                           ;timers.c: 83:     return leapyear;
  1041  000598  500A               	movf	LeapYear@leapyear^0,w,c
  1042  00059A  0012               	return		;funcret
  1043  00059C                     __end_of_LeapYear:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function ___lwmod *****************
  1047 ;; Defined at:
  1048 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  dividend        2    0[COMRAM] unsigned int 
  1051 ;;  divisor         2    2[COMRAM] unsigned int 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  counter         1    4[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2    0[COMRAM] unsigned int 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1067 ;;Total ram usage:        5 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_LeapYear
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text4
  1078  00060E                     __ptext4:
  1079                           	callstack 0
  1080  00060E                     ___lwmod:
  1081                           	callstack 27
  1082  00060E  5003               	movf	___lwmod@divisor^0,w,c
  1083  000610  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1084  000612  B4D8               	btfsc	status,2,c
  1085  000614  EF0E  F003         	goto	u521
  1086  000618  EF10  F003         	goto	u520
  1087  00061C                     u521:
  1088  00061C  EF34  F003         	goto	l659
  1089  000620                     u520:
  1090  000620  0E01               	movlw	1
  1091  000622  6E05               	movwf	___lwmod@counter^0,c
  1092  000624  EF18  F003         	goto	l1073
  1093  000628                     l1071:
  1094  000628  90D8               	bcf	status,0,c
  1095  00062A  3603               	rlcf	___lwmod@divisor^0,f,c
  1096  00062C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1097  00062E  2A05               	incf	___lwmod@counter^0,f,c
  1098  000630                     l1073:
  1099  000630  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1100  000632  EF1D  F003         	goto	u531
  1101  000636  EF1F  F003         	goto	u530
  1102  00063A                     u531:
  1103  00063A  EF14  F003         	goto	l1071
  1104  00063E                     u530:
  1105  00063E                     l1075:
  1106  00063E  5003               	movf	___lwmod@divisor^0,w,c
  1107  000640  5C01               	subwf	___lwmod@dividend^0,w,c
  1108  000642  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1109  000644  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1110  000646  A0D8               	btfss	status,0,c
  1111  000648  EF28  F003         	goto	u541
  1112  00064C  EF2A  F003         	goto	u540
  1113  000650                     u541:
  1114  000650  EF2E  F003         	goto	l1079
  1115  000654                     u540:
  1116  000654  5003               	movf	___lwmod@divisor^0,w,c
  1117  000656  5E01               	subwf	___lwmod@dividend^0,f,c
  1118  000658  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1119  00065A  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1120  00065C                     l1079:
  1121  00065C  90D8               	bcf	status,0,c
  1122  00065E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1123  000660  3203               	rrcf	___lwmod@divisor^0,f,c
  1124  000662  2E05               	decfsz	___lwmod@counter^0,f,c
  1125  000664  EF1F  F003         	goto	l1075
  1126  000668                     l659:
  1127  000668  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1128  00066C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1129  000670  0012               	return		;funcret
  1130  000672                     __end_of___lwmod:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function _SmallHours *****************
  1134 ;; Defined at:
  1135 ;;		line 42 in file "lights.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  hour            1    wreg     unsigned char 
  1138 ;;  minute          1    0[COMRAM] unsigned char 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  hour            1    1[COMRAM] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1150 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;Total ram usage:        2 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text5
  1165  000672                     __ptext5:
  1166                           	callstack 0
  1167  000672                     _SmallHours:
  1168                           	callstack 29
  1169                           
  1170                           ;incstack = 0
  1171                           ;SmallHours@hour stored from wreg
  1172  000672  6E02               	movwf	SmallHours@hour^0,c
  1173  000674                     
  1174                           ;lights.c: 42: void SmallHours(char hour, char minute);lights.c: 43: {;lights.c: 44:    
      +                           if (hour >= 1 && hour < 5) {
  1175  000674  5002               	movf	SmallHours@hour^0,w,c
  1176  000676  B4D8               	btfsc	status,2,c
  1177  000678  EF40  F003         	goto	u911
  1178  00067C  EF42  F003         	goto	u910
  1179  000680                     u911:
  1180  000680  EF4D  F003         	goto	l1213
  1181  000684                     u910:
  1182  000684  0E05               	movlw	5
  1183  000686  6002               	cpfslt	SmallHours@hour^0,c
  1184  000688  EF48  F003         	goto	u921
  1185  00068C  EF4A  F003         	goto	u920
  1186  000690                     u921:
  1187  000690  EF4D  F003         	goto	l1213
  1188  000694                     u920:
  1189  000694                     
  1190                           ;lights.c: 45:         CM1CON0bits.EN = 0;
  1191  000694  010E               	movlb	14	; () banked
  1192  000696  9FD0               	bcf	208,7,b	;volatile
  1193                           
  1194                           ;lights.c: 46:         LATHbits.LATH3 = 0;
  1195  000698  9680               	bcf	128,3,c	;volatile
  1196  00069A                     l1213:
  1197                           
  1198                           ;lights.c: 49:     if (hour == 5 && minute == 0) {CM1CON0bits.EN = 1;}
  1199  00069A  0E05               	movlw	5
  1200  00069C  1802               	xorwf	SmallHours@hour^0,w,c
  1201  00069E  A4D8               	btfss	status,2,c
  1202  0006A0  EF54  F003         	goto	u931
  1203  0006A4  EF56  F003         	goto	u930
  1204  0006A8                     u931:
  1205  0006A8  EF60  F003         	goto	l113
  1206  0006AC                     u930:
  1207  0006AC  5001               	movf	SmallHours@minute^0,w,c
  1208  0006AE  A4D8               	btfss	status,2,c
  1209  0006B0  EF5C  F003         	goto	u941
  1210  0006B4  EF5E  F003         	goto	u940
  1211  0006B8                     u941:
  1212  0006B8  EF60  F003         	goto	l113
  1213  0006BC                     u940:
  1214  0006BC  010E               	movlb	14	; () banked
  1215  0006BE  8FD0               	bsf	208,7,b	;volatile
  1216  0006C0                     l113:
  1217  0006C0  0012               	return		;funcret
  1218  0006C2                     __end_of_SmallHours:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _Lights_init *****************
  1222 ;; Defined at:
  1223 ;;		line 7 in file "lights.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		None
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text6
  1252  00070C                     __ptext6:
  1253                           	callstack 0
  1254  00070C                     _Lights_init:
  1255                           	callstack 29
  1256  00070C                     
  1257                           ;lights.c: 10:     LATGbits.LATG0 = 0;
  1258  00070C  907F               	bcf	127,0,c	;volatile
  1259                           
  1260                           ;lights.c: 11:     LATGbits.LATG1 = 0;
  1261  00070E  927F               	bcf	127,1,c	;volatile
  1262                           
  1263                           ;lights.c: 12:     LATAbits.LATA2 = 0;
  1264  000710  9479               	bcf	121,2,c	;volatile
  1265                           
  1266                           ;lights.c: 13:     LATFbits.LATF6 = 0;
  1267  000712  9C7E               	bcf	126,6,c	;volatile
  1268                           
  1269                           ;lights.c: 14:     LATAbits.LATA4 = 0;
  1270  000714  9879               	bcf	121,4,c	;volatile
  1271                           
  1272                           ;lights.c: 15:     LATHbits.LATH3 = 0;
  1273  000716  9680               	bcf	128,3,c	;volatile
  1274                           
  1275                           ;lights.c: 18:     TRISGbits.TRISG0 = 0;
  1276  000718  9087               	bcf	135,0,c	;volatile
  1277                           
  1278                           ;lights.c: 19:     TRISGbits.TRISG1 = 0;
  1279  00071A  9287               	bcf	135,1,c	;volatile
  1280                           
  1281                           ;lights.c: 20:     TRISAbits.TRISA2 = 0;
  1282  00071C  9481               	bcf	129,2,c	;volatile
  1283                           
  1284                           ;lights.c: 21:     TRISFbits.TRISF6 = 0;
  1285  00071E  9C86               	bcf	134,6,c	;volatile
  1286                           
  1287                           ;lights.c: 22:     TRISAbits.TRISA4 = 0;
  1288  000720  9881               	bcf	129,4,c	;volatile
  1289                           
  1290                           ;lights.c: 23:     TRISHbits.TRISH3 = 0;
  1291  000722  9688               	bcf	136,3,c	;volatile
  1292  000724  0012               	return		;funcret
  1293  000726                     __end_of_Lights_init:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _LEDarray_disp_bin *****************
  1297 ;; Defined at:
  1298 ;;		line 29 in file "lights.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  number          1    wreg     unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  number          1    0[COMRAM] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;Total ram usage:        1 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text7
  1327  00059C                     __ptext7:
  1328                           	callstack 0
  1329  00059C                     _LEDarray_disp_bin:
  1330                           	callstack 29
  1331                           
  1332                           ;incstack = 0
  1333                           ;LEDarray_disp_bin@number stored from wreg
  1334  00059C  6E01               	movwf	LEDarray_disp_bin@number^0,c
  1335  00059E                     
  1336                           ;lights.c: 29: void LEDarray_disp_bin(char number);lights.c: 30: {;lights.c: 32:     if 
      +                          (number & 0b00001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  1337  00059E  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  1338  0005A0  EFD4  F002         	goto	u401
  1339  0005A4  EFD6  F002         	goto	u400
  1340  0005A8                     u401:
  1341  0005A8  EFD9  F002         	goto	l98
  1342  0005AC                     u400:
  1343  0005AC  807F               	bsf	127,0,c	;volatile
  1344  0005AE  EFDA  F002         	goto	l1013
  1345  0005B2                     l98:
  1346  0005B2  907F               	bcf	127,0,c	;volatile
  1347  0005B4                     l1013:
  1348                           
  1349                           ;lights.c: 33:     if (number & 0b00010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 = 0;
      +                          }
  1350  0005B4  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  1351  0005B6  EFDF  F002         	goto	u411
  1352  0005BA  EFE1  F002         	goto	u410
  1353  0005BE                     u411:
  1354  0005BE  EFE4  F002         	goto	l100
  1355  0005C2                     u410:
  1356  0005C2  827F               	bsf	127,1,c	;volatile
  1357  0005C4  EFE5  F002         	goto	l1017
  1358  0005C8                     l100:
  1359  0005C8  927F               	bcf	127,1,c	;volatile
  1360  0005CA                     l1017:
  1361                           
  1362                           ;lights.c: 34:     if (number & 0b00100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 = 0;
      +                          }
  1363  0005CA  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  1364  0005CC  EFEA  F002         	goto	u421
  1365  0005D0  EFEC  F002         	goto	u420
  1366  0005D4                     u421:
  1367  0005D4  EFEF  F002         	goto	l102
  1368  0005D8                     u420:
  1369  0005D8  8479               	bsf	121,2,c	;volatile
  1370  0005DA  EFF0  F002         	goto	l1021
  1371  0005DE                     l102:
  1372  0005DE  9479               	bcf	121,2,c	;volatile
  1373  0005E0                     l1021:
  1374                           
  1375                           ;lights.c: 35:     if (number & 0b01000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 = 0;
      +                          }
  1376  0005E0  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  1377  0005E2  EFF5  F002         	goto	u431
  1378  0005E6  EFF7  F002         	goto	u430
  1379  0005EA                     u431:
  1380  0005EA  EFFA  F002         	goto	l104
  1381  0005EE                     u430:
  1382  0005EE  8C7E               	bsf	126,6,c	;volatile
  1383  0005F0  EFFB  F002         	goto	l1025
  1384  0005F4                     l104:
  1385  0005F4  9C7E               	bcf	126,6,c	;volatile
  1386  0005F6                     l1025:
  1387                           
  1388                           ;lights.c: 36:     if (number & 0b10000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 = 0;
      +                          }
  1389  0005F6  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  1390  0005F8  EF00  F003         	goto	u441
  1391  0005FC  EF02  F003         	goto	u440
  1392  000600                     u441:
  1393  000600  EF05  F003         	goto	l106
  1394  000604                     u440:
  1395  000604  8879               	bsf	121,4,c	;volatile
  1396  000606  EF06  F003         	goto	l108
  1397  00060A                     l106:
  1398  00060A  9879               	bcf	121,4,c	;volatile
  1399  00060C                     l108:
  1400  00060C  0012               	return		;funcret
  1401  00060E                     __end_of_LEDarray_disp_bin:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _Interrupts_init *****************
  1405 ;; Defined at:
  1406 ;;		line 7 in file "interrupts.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		None
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text8
  1435  00073A                     __ptext8:
  1436                           	callstack 0
  1437  00073A                     _Interrupts_init:
  1438                           	callstack 29
  1439  00073A                     
  1440                           ;interrupts.c: 10:     PIE0bits.TMR0IE = 1;
  1441  00073A  010E               	movlb	14	; () banked
  1442  00073C  8B29               	bsf	41,5,b	;volatile
  1443                           
  1444                           ;interrupts.c: 11:     PIE2bits.C1IE = 1;
  1445  00073E  812B               	bsf	43,0,b	;volatile
  1446                           
  1447                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  1448  000740  8CF2               	bsf	242,6,c	;volatile
  1449                           
  1450                           ;interrupts.c: 13:     INTCONbits.GIE = 1;
  1451  000742  8EF2               	bsf	242,7,c	;volatile
  1452  000744                     
  1453                           ; BSR set to: 14
  1454  000744  0012               	return		;funcret
  1455  000746                     __end_of_Interrupts_init:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _Comp1_init *****************
  1459 ;; Defined at:
  1460 ;;		line 21 in file "comparator.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 2
  1481 ;; This function calls:
  1482 ;;		_DAC_init
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text9
  1489  0006C2                     __ptext9:
  1490                           	callstack 0
  1491  0006C2                     _Comp1_init:
  1492                           	callstack 28
  1493  0006C2                     
  1494                           ;comparator.c: 23:     TRISFbits.TRISF7 = 1;
  1495  0006C2  8E86               	bsf	134,7,c	;volatile
  1496  0006C4                     
  1497                           ;comparator.c: 24:     CM1NCHbits.NCH = 0b011;
  1498  0006C4  010E               	movlb	14	; () banked
  1499  0006C6  51D2               	movf	210,w,b	;volatile
  1500  0006C8  0BF8               	andlw	-8
  1501  0006CA  0903               	iorlw	3
  1502  0006CC  6FD2               	movwf	210,b	;volatile
  1503                           
  1504                           ;comparator.c: 25:     CM1PCHbits.PCH = 0b101;
  1505  0006CE  51D3               	movf	211,w,b	;volatile
  1506  0006D0  0BF8               	andlw	-8
  1507  0006D2  0905               	iorlw	5
  1508  0006D4  6FD3               	movwf	211,b	;volatile
  1509  0006D6                     
  1510                           ; BSR set to: 14
  1511                           ;comparator.c: 26:     CM1CON0bits.HYS = 1;
  1512  0006D6  83D0               	bsf	208,1,b	;volatile
  1513  0006D8                     
  1514                           ; BSR set to: 14
  1515                           ;comparator.c: 27:     CM1CON0bits.POL = 1;
  1516  0006D8  89D0               	bsf	208,4,b	;volatile
  1517  0006DA                     
  1518                           ; BSR set to: 14
  1519                           ;comparator.c: 28:     CM1CON1bits.INTP = 1;
  1520  0006DA  83D1               	bsf	209,1,b	;volatile
  1521  0006DC                     
  1522                           ; BSR set to: 14
  1523                           ;comparator.c: 29:     CM1CON1bits.INTN = 1;
  1524  0006DC  81D1               	bsf	209,0,b	;volatile
  1525  0006DE                     
  1526                           ; BSR set to: 14
  1527                           ;comparator.c: 30:     DAC_init();
  1528  0006DE  EC93  F003         	call	_DAC_init	;wreg free
  1529  0006E2                     
  1530                           ;comparator.c: 31:     CM1CON0bits.EN = 1;
  1531  0006E2  010E               	movlb	14	; () banked
  1532  0006E4  8FD0               	bsf	208,7,b	;volatile
  1533  0006E6                     
  1534                           ; BSR set to: 14
  1535  0006E6  0012               	return		;funcret
  1536  0006E8                     __end_of_Comp1_init:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _DAC_init *****************
  1540 ;; Defined at:
  1541 ;;		line 7 in file "comparator.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_Comp1_init
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text10
  1570  000726                     __ptext10:
  1571                           	callstack 0
  1572  000726                     _DAC_init:
  1573                           	callstack 28
  1574  000726                     
  1575                           ;comparator.c: 9:     DAC1CON0bits.PSS = 0b00;
  1576  000726  0EF3               	movlw	-13
  1577  000728  010E               	movlb	14	; () banked
  1578  00072A  17C6               	andwf	198,f,b	;volatile
  1579  00072C                     
  1580                           ; BSR set to: 14
  1581                           ;comparator.c: 10:     DAC1CON0bits.NSS = 0b0;
  1582  00072C  91C6               	bcf	198,0,b	;volatile
  1583                           
  1584                           ;comparator.c: 14:     DAC1CON1bits.DAC1R = 0b11011;
  1585  00072E  51C7               	movf	199,w,b	;volatile
  1586  000730  0BE0               	andlw	-32
  1587  000732  091B               	iorlw	27
  1588  000734  6FC7               	movwf	199,b	;volatile
  1589  000736                     
  1590                           ; BSR set to: 14
  1591                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN = 1;
  1592  000736  8FC6               	bsf	198,7,b	;volatile
  1593  000738                     
  1594                           ; BSR set to: 14
  1595  000738  0012               	return		;funcret
  1596  00073A                     __end_of_DAC_init:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _ISR *****************
  1600 ;; Defined at:
  1601 ;;		line 19 in file "interrupts.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		Interrupt level 2
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	intcode
  1629  000008                     __pintcode:
  1630                           	callstack 0
  1631  000008                     _ISR:
  1632                           	callstack 27
  1633                           
  1634                           ; BSR set to: 14
  1635                           ;incstack = 0
  1636  000008  8222               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1637  00000A                     
  1638                           ;interrupts.c: 21:     if (PIR0bits.TMR0IF == 1) {
  1639  00000A  010E               	movlb	14	; () banked
  1640  00000C  AB33               	btfss	51,5,b	;volatile
  1641  00000E  EF0B  F000         	goto	i2u49_41
  1642  000012  EF0D  F000         	goto	i2u49_40
  1643  000016                     i2u49_41:
  1644  000016  EF13  F000         	goto	i2l1049
  1645  00001A                     i2u49_40:
  1646  00001A                     
  1647                           ; BSR set to: 14
  1648                           ;interrupts.c: 22:         LATAbits.LATA3 = 1;
  1649  00001A  8679               	bsf	121,3,c	;volatile
  1650  00001C                     
  1651                           ; BSR set to: 14
  1652                           ;interrupts.c: 23:         TMR0H=0b00011011;
  1653  00001C  0E1B               	movlw	27
  1654  00001E  6ED4               	movwf	212,c	;volatile
  1655                           
  1656                           ;interrupts.c: 24:         TMR0L=0b00011110;
  1657  000020  0E1E               	movlw	30
  1658  000022  6ED3               	movwf	211,c	;volatile
  1659  000024                     
  1660                           ; BSR set to: 14
  1661                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
  1662  000024  9B33               	bcf	51,5,b	;volatile
  1663  000026                     i2l1049:
  1664                           
  1665                           ; BSR set to: 14
  1666                           ;interrupts.c: 28:     if (PIR2bits.C1IF == 1) {
  1667  000026  A135               	btfss	53,0,b	;volatile
  1668  000028  EF18  F000         	goto	i2u50_41
  1669  00002C  EF1A  F000         	goto	i2u50_40
  1670  000030                     i2u50_41:
  1671  000030  EF26  F000         	goto	i2l52
  1672  000034                     i2u50_40:
  1673  000034                     
  1674                           ; BSR set to: 14
  1675                           ;interrupts.c: 29:         if (CM1CON0bits.OUT) {LATHbits.LATH3 = 1;}
  1676  000034  ADD0               	btfss	208,6,b	;volatile
  1677  000036  EF1F  F000         	goto	i2u51_41
  1678  00003A  EF21  F000         	goto	i2u51_40
  1679  00003E                     i2u51_41:
  1680  00003E  EF24  F000         	goto	i2l50
  1681  000042                     i2u51_40:
  1682  000042                     
  1683                           ; BSR set to: 14
  1684  000042  8680               	bsf	128,3,c	;volatile
  1685  000044  EF25  F000         	goto	i2l51
  1686  000048                     i2l50:
  1687                           
  1688                           ; BSR set to: 14
  1689  000048  9680               	bcf	128,3,c	;volatile
  1690  00004A                     i2l51:
  1691                           
  1692                           ; BSR set to: 14
  1693                           ;interrupts.c: 31:         PIR2bits.C1IF = 0;
  1694  00004A  9135               	bcf	53,0,b	;volatile
  1695  00004C                     i2l52:
  1696                           
  1697                           ; BSR set to: 14
  1698  00004C  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1699  00004E  0011               	retfie		f
  1700  000050                     __end_of_ISR:
  1701                           	callstack 0
  1702  0000                     
  1703                           	psect	rparam
  1704  0000                     
  1705                           	psect	temp
  1706  000022                     btemp:
  1707                           	callstack 0
  1708  000022                     	ds	1
  1709  0000                     int$flags	set	btemp
  1710  0000                     wtemp8	set	btemp+1
  1711  0000                     ttemp5	set	btemp+1
  1712  0000                     ttemp6	set	btemp+4
  1713  0000                     ttemp7	set	btemp+8
  1714                           
  1715                           	psect	idloc
  1716                           
  1717                           ;Config register IDLOC0 @ 0x200000
  1718                           ;	unspecified, using default values
  1719  200000                     	org	2097152
  1720  200000  0FFF               	dw	4095
  1721                           
  1722                           ;Config register IDLOC1 @ 0x200002
  1723                           ;	unspecified, using default values
  1724  200002                     	org	2097154
  1725  200002  0FFF               	dw	4095
  1726                           
  1727                           ;Config register IDLOC2 @ 0x200004
  1728                           ;	unspecified, using default values
  1729  200004                     	org	2097156
  1730  200004  0FFF               	dw	4095
  1731                           
  1732                           ;Config register IDLOC3 @ 0x200006
  1733                           ;	unspecified, using default values
  1734  200006                     	org	2097158
  1735  200006  0FFF               	dw	4095
  1736                           
  1737                           ;Config register IDLOC4 @ 0x200008
  1738                           ;	unspecified, using default values
  1739  200008                     	org	2097160
  1740  200008  0FFF               	dw	4095
  1741                           
  1742                           ;Config register IDLOC5 @ 0x20000A
  1743                           ;	unspecified, using default values
  1744  20000A                     	org	2097162
  1745  20000A  0FFF               	dw	4095
  1746                           
  1747                           ;Config register IDLOC6 @ 0x20000C
  1748                           ;	unspecified, using default values
  1749  20000C                     	org	2097164
  1750  20000C  0FFF               	dw	4095
  1751                           
  1752                           ;Config register IDLOC7 @ 0x20000E
  1753                           ;	unspecified, using default values
  1754  20000E                     	org	2097166
  1755  20000E  0FFF               	dw	4095
  1756                           
  1757                           	psect	config
  1758                           
  1759                           ;Config register CONFIG1L @ 0x300000
  1760                           ;	External Oscillator mode Selection bits
  1761                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1762                           ;	Power-up default value for COSC bits
  1763                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1764  300000                     	org	3145728
  1765  300000  AA                 	db	170
  1766                           
  1767                           ;Config register CONFIG1H @ 0x300001
  1768                           ;	unspecified, using default values
  1769                           ;	Clock Out Enable bit
  1770                           ;	CLKOUTEN = 0x1, unprogrammed default
  1771                           ;	Clock Switch Enable bit
  1772                           ;	CSWEN = 0x1, unprogrammed default
  1773                           ;	Fail-Safe Clock Monitor Enable bit
  1774                           ;	FCMEN = 0x1, unprogrammed default
  1775  300001                     	org	3145729
  1776  300001  FF                 	db	255
  1777                           
  1778                           ;Config register CONFIG2L @ 0x300002
  1779                           ;	unspecified, using default values
  1780                           ;	Master Clear Enable bit
  1781                           ;	MCLRE = 0x1, unprogrammed default
  1782                           ;	Power-up Timer Enable bit
  1783                           ;	PWRTE = 0x1, unprogrammed default
  1784                           ;	Low-power BOR enable bit
  1785                           ;	LPBOREN = 0x1, unprogrammed default
  1786                           ;	Brown-out Reset Enable bits
  1787                           ;	BOREN = 0x3, unprogrammed default
  1788  300002                     	org	3145730
  1789  300002  FF                 	db	255
  1790                           
  1791                           ;Config register CONFIG2H @ 0x300003
  1792                           ;	unspecified, using default values
  1793                           ;	Brown Out Reset Voltage selection bits
  1794                           ;	BORV = 0x3, unprogrammed default
  1795                           ;	ZCD Disable bit
  1796                           ;	ZCD = 0x1, unprogrammed default
  1797                           ;	PPSLOCK bit One-Way Set Enable bit
  1798                           ;	PPS1WAY = 0x1, unprogrammed default
  1799                           ;	Stack Full/Underflow Reset Enable bit
  1800                           ;	STVREN = 0x1, unprogrammed default
  1801                           ;	Debugger Enable bit
  1802                           ;	DEBUG = 0x1, unprogrammed default
  1803                           ;	Extended Instruction Set Enable bit
  1804                           ;	XINST = 0x1, unprogrammed default
  1805  300003                     	org	3145731
  1806  300003  FF                 	db	255
  1807                           
  1808                           ;Config register CONFIG3L @ 0x300004
  1809                           ;	WDT Period Select bits
  1810                           ;	WDTCPS = 0x1F, unprogrammed default
  1811                           ;	WDT operating mode
  1812                           ;	WDTE = OFF, WDT Disabled
  1813  300004                     	org	3145732
  1814  300004  9F                 	db	159
  1815                           
  1816                           ;Config register CONFIG3H @ 0x300005
  1817                           ;	unspecified, using default values
  1818                           ;	WDT Window Select bits
  1819                           ;	WDTCWS = 0x7, unprogrammed default
  1820                           ;	WDT input clock selector
  1821                           ;	WDTCCS = 0x7, unprogrammed default
  1822  300005                     	org	3145733
  1823  300005  FF                 	db	255
  1824                           
  1825                           ;Config register CONFIG4L @ 0x300006
  1826                           ;	unspecified, using default values
  1827                           ;	Write Protection Block 0
  1828                           ;	WRT0 = 0x1, unprogrammed default
  1829                           ;	Write Protection Block 1
  1830                           ;	WRT1 = 0x1, unprogrammed default
  1831                           ;	Write Protection Block 2
  1832                           ;	WRT2 = 0x1, unprogrammed default
  1833                           ;	Write Protection Block 3
  1834                           ;	WRT3 = 0x1, unprogrammed default
  1835                           ;	Write Protection Block 3
  1836                           ;	WRT4 = 0x1, unprogrammed default
  1837                           ;	Write Protection Block 3
  1838                           ;	WRT5 = 0x1, unprogrammed default
  1839                           ;	Write Protection Block 3
  1840                           ;	WRT6 = 0x1, unprogrammed default
  1841                           ;	Write Protection Block 3
  1842                           ;	WRT7 = 0x1, unprogrammed default
  1843  300006                     	org	3145734
  1844  300006  FF                 	db	255
  1845                           
  1846                           ;Config register CONFIG4H @ 0x300007
  1847                           ;	unspecified, using default values
  1848                           ;	Configuration Register Write Protection bit
  1849                           ;	WRTC = 0x1, unprogrammed default
  1850                           ;	Boot Block Write Protection bit
  1851                           ;	WRTB = 0x1, unprogrammed default
  1852                           ;	Data EEPROM Write Protection bit
  1853                           ;	WRTD = 0x1, unprogrammed default
  1854                           ;	Scanner Enable bit
  1855                           ;	SCANE = 0x1, unprogrammed default
  1856                           ;	Low Voltage Programming Enable bit
  1857                           ;	LVP = 0x1, unprogrammed default
  1858  300007                     	org	3145735
  1859  300007  FF                 	db	255
  1860                           
  1861                           ;Config register CONFIG5L @ 0x300008
  1862                           ;	unspecified, using default values
  1863                           ;	UserNVM Program Memory Code Protection bit
  1864                           ;	CP = 0x1, unprogrammed default
  1865                           ;	DataNVM Memory Code Protection bit
  1866                           ;	CPD = 0x1, unprogrammed default
  1867  300008                     	org	3145736
  1868  300008  FF                 	db	255
  1869                           
  1870                           ;Config register CONFIG5H @ 0x300009
  1871                           ;	unspecified, using default values
  1872  300009                     	org	3145737
  1873  300009  FF                 	db	255
  1874                           
  1875                           ;Config register CONFIG6L @ 0x30000A
  1876                           ;	unspecified, using default values
  1877                           ;	Table Read Protection Block 0
  1878                           ;	EBTR0 = 0x1, unprogrammed default
  1879                           ;	Table Read Protection Block 1
  1880                           ;	EBTR1 = 0x1, unprogrammed default
  1881                           ;	Table Read Protection Block 2
  1882                           ;	EBTR2 = 0x1, unprogrammed default
  1883                           ;	Table Read Protection Block 3
  1884                           ;	EBTR3 = 0x1, unprogrammed default
  1885                           ;	Table Read Protection Block 4
  1886                           ;	EBTR4 = 0x1, unprogrammed default
  1887                           ;	Table Read Protection Block 5
  1888                           ;	EBTR5 = 0x1, unprogrammed default
  1889                           ;	Table Read Protection Block 6
  1890                           ;	EBTR6 = 0x1, unprogrammed default
  1891                           ;	Table Read Protection Block 7
  1892                           ;	EBTR7 = 0x1, unprogrammed default
  1893  30000A                     	org	3145738
  1894  30000A  FF                 	db	255
  1895                           
  1896                           ;Config register CONFIG6H @ 0x30000B
  1897                           ;	unspecified, using default values
  1898                           ;	Boot Block Table Read Protection bit
  1899                           ;	EBTRB = 0x1, unprogrammed default
  1900  30000B                     	org	3145739
  1901  30000B  FF                 	db	255
  1902                           tosu	equ	0xFFF
  1903                           tosh	equ	0xFFE
  1904                           tosl	equ	0xFFD
  1905                           stkptr	equ	0xFFC
  1906                           pclatu	equ	0xFFB
  1907                           pclath	equ	0xFFA
  1908                           pcl	equ	0xFF9
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           prodh	equ	0xFF4
  1914                           prodl	equ	0xFF3
  1915                           indf0	equ	0xFEF
  1916                           postinc0	equ	0xFEE
  1917                           postdec0	equ	0xFED
  1918                           preinc0	equ	0xFEC
  1919                           plusw0	equ	0xFEB
  1920                           fsr0h	equ	0xFEA
  1921                           fsr0l	equ	0xFE9
  1922                           wreg	equ	0xFE8
  1923                           indf1	equ	0xFE7
  1924                           postinc1	equ	0xFE6
  1925                           postdec1	equ	0xFE5
  1926                           preinc1	equ	0xFE4
  1927                           plusw1	equ	0xFE3
  1928                           fsr1h	equ	0xFE2
  1929                           fsr1l	equ	0xFE1
  1930                           bsr	equ	0xFE0
  1931                           indf2	equ	0xFDF
  1932                           postinc2	equ	0xFDE
  1933                           postdec2	equ	0xFDD
  1934                           preinc2	equ	0xFDC
  1935                           plusw2	equ	0xFDB
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Timekeeper@DST	PTR unsigned char  size(2) Largest target is 1
		 -> main@DST(COMRAM[1]), 

    Timekeeper@pyear	PTR unsigned int  size(2) Largest target is 2
		 -> main@year(COMRAM[2]), 

    Timekeeper@pmonth	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(COMRAM[1]), 

    Timekeeper@pdayofweek	PTR unsigned char  size(2) Largest target is 1
		 -> main@dayofweek(COMRAM[1]), 

    Timekeeper@pday	PTR unsigned char  size(2) Largest target is 1
		 -> main@day(COMRAM[1]), 

    Timekeeper@phour	PTR unsigned char  size(2) Largest target is 1
		 -> main@hour(COMRAM[1]), 

    Timekeeper@pminute	PTR unsigned char  size(2) Largest target is 1
		 -> main@minute(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_Timekeeper
    _Timekeeper->_LeapYear
    _LeapYear->___lwmod

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2944
                                             25 COMRAM     8     8      0
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                        _Lights_init
                         _SmallHours
                         _Timekeeper
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timekeeper                                          15     1     14    2404
                                             10 COMRAM    15     1     14
                           _LeapYear
 ---------------------------------------------------------------------------------
 (2) _LeapYear                                             5     3      2     706
                                              5 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _SmallHours                                           2     1      1     164
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Lights_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    1     1      0      75
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _Lights_init
   _SmallHours
   _Timekeeper
     _LeapYear
       ___lwmod
   _Timer0_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     21      21       1       35.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 01 20:04:34 2021

      Timekeeper@pdayofweek 0015                          l20 06E6                          l17 0738  
                        l43 0744                          l95 0724                          l98 05B2  
         ??_Interrupts_init 0001                         l100 05C8                         l102 05DE  
                       l104 05F4                         l113 06C0                         l106 060A  
                       l130 070A                         l108 060C                         l152 0598  
                       l155 059A                         l148 0498                         l666 0670  
                       l851 0736                         l659 0668                         l847 0726  
                       l871 06D6                         l849 072C                         l881 06E2  
                       l873 06D8                         l875 06DA                         l867 06C2  
                       l883 073A                         l891 06FA                         l877 06DC  
                       l869 06C4                         l885 070C                         l893 0704  
                       l879 06DE                         l895 0706                         l887 06E8  
                       l897 0708                         l889 06F0                         u400 05AC  
                       u401 05A8                         u410 05C2                         u411 05BE  
                       u420 05D8                         u421 05D4                         u430 05EE  
                       u431 05EA                         u440 0604                         u520 0620  
                       u600 00B8                         u441 0600                         u521 061C  
                       u601 00B4                         u530 063E                         u610 00F2  
                       u531 063A                         u611 00EE                         u540 0654  
                       u700 0228                         u620 0118                         _ISR 0008  
                       u541 0650                         u701 0224                         u621 0114  
                       u550 053C                         u710 0242                         u630 0132  
                       u551 0538                         u711 023E                         u631 012E  
                       u560 0562                         u800 0340                         u720 025C  
                       u640 0156                         u561 055E                         u801 033C  
                       u721 0258                         u641 0152                         u570 0590  
                       u810 0370                         u730 028C                         u650 0186  
                       u571 058C                         u811 036C                         u731 0288  
                       u651 0182                         u900 0482                         u820 03A4  
                       u740 02A4                         u660 01A0                         u580 0062  
                       u901 047E                         u821 03A0                         u741 02A0  
                       u661 019C                         u581 005E                         u910 0684  
                       u830 03BC                         u750 02BE                         u670 01C4  
                       u590 0088                         u911 0680                         u831 03B8  
                       u751 02BA                         u671 01C0                         u591 0084  
                       u920 0694                         u840 03D4                         u760 02D8  
                       u680 01F4                         u921 0690                         u841 03D0  
                       u761 02D4                         u681 01F0                         u930 06AC  
                       u850 03EE                         u770 02F2                         u690 020E  
                       u931 06A8                         u851 03EA                         u771 02EE  
                       u691 020A                         u940 06BC                         u860 041E  
                       u780 030C                         u941 06B8                         u861 041A  
                       u781 0308                         u870 0436                         u790 0326  
                       u871 0432                         u791 0322                         u880 0450  
                       u881 044C                         u890 046A                         u891 0466  
                      ?_ISR 0001                        l1011 05AC                        l1021 05E0  
                      l1013 05B4                        l1101 006C                        l1023 05EE  
                      l1015 05C2                        l1111 00B8                        l1103 006E  
                      l1025 05F6                        l1017 05CA                        l1009 059E  
                      l1201 046A                        l1121 00FE                        l1113 00C4  
                      l1105 0088                        l1027 0604                        l1019 05D8  
                      l1211 0694                        l1203 0482                        l1123 0118  
                      l1131 016C                        l1115 00CE                        l1107 0094  
                      l1213 069A                        l1205 048C                        l1133 0186  
                      l1141 01DA                        l1125 0132                        l1117 00D8  
                      l1109 009E                        l1221 04BA                        l1215 06AC  
                      l1207 0674                        l1071 0628                        l1151 025C  
                      l1143 01F4                        l1135 01A0                        l1127 0156  
                      l1119 00F2                        l1223 04C6                        l1217 06BC  
                      l1209 0684                        l1081 0662                        l1073 0630  
                      l1161 02BE                        l1153 0268                        l1145 020E  
                      l1137 01C4                        l1129 0162                        l1225 04CA  
                      l1075 063E                        l1067 060E                        l1083 051E  
                      l1163 02D8                        l1171 0340                        l1147 0228  
                      l1155 0272                        l1139 01D0                        l1227 0506  
                      l1219 049A                        l1077 0654                        l1069 0620  
                      l1093 0594                        l1085 053C                        l1181 038A  
                      l1173 034C                        l1165 02F2                        l1157 028C  
                      l1149 0242                        l1229 050C                        l1079 065C  
                      l1087 0562                        l1191 03F8                        l1183 03A4  
                      l1167 030C                        l1159 02A4                        l1175 0356  
                      l1089 056A                        l1185 03BC                        l1193 0404  
                      l1177 0370                        l1169 0326                        l1097 0054  
                      l1195 041E                        l1187 03D4                        l1179 037C  
                      l1099 0062                        l1197 0436                        l1189 03EE  
                      l1199 0450                        i2l50 0048                        i2l51 004A  
                      i2l52 004C                        _main 049A                        fsr2h 000FDA  
                      indf2 000FDF                        fsr2l 000FD9                        btemp 0022  
                      start 0050            __end_of_DAC_init 073A                ___param_bank 000000  
                     ??_ISR 0001                  _Comp1_init 06C2               ??_Lights_init 0001  
                     ?_main 0001             __end_of___lwmod 0672                       _TMR0H 000FD4  
                     _TMR0L 000FD3                       ttemp5 0023                       ttemp6 0026  
                     ttemp7 002A                       status 000FD8                       wtemp8 0023  
           __initialization 0746            __end_of_LeapYear 059C                __end_of_main 051E  
                    ??_main 001A               __activetblptr 000000               main@dayofweek 001D  
       __end_of_Lights_init 0726                      i2l1041 000A                      i2l1051 0034  
                    i2l1043 001A                      i2l1053 0042                      i2l1045 001C  
                    i2l1047 0024                      i2l1049 0026           _LEDarray_disp_bin 059C  
                _SmallHours 0672          ?_LEDarray_disp_bin 0001               ??_Timer0_init 0001  
               ?_Comp1_init 0001                   ??___lwmod 0005                  _Timekeeper 0054  
       ??_LEDarray_disp_bin 0001                      isa$std 000001                   ?_DAC_init 0001  
 __end_of_LEDarray_disp_bin 060E                  __accesstop 0060     __end_of__initialization 0746  
          LeapYear@leapyear 000A            Timekeeper@pmonth 000D               ___rparam_used 000001  
           _Interrupts_init 073A              __pcstackCOMRAM 0001         __end_of_Timer0_init 070C  
               _Lights_init 070C                  ??_DAC_init 0001                   ?_LeapYear 0006  
       __size_of_Comp1_init 0026              Timekeeper@pday 000F                 ?_SmallHours 0001  
               ?_Timekeeper 000B                     i2u50_40 0034                     i2u50_41 0030  
                   i2u51_40 0042                     i2u51_41 003E                     i2u49_40 001A  
                   i2u49_41 0016                  ??_LeapYear 0008  __size_of_LEDarray_disp_bin 0072  
   __end_of_Interrupts_init 0746            SmallHours@minute 0001                     __Hparam 0000  
                   __Lparam 0000                 _Timer0_init 06E8                     ___lwmod 060E  
                   __pcinit 0746                     __ramtop 0E00                     __ptext0 049A  
                   __ptext1 06E8                     __ptext2 0054                     __ptext3 051E  
                   __ptext4 060E                     __ptext5 0672                     __ptext6 070C  
                   __ptext7 059C                     __ptext8 073A                     __ptext9 06C2  
              __size_of_ISR 0048         __size_of_SmallHours 0050                     main@DST 001C  
                   main@day 001F        end_of_initialization 0746         __size_of_Timekeeper 0446  
                   postdec2 000FDD                ??_Comp1_init 0001                     postinc2 000FDE  
                 _TRISAbits 000F81                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88           Timekeeper@pminute 0013           __size_of_DAC_init 0014  
        __end_of_Comp1_init 06E8                 _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1  
          ?_Interrupts_init 0001                  main@minute 001E                ?_Lights_init 0001  
       start_initialization 0746                 __end_of_ISR 0050           __size_of_LeapYear 007E  
              ??_SmallHours 0002                ??_Timekeeper 0019             Timekeeper@phour 0011  
           Timekeeper@pyear 000B          __end_of_SmallHours 06C2               Timekeeper@DST 0017  
        __end_of_Timekeeper 049A                ?_Timer0_init 0001                   __pintcode 0008  
                  ?___lwmod 0001                    _DAC_init 0726                    _LATAbits 000F79  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
                  _PIE0bits 000E29                    _PIE2bits 000E2B                    _PIR0bits 000E33  
                  _PIR2bits 000E35        __size_of_Lights_init 001A                   main@month 0021  
                _CM1NCHbits 000ED2                  _CM1PCHbits 000ED3                    _LeapYear 051E  
                  __Hrparam 0000                    __Lrparam 0000            __size_of___lwmod 0064  
                _T0CON0bits 000FD5                  _T0CON1bits 000FD6                    __ptext10 0726  
   LEDarray_disp_bin@number 0001              SmallHours@hour 0002               __size_of_main 0084  
                  isa$xinst 000000    __size_of_Interrupts_init 000C                    int$flags 0022  
      __size_of_Timer0_init 0024                    main@hour 0020                    main@year 001A  
                _INTCONbits 000FF2                    intlevel2 0000                _DAC1CON0bits 000EC6  
              _DAC1CON1bits 000EC7            ___lwmod@dividend 0001                LeapYear@year 0006  
           ___lwmod@divisor 0003             ___lwmod@counter 0005  
